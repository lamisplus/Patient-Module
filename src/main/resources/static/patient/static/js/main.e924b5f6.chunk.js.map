{"version":3,"sources":["api.js","main/webapp/components/RegisterPatient.js","main/webapp/components/PatientCard.js","main/webapp/components/PatientDashboard.js","main/webapp/components/Dashboard.js","App.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","library","add","faCheckSquare","faCoffee","faEdit","faTrash","useStyles","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","flexGrow","maxWidth","demo","backgroundColor","palette","background","default","inline","schema","yup","shape","dateOfRegistration","required","hospitalNumber","firstName","middleName","nullable","lastName","sex","employmentStatus","highestQualification","maritalStatus","dob","pnumber","altPhonenumber","email","address","landmark","countryId","stateId","district","UserRegistration","props","patientId","_useForm","useForm","resolver","yupResolver","register","setValue","getValues","setError","handleSubmit","errors","formState","_useState","useState","Date","toISOString","substr","replace","_useState2","Object","slicedToArray","today","_useState3","_useState4","contacts","setContacts","_useState5","_useState6","saving","_useState7","_useState8","showRelative","setShowRelative","_useState9","_useState10","editRelative","setEditRelative","_useState11","_useState12","genders","setGenders","_useState13","_useState14","maritalStatusOptions","setMaritalStatusOptions","_useState15","_useState16","educationOptions","setEducationOptions","_useState17","_useState18","occupationOptions","setOccupationOptions","_useState19","_useState20","relationshipOptions","setRelationshipOptions","_useState21","_useState22","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","_useState23","_useState24","stateUnitOptions","setStateUnitOptions","_useState25","_useState26","districtUnitOptions","setDistrictUnitOptions","userDetail","state","user","classes","history","useHistory","locationState","useLocation","getPatient","useCallback","asyncToGenerator","regenerator_default","a","mark","_callee","response","patient","_contacts","identifiers","contactPoint","phone","altphone","country","gender","education","stateOptions","districtOptions","wrap","_context","prev","next","axios","concat","baseUrl","headers","Authorization","sent","data","contact","JSON","parse","identifier","find","obj","type","length","firstname","otherName","surname","value","id","format","dateOfBirth","loadOrganisationUnitsByParentId","city","line","stop","onSubmit","_ref2","_callee2","patientForm","_context2","active","organisationUnitId","postalCode","deceased","deceasedDateTime","genderId","assignerId","maritalStatusId","educationId","employmentStatusId","push","put","post","t0","console","log","_x","apply","this","arguments","loadGenders","_callee3","_context3","loadMaritalStatus","_callee4","_context4","loadEducation","_callee5","_context5","loadOccupation","_callee6","_context6","loadRelationships","_callee7","_context7","loadTopLevelCountry","_callee8","_context8","_ref9","_callee9","parentId","_context9","abrupt","_x2","onCountryChange","_ref10","_callee10","e","_context10","target","_x3","onStateChange","_ref11","_callee11","_context11","_x4","useEffect","genderRows","maritalStatusRows","educationRows","occupationRows","relationshipRows","topLevelUnitCountryRows","stateRows","districtRows","map","index","react_default","createElement","key","maritalStatusOption","educationOption","occupationOption","relationshipOption","topLevelUnitCountryOption","name","stateUnitOption","districtUnitOption","Fragment","react_toastify","autoClose","hideProgressBar","Card","className","CardContent","react_router_dom","to","pathname","Button","variant","color","startIcon","index_esm","style","textTransform","Form","error","FormGroup","Label","for","assign","max","message","placeholder","onChange","item","relationshipId","relationship","getRelationship","onClick","relative","handleEditRelative","index_es","icon","setTimeout","splice","handleDeleteRelative","relationshipType","cfirstName","cmiddleName","clastName","contactPhoneNumber","contactEmail","contactAddress","fullName","shouldFocus","Add_default","Spinner","Save_default","Cancel_default","withStyles","heading","fontSize","typography","pxToRem","secondaryHeading","text","secondary","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","link","primary","main","textDecoration","&:hover","patientObj","Accordion","defaultExpanded","AccordionSummary","Row","Col","md","root2","getHospitalNumber","birthDate","split","age_now","getFullYear","m","getMonth","getDate","calculate_age","phoneContact","getPhone","addresses","getAddress","Label_Label","Group","size","AccordionDetails","Button_Button","content","label","basic","pointing","as","classNames","Typography","Detail","Divider","AccordionActions","Card_Card","CardContent_CardContent","components_PatientCard","SyncList","& > *","input","success","patients","setPatients","loading","modal","setModal","setPatient","loadPatients","onDelete","delete","reload","onCancelDelete","es_Card","CardBody","fa_index_esm","dist_default","title","columns","field","filtering","isLoading","row","age","undefined","status","actions","menu_button_esm","border","borderRadius","aria-hidden","md_index_esm","toggle","currentId","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","pageSize","debounceInterval","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","App","react_router","path","RegisterPatientPage","PatientDashboardPage","Dashboard","components_PatientDashboard","RegisterPatient","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kgBAAeA,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QAASC,IAAI,OAC3DC,EAAM,QC4BpBC,IAAQC,IAAIC,IAAeC,IAAUC,IAAQC,KAE7C,IAAMC,EAAYC,YAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACFC,SAAU,EACVC,SAAU,KAEdC,KAAM,CACFC,gBAAiBpB,EAAMqB,QAAQC,WAAWC,SAE9CC,OAAQ,CACJpB,QAAS,aAIXqB,EAASC,MAAaC,MAAM,CAC9BC,mBAAoBF,MAAWG,WAC/BC,eAAgBJ,MAAaG,WAC7BE,UAAWL,MAAaG,WACxBG,WAAYN,MAAaO,WACzBC,SAAUR,MAAaG,WACvBM,IAAKT,MAAaG,WAClBO,iBAAkBV,MAAaG,WAC/BQ,qBAAsBX,MAAaG,WACnCS,cAAeZ,MAAaG,WAC5BU,IAAKb,MAAWG,WAChBW,QAASd,MAAaG,WACtBY,eAAgBf,MAAaO,WAC7BS,MAAOhB,MAAaO,WACpBU,QAASjB,MAAaO,WACtBW,SAAUlB,MAAaO,WACvBY,UAAWnB,MAAaG,WACxBiB,QAASpB,MAAaG,WACtBkB,SAAUrB,MAAaO,aA06BZe,EAv6BU,SAACC,GAAU,IAuB5BC,EAvB4BC,EACyDC,YAAQ,CAC7FC,SAAUC,YAAY7B,KADlB8B,EADwBJ,EACxBI,SAAUC,EADcL,EACdK,SAAUC,EADIN,EACJM,UAAWC,EADPP,EACOO,SAAUC,EADjBR,EACiBQ,aAA2BC,EAD5CT,EAC+BU,UAAaD,OAD5CE,EAINC,oBAAS,IAAIC,MAAOC,cAAcC,OAAO,EAAG,IAAIC,QAAQ,IAAK,MAJvDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAIzBS,EAJyBH,EAAA,GAAAI,GAAAJ,EAAA,GAKAL,mBAAS,KALTU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAKzBE,EALyBD,EAAA,GAKfE,EALeF,EAAA,GAAAG,EAMJb,oBAAS,GANLc,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAMzBE,EANyBD,EAAA,GAAAE,GAAAF,EAAA,GAOQd,oBAAS,IAPjBiB,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAOzBE,EAPyBD,EAAA,GAOXE,EAPWF,EAAA,GAAAG,EAQQpB,mBAAS,MARjBqB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAQzBE,EARyBD,EAAA,GAQXE,GARWF,EAAA,GAAAG,GASHxB,mBAAS,IATNyB,GAAAnB,OAAAC,EAAA,EAAAD,CAAAkB,GAAA,GASzBE,GATyBD,GAAA,GAShBE,GATgBF,GAAA,GAAAG,GAUuB5B,mBAAS,IAVhC6B,GAAAvB,OAAAC,EAAA,EAAAD,CAAAsB,GAAA,GAUzBE,GAVyBD,GAAA,GAUHE,GAVGF,GAAA,GAAAG,GAWehC,mBAAS,IAXxBiC,GAAA3B,OAAAC,EAAA,EAAAD,CAAA0B,GAAA,GAWzBE,GAXyBD,GAAA,GAWPE,GAXOF,GAAA,GAAAG,GAYiBpC,mBAAS,IAZ1BqC,GAAA/B,OAAAC,EAAA,EAAAD,CAAA8B,GAAA,GAYzBE,GAZyBD,GAAA,GAYNE,GAZMF,GAAA,GAAAG,GAaqBxC,mBAAS,IAb9ByC,GAAAnC,OAAAC,EAAA,EAAAD,CAAAkC,GAAA,GAazBE,GAbyBD,GAAA,GAaJE,GAbIF,GAAA,GAAAG,GAcmC5C,mBAAS,IAd5C6C,GAAAvC,OAAAC,EAAA,EAAAD,CAAAsC,GAAA,GAczBE,GAdyBD,GAAA,GAcGE,GAdHF,GAAA,GAAAG,GAeehD,mBAAS,IAfxBiD,GAAA3C,OAAAC,EAAA,EAAAD,CAAA0C,GAAA,GAezBE,GAfyBD,GAAA,GAePE,GAfOF,GAAA,GAAAG,GAgBqBpD,mBAAS,IAhB9BqD,GAAA/C,OAAAC,EAAA,EAAAD,CAAA8C,GAAA,GAgBzBE,GAhByBD,GAAA,GAgBJE,GAhBIF,GAAA,GAiB1BG,GAAatE,EAAM7D,UAAY6D,EAAM7D,SAASoI,MAAQvE,EAAM7D,SAASoI,MAAMC,KAAO,KAClFC,GAAU5H,IACV6H,GAAUC,cAGVC,GADWC,cACcN,MAE/BtE,EAAY2E,GAAgBA,GAAc3E,UAAY,KAEtD,IAgBM6E,GAAaC,sBAAW3D,OAAA4D,EAAA,EAAA5D,CAAA6D,EAAAC,EAAAC,KAAC,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA9F,EAAA+F,EAAA5G,EAAA6G,EAAAjG,EAAAkG,EAAAC,EAAAC,EAAA1G,EAAA2G,EAAAzG,EAAA0G,EAAAC,EAAA,OAAAf,EAAAC,EAAAe,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACvBnG,EADuB,CAAAiG,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAEAC,IAAMhK,IAAN,GAAAiK,OAAaC,EAAb,YAAAD,OAA+BrG,GAAa,CAAEuG,QAAS,CAACC,cAAA,UAAAH,OAA4BtK,MAFpF,UAEjBqJ,EAFiBa,EAAAQ,KAGjBpB,EAAUD,EAASsB,KACnBlF,EAAW6D,EAAQsB,QAAUC,KAAKC,MAAMxB,EAAQsB,SAAW,GACjElF,EAAYD,EAASmF,SACfpB,EAAcqB,KAAKC,MAAMxB,EAAQyB,YACjCrH,EAAUmH,KAAKC,MAAMxB,EAAQ5F,SAC7B+F,EAAeoB,KAAKC,MAAMxB,EAAQG,cAClC5G,EAAiB2G,EAAYuB,WAAWC,KAAK,SAAAC,GAAG,MAAgB,kBAAZA,EAAIC,OACxDxB,EAAQD,EAAaA,aAAauB,KAAK,SAAAC,GAAG,MAAgB,SAAZA,EAAIC,OAClDzH,EAAQgG,EAAaA,aAAauB,KAAK,SAAAC,GAAG,MAAgB,SAAZA,EAAIC,OAClDvB,EAAWF,EAAaA,aAAauB,KAAK,SAAAC,GAAG,MAAgB,YAAZA,EAAIC,OACrDtB,EAAUlG,GAAWA,EAAQA,SAAWA,EAAQA,QAAQyH,OAAS,EAAIzH,EAAQA,QAAQ,GAAK,KAC1FmG,EAASgB,KAAKC,MAAMxB,EAAQO,QAC5B1G,EAAmB0H,KAAKC,MAAMxB,EAAQnG,kBACtC2G,EAAYe,KAAKC,MAAMxB,EAAQQ,WAC/BzG,EAAgBwH,KAAKC,MAAMxB,EAAQjG,eACzCkB,EAAS,qBAAsB+E,EAAQ3G,oBACvC4B,EAAS,YAAa+E,EAAQ8B,WAC9B7G,EAAS,aAAc+E,EAAQ+B,WAC/B9G,EAAS,WAAY+E,EAAQgC,SAC7B/G,EAAS,iBAAkB1B,EAAiBA,EAAe0I,MAAQ,IACnEhH,EAAS,gBAAiBlB,EAAcmI,IACxCjH,EAAS,mBAAoBpB,EAAiBqI,IAC9CjH,EAAS,MAAOsF,EAAO2B,IACvBjH,EAAS,uBAAwBuF,EAAU0B,IAC3CjH,EAAS,MAAOkH,YAAO,IAAI1G,KAAKuE,EAAQoC,aAAc,gBAClD9B,EA5BmB,CAAAM,EAAAE,KAAA,gBA6BnB7F,EAAS,YAAaqF,EAAQhG,WA7BXsG,EAAAE,KAAA,GA8BQuB,GAAgC/B,EAAQhG,WA9BhD,eA8BbmG,EA9BaG,EAAAQ,KA+BnBzC,GAAoB8B,GACpBxF,EAAS,UAAWqF,EAAQ/F,SAhCTqG,EAAAE,KAAA,GAiCWuB,GAAgC/B,EAAQ/F,SAjCnD,QAiCbmG,EAjCaE,EAAAQ,KAkCnBrC,GAAuB2B,GACvBzF,EAAS,WAAYqF,EAAQ9F,UAC7BS,EAAS,UAAWqF,EAAQgC,MAC5BrH,EAAS,WAAYqF,EAAQiC,KAAK,IArCf,QAuCvBtH,EAAS,UAAWmF,EAAQA,EAAM6B,MAAQ,MAC1ChH,EAAS,QAASd,EAAQA,EAAM8H,MAAQ,MACxChH,EAAS,iBAAkBoF,EAAWA,EAAS4B,MAAQ,MAzChC,yBAAArB,EAAA4B,SAAA1C,MA2C5B,IAoDG2C,GAAQ,eAAAC,EAAA5G,OAAA4D,EAAA,EAAA5D,CAAA6D,EAAAC,EAAAC,KAAG,SAAA8C,EAAOtB,GAAP,IAAAuB,EAAAxC,EAAAjG,EAAAD,EAAA,OAAAyF,EAAAC,EAAAe,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,UAAA+B,EAAAhC,KAAA,EAEH+B,EAAc,CAChBE,QAAQ,EACR1I,QAAS,CACL,CACIkI,KAAQjB,EAAKjH,QACbE,UAAa+G,EAAK/G,UAClBE,SAAY6G,EAAK7G,SACjB+H,KAAQ,CACJlB,EAAKhH,UAET0I,mBAAsB,EACtBC,WAAc,GACdzI,QAAW8G,EAAK9G,UAGxB+G,QAASnF,EACTgE,aAAc,GACdiC,YAAa,IAAI3G,KAAK4F,EAAKrH,KAC3BiJ,UAAU,EACVC,iBAAkB,KAClBpB,UAAWT,EAAK7H,UAChB2J,SAAU9B,EAAKzH,IACf6H,WAAY,CACR,CACI2B,WAAc,EACdxB,KAAQ,iBACRK,MAASZ,EAAK9H,iBAGtBwI,UAAWV,EAAK5H,WAChB4J,gBAAiBhC,EAAKtH,cACtBiI,QAASX,EAAK1H,SACd2J,YAAajC,EAAKvH,qBAClByJ,mBAAoBlC,EAAKxH,iBACzBR,mBAAoBgI,EAAKhI,oBAEvB+G,EAAQ,CACVwB,KAAQ,QACRK,MAASZ,EAAKpH,SAEdoH,EAAKlH,QACCA,EAAQ,CACVyH,KAAQ,QACRK,MAASZ,EAAKlH,OAElByI,EAAYzC,aAAaqD,KAAKrJ,IAE9BkH,EAAKnH,iBACCA,EAAiB,CACnB0H,KAAQ,WACRK,MAASZ,EAAKnH,gBAElB0I,EAAYzC,aAAaqD,KAAKtJ,IAElC0I,EAAYzC,aAAaqD,KAAKpD,IAC1BzF,EAzDK,CAAAkI,EAAA/B,KAAA,gBAAA+B,EAAA/B,KAAA,EA0DkBC,IAAM0C,IAAN,GAAAzC,OAAaC,EAAb,YAAAD,OAA+BrG,GAAaiI,EAAa,CAAE1B,QAAS,CAACC,cAAA,UAAAH,OAA4BtK,MA1DnH,OAAAmM,EAAAzB,KAAAyB,EAAA/B,KAAA,wBAAA+B,EAAA/B,KAAA,GA4DkBC,IAAM2C,KAAN,GAAA1C,OAAcC,EAAd,YAAiC2B,EAAa,CAAE1B,QAAS,CAACC,cAAA,UAAAH,OAA4BtK,MA5DxG,QAAAmM,EAAAzB,KAAA,QA8DThC,GAAQoE,KAAK,KA9DJX,EAAA/B,KAAA,iBAAA+B,EAAAhC,KAAA,GAAAgC,EAAAc,GAAAd,EAAA,SAgETe,QAAQC,IAARhB,EAAAc,IAhES,yBAAAd,EAAAL,SAAAG,EAAA,kBAAH,gBAAAmB,GAAA,OAAApB,EAAAqB,MAAAC,KAAAC,YAAA,GAyFRC,GAAczE,sBAAW3D,OAAA4D,EAAA,EAAA5D,CAAA6D,EAAAC,EAAAC,KAAC,SAAAsE,IAAA,IAAApE,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAAAsD,EAAAvD,KAAA,EAAAuD,EAAAtD,KAAA,EAEDC,IAAMhK,IAAN,GAAAiK,OAAaC,EAAb,kCAAsD,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4BtK,MAF7F,OAElBqJ,EAFkBqE,EAAAhD,KAGxBjE,GAAW4C,EAASsB,MAHI+C,EAAAtD,KAAA,eAAAsD,EAAAvD,KAAA,EAAAuD,EAAAT,GAAAS,EAAA,iCAAAA,EAAA5B,SAAA2B,EAAA,iBAO7B,IACGE,GAAoB5E,sBAAW3D,OAAA4D,EAAA,EAAA5D,CAAA6D,EAAAC,EAAAC,KAAC,SAAAyE,IAAA,IAAAvE,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAA4D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,cAAAyD,EAAA1D,KAAA,EAAA0D,EAAAzD,KAAA,EAEPC,IAAMhK,IAAN,GAAAiK,OAAaC,EAAb,0CAA8D,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4BtK,MAF/F,OAExBqJ,EAFwBwE,EAAAnD,KAG9B7D,GAAwBwC,EAASsB,MAHHkD,EAAAzD,KAAA,eAAAyD,EAAA1D,KAAA,EAAA0D,EAAAZ,GAAAY,EAAA,iCAAAA,EAAA/B,SAAA8B,EAAA,iBAOnC,IACGE,GAAgB/E,sBAAW3D,OAAA4D,EAAA,EAAA5D,CAAA6D,EAAAC,EAAAC,KAAC,SAAA4E,IAAA,IAAA1E,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,cAAA4D,EAAA7D,KAAA,EAAA6D,EAAA5D,KAAA,EAEHC,IAAMhK,IAAN,GAAAiK,OAAaC,EAAb,qCAAyD,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4BtK,MAF9F,OAEpBqJ,EAFoB2E,EAAAtD,KAG1BzD,GAAoBoC,EAASsB,MAHHqD,EAAA5D,KAAA,eAAA4D,EAAA7D,KAAA,EAAA6D,EAAAf,GAAAe,EAAA,iCAAAA,EAAAlC,SAAAiC,EAAA,iBAO/B,IACGE,GAAiBlF,sBAAW3D,OAAA4D,EAAA,EAAA5D,CAAA6D,EAAAC,EAAAC,KAAC,SAAA+E,IAAA,IAAA7E,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,cAAA+D,EAAAhE,KAAA,EAAAgE,EAAA/D,KAAA,EAEJC,IAAMhK,IAAN,GAAAiK,OAAaC,EAAb,sCAA0D,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4BtK,MAF9F,OAErBqJ,EAFqB8E,EAAAzD,KAG3BrD,GAAqBgC,EAASsB,MAHHwD,EAAA/D,KAAA,eAAA+D,EAAAhE,KAAA,EAAAgE,EAAAlB,GAAAkB,EAAA,iCAAAA,EAAArC,SAAAoC,EAAA,iBAOhC,IACGE,GAAoBrF,sBAAW3D,OAAA4D,EAAA,EAAA5D,CAAA6D,EAAAC,EAAAC,KAAC,SAAAkF,IAAA,IAAAhF,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAnE,KAAA,EAAAmE,EAAAlE,KAAA,EAETC,IAAMhK,IAAN,GAAAiK,OAAaC,EAAb,wCAA4D,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4BtK,MAF3F,OAE1BqJ,EAF0BiF,EAAA5D,KAGhCjD,GAAuB4B,EAASsB,MAHA2D,EAAAlE,KAAA,eAAAkE,EAAAnE,KAAA,EAAAmE,EAAArB,GAAAqB,EAAA,iCAAAA,EAAAxC,SAAAuC,EAAA,iBAOnC,IACGE,GAAsBxF,sBAAW3D,OAAA4D,EAAA,EAAA5D,CAAA6D,EAAAC,EAAAC,KAAC,SAAAqF,IAAA,IAAAnF,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAAwE,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,cAAAqE,EAAArE,KAAA,EACbC,IAAMhK,IAAN,GAAAiK,OAAaC,EAAb,kDAAsE,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4BtK,MADjG,OAC9BqJ,EAD8BoF,EAAA/D,KAEpC7C,GAA8BwB,EAASsB,MAFH,wBAAA8D,EAAA3C,SAAA0C,MAGrC,IACG7C,GAA+B,eAAA+C,EAAAtJ,OAAA4D,EAAA,EAAA5D,CAAA6D,EAAAC,EAAAC,KAAG,SAAAwF,EAAOC,GAAP,IAAAvF,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAA4E,GAAA,cAAAA,EAAA1E,KAAA0E,EAAAzE,MAAA,cAAAyE,EAAAzE,KAAA,EACbC,IAAMhK,IAAN,GAAAiK,OAAaC,EAAb,iDAAAD,OAAoEsE,GAAY,CAAEpE,QAAS,CAACC,cAAA,UAAAH,OAA4BtK,MAD3G,cAC9BqJ,EAD8BwF,EAAAnE,KAAAmE,EAAAC,OAAA,SAE7BzF,EAASsB,MAFoB,wBAAAkE,EAAA/C,SAAA6C,MAAH,gBAAAI,GAAA,OAAAL,EAAArB,MAAAC,KAAAC,YAAA,GAI/ByB,GAAe,eAAAC,EAAA7J,OAAA4D,EAAA,EAAA5D,CAAA6D,EAAAC,EAAAC,KAAG,SAAA+F,EAAOC,GAAP,IAAApF,EAAA,OAAAd,EAAAC,EAAAe,KAAA,SAAAmF,GAAA,cAAAA,EAAAjF,KAAAiF,EAAAhF,MAAA,WAChB+E,EAAEE,OAAO9D,MADO,CAAA6D,EAAAhF,KAAA,eAAAgF,EAAAhF,KAAA,EAEWuB,GAAgCwD,EAAEE,OAAO9D,OAFpD,OAEVxB,EAFUqF,EAAA1E,KAGhBzC,GAAoB8B,GAHJqF,EAAAhF,KAAA,eAKhBnC,GAAoB,IALJ,wBAAAmH,EAAAtD,SAAAoD,MAAH,gBAAAI,GAAA,OAAAL,EAAA5B,MAAAC,KAAAC,YAAA,GAQfgC,GAAa,eAAAC,EAAApK,OAAA4D,EAAA,EAAA5D,CAAA6D,EAAAC,EAAAC,KAAG,SAAAsG,EAAON,GAAP,IAAAnF,EAAA,OAAAf,EAAAC,EAAAe,KAAA,SAAAyF,GAAA,cAAAA,EAAAvF,KAAAuF,EAAAtF,MAAA,WACd+E,EAAEE,OAAO9D,MADK,CAAAmE,EAAAtF,KAAA,eAAAsF,EAAAtF,KAAA,EAEgBuB,GAAgCwD,EAAEE,OAAO9D,OAFzD,OAERvB,EAFQ0F,EAAAhF,KAGdrC,GAAuB2B,GAHT0F,EAAAtF,KAAA,eAKd/B,GAAuB,IALT,wBAAAqH,EAAA5D,SAAA2D,MAAH,gBAAAE,GAAA,OAAAH,EAAAnC,MAAAC,KAAAC,YAAA,GASnBqC,oBAAU,WACNpC,KACAG,KACAG,KACAG,KACAG,KACAG,KACAzF,MACD,CAAC0E,GAAaG,GAAmBG,GAAeG,GAAgBG,GAAmBG,GAAqBzF,KAE3G,IAAI+G,GAAa,KACbC,GAAoB,KACpBC,GAAgB,KAChBC,GAAiB,KACjBC,GAAmB,KACnBC,GAA0B,KAC1BC,GAAY,KACZC,GAAe,KACf5J,IAAWA,GAAQ2E,OAAS,IAC5B0E,GAAarJ,GAAQ6J,IAAI,SAACxG,EAAQyG,GAAT,OACrBC,EAAArH,EAAAsH,cAAA,UAAQC,IAAK5G,EAAO2B,GAAID,MAAO1B,EAAO2B,IAAK3B,EAAO1I,YAGtDyF,IAAwBA,GAAqBuE,OAAS,IACtD2E,GAAoBlJ,GAAqByJ,IAAI,SAACK,EAAqBJ,GAAtB,OACzCC,EAAArH,EAAAsH,cAAA,UAAQC,IAAKC,EAAoBlF,GAAID,MAAOmF,EAAoBlF,IAAKkF,EAAoBvP,YAG7F6F,IAAoBA,GAAiBmE,OAAS,IAC9C4E,GAAgB/I,GAAiBqJ,IAAI,SAACM,EAAiBL,GAAlB,OACjCC,EAAArH,EAAAsH,cAAA,UAAQC,IAAKE,EAAgBnF,GAAID,MAAOoF,EAAgBnF,IAAKmF,EAAgBxP,YAGjFiG,IAAqBA,GAAkB+D,OAAS,IAChD6E,GAAiB5I,GAAkBiJ,IAAI,SAACO,EAAkBN,GAAnB,OACnCC,EAAArH,EAAAsH,cAAA,UAAQC,IAAKG,EAAiBpF,GAAID,MAAOqF,EAAiBpF,IAAKoF,EAAiBzP,YAGpFqG,IAAuBA,GAAoB2D,OAAS,IACpD8E,GAAmBzI,GAAoB6I,IAAI,SAACQ,EAAoBP,GAArB,OACvCC,EAAArH,EAAAsH,cAAA,UAAQC,IAAKI,EAAmBrF,GAAID,MAAOsF,EAAmBrF,IAAKqF,EAAmB1P,YAG1FyG,IAA8BA,GAA2BuD,OAAS,IAClE+E,GAA0BtI,GAA2ByI,IAAI,SAACS,EAA2BR,GAA5B,OACrDC,EAAArH,EAAAsH,cAAA,UAAQC,IAAKK,EAA0BtF,GAAID,MAAOuF,EAA0BtF,IAAKsF,EAA0BC,SAG/G/I,IAAoBA,GAAiBmD,OAAS,IAC9CgF,GAAYnI,GAAiBqI,IAAI,SAACW,EAAiBV,GAAlB,OAC7BC,EAAArH,EAAAsH,cAAA,UAAQC,IAAKO,EAAgBxF,GAAID,MAAOyF,EAAgBxF,IAAKwF,EAAgBD,SAGjF3I,IAAuBA,GAAoB+C,OAAS,IACpDiF,GAAehI,GAAoBiI,IAAI,SAACY,EAAoBX,GAArB,OACnCC,EAAArH,EAAAsH,cAAA,UAAQC,IAAKQ,EAAmBzF,GAAID,MAAO0F,EAAmBzF,IAAKyF,EAAmBF,SAQ9F,OACIR,EAAArH,EAAAsH,cAAAD,EAAArH,EAAAgI,SAAA,KACIX,EAAArH,EAAAsH,cAACW,EAAA,EAAD,CAAgBC,UAAW,IAAMC,iBAAe,IAChDd,EAAArH,EAAAsH,cAACc,EAAA,EAAD,CAAMC,UAAW9I,GAAQ/G,YACrB6O,EAAArH,EAAAsH,cAACgB,EAAA,EAAD,KACIjB,EAAArH,EAAAsH,cAACiB,EAAA,EAAD,CACIC,GAAI,CACAC,SAAU,IACVpJ,MAAO,UAEXgI,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNP,UAAU,oBACVQ,UAAWxB,EAAArH,EAAAsH,cAACwB,EAAA,EAAD,OAEXzB,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAAEC,cAAe,eAA9B,WAGR3B,EAAArH,EAAAsH,cAAA,WACAD,EAAArH,EAAAsH,cAAA,WACAD,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,uBACXhB,EAAArH,EAAAsH,cAAC2B,EAAA,EAAD,CAAMpG,SAAUrH,EAAaqH,GA5KjC,SAACpH,GACbuI,QAAQkF,MAAMzN,MA4KM4L,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,QACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,eACXhB,EAAArH,EAAAsH,cAAA,MAAIe,UAAU,cAA2B,OAAbjJ,GAAoB,oBAAsB,0BAG1EiI,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,aACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,cACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,sBAAX,yBACAhC,EAAArH,EAAAsH,cAAA,QAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,OACL6F,KAAK,qBACLvF,GAAG,qBACHiH,IAAKnN,GACDhB,EAAS,wBAEhBK,EAAOhC,oBAAsB4N,EAAArH,EAAAsH,cAAA,SAAI7L,EAAOhC,mBAAmB+P,WAIpEnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,aAAX,iBACAhC,EAAArH,EAAAsH,cAAA,QAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,OACL6F,KAAK,iBACLvF,GAAG,kBACClH,EAAS,oBAEhBK,EAAO9B,gBAAkB0N,EAAArH,EAAAsH,cAAA,SAAI7L,EAAO9B,eAAe6P,YAKhEnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,aAAX,gBACAhC,EAAArH,EAAAsH,cAAA,QAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,OACL6F,KAAK,YACLvF,GAAG,aACClH,EAAS,eAEhBK,EAAO7B,WAAayN,EAAArH,EAAAsH,cAAA,SAAI7L,EAAO7B,UAAU4P,WAIlDnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,oBACA/B,EAAArH,EAAAsH,cAAA,QAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,OACL6F,KAAK,aACLvF,GAAG,cACClH,EAAS,gBAEhBK,EAAO5B,YAAcwN,EAAArH,EAAAsH,cAAA,SAAI7L,EAAO5B,WAAW2P,WAIpDnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,oBACA/B,EAAArH,EAAAsH,cAAA,QAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,OACL6F,KAAK,WACLvF,GAAG,YACClH,EAAS,cAEhBK,EAAO1B,UAAYsN,EAAArH,EAAAsH,cAAA,SAAI7L,EAAO1B,SAASyP,YAKpDnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,cACA/B,EAAArH,EAAAsH,cAAA,SAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVR,KAAK,MACLvF,GAAG,OACClH,EAAS,QAEbiM,EAAArH,EAAAsH,cAAA,UAAQjF,MAAO,KACdsE,IAEJlL,EAAOzB,KAAOqN,EAAArH,EAAAsH,cAAA,SAAI7L,EAAOzB,IAAIwP,WAItCnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,4BACA/B,EAAArH,EAAAsH,cAAA,SAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVR,KAAK,mBACLvF,GAAG,oBACClH,EAAS,qBAEbiM,EAAArH,EAAAsH,cAAA,UAAQjF,MAAO,KACdyE,IAEJrL,EAAO1B,UAAYsN,EAAArH,EAAAsH,cAAA,SAAI7L,EAAO1B,SAASyP,WAIhDnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,gCACA/B,EAAArH,EAAAsH,cAAA,SAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVR,KAAK,uBACLvF,GAAG,wBACClH,EAAS,yBAEbiM,EAAArH,EAAAsH,cAAA,UAAQjF,MAAO,KACdwE,IAEJpL,EAAOvB,sBAAwBmN,EAAArH,EAAAsH,cAAA,SAAI7L,EAAOvB,qBAAqBsP,YAK5EnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAW,OACZhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,uBACA/B,EAAArH,EAAAsH,cAAA,SAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVR,KAAK,gBACLvF,GAAG,iBACClH,EAAS,kBAEbiM,EAAArH,EAAAsH,cAAA,UAAQjF,MAAO,KACduE,IAEJnL,EAAOtB,eAAiBkN,EAAArH,EAAAsH,cAAA,SAAI7L,EAAOtB,cAAcqP,WAI1DnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,sBACA/B,EAAArH,EAAAsH,cAAA,QAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,OACL6F,KAAK,MACLvF,GAAG,MACHiH,IAAKnN,GACDhB,EAAS,SAEhBK,EAAOrB,KAAOiN,EAAArH,EAAAsH,cAAA,SAAI7L,EAAOrB,IAAIoP,eAQtDnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,QACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,eACXhB,EAAArH,EAAAsH,cAAA,MAAIe,UAAU,cAAd,oBAGJhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,aACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAW,OACZhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,uBACA/B,EAAArH,EAAAsH,cAAA,QAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,MACL6F,KAAK,UACLvF,GAAG,WACClH,EAAS,WALjB,CAMIqO,YAAY,qBAEfhO,EAAOpB,SAAWgN,EAAArH,EAAAsH,cAAA,SAAI7L,EAAOpB,QAAQmP,WAI9CnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,uBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,0BACA/B,EAAArH,EAAAsH,cAAA,QAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,MACL6F,KAAK,iBACLvF,GAAG,kBACClH,EAAS,kBALjB,CAMIqO,YAAY,qBAEfhO,EAAOnB,gBAAkB+M,EAAArH,EAAAsH,cAAA,SAAI7L,EAAOnB,eAAekP,WAI5DnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,uBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,cACA/B,EAAArH,EAAAsH,cAAA,QAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,QACL6F,KAAK,QACLvF,GAAG,SACClH,EAAS,WAEhBK,EAAOlB,OAAS8M,EAAArH,EAAAsH,cAAA,SAAI7L,EAAOlB,MAAMiP,YAK9CnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,gBACA/B,EAAArH,EAAAsH,cAAA,SAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,OACL6F,KAAK,UACLvF,GAAG,WACClH,EAAS,aALjB,CAMIsO,SAAU,SAACzD,GAAD,OAAOH,GAAgBG,MACjCoB,EAAArH,EAAAsH,cAAA,UAAQjF,MAAO,KACd2E,IAEJvL,EAAOiF,SAAW2G,EAAArH,EAAAsH,cAAA,SAAI7L,EAAOiF,QAAQ8I,WAI9CnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,cACA/B,EAAArH,EAAAsH,cAAA,SAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,OACL6F,KAAK,UACLvF,GAAG,WACClH,EAAS,WALjB,CAMIsO,SAAU,SAACzD,GAAD,OAAOI,GAAcJ,MAC/BoB,EAAArH,EAAAsH,cAAA,UAAQjF,MAAO,KACd4E,MAKbI,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,8BACA/B,EAAArH,EAAAsH,cAAA,SAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,OACL6F,KAAK,WACLvF,GAAG,YACClH,EAAS,aACbiM,EAAArH,EAAAsH,cAAA,UAAQjF,MAAO,KACd6E,OAMjBG,EAAArH,EAAAsH,cAAA,OAAKe,UAAW,OACZhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,uBACA/B,EAAArH,EAAAsH,cAAA,QAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,OACL6F,KAAK,UACLvF,GAAG,WACClH,EAAS,aAEhBK,EAAOjB,SAAW6M,EAAArH,EAAAsH,cAAA,SAAI7L,EAAOjB,QAAQgP,WAI9CnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,iBACA/B,EAAArH,EAAAsH,cAAA,QAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,OACL6F,KAAK,WACLvF,GAAG,YACClH,EAAS,cAEhBK,EAAOhB,UAAY4M,EAAArH,EAAAsH,cAAA,SAAI7L,EAAOhB,SAAS+O,cAO5DnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,QACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,eACXhB,EAAArH,EAAAsH,cAAA,MAAIe,UAAU,cAAd,+BAEJhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,aACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OAEP9L,GAAYA,EAAS0F,OAAS,GAC1BoF,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,uBACXhB,EAAArH,EAAAsH,cAAA,SAAOyB,MAAO,CAAE1Q,MAAO,SACnBgP,EAAArH,EAAAsH,cAAA,aACAD,EAAArH,EAAAsH,cAAA,UACID,EAAArH,EAAAsH,cAAA,+BACAD,EAAArH,EAAAsH,cAAA,kBACAD,EAAArH,EAAAsH,cAAA,mBACAD,EAAArH,EAAAsH,cAAA,qBACAD,EAAArH,EAAAsH,cAAA,uBAGJD,EAAArH,EAAAsH,cAAA,aACC/K,EAAS4K,IAAI,SAACwC,EAAMvC,GACjB,OACIC,EAAArH,EAAAsH,cAAA,MAAIC,IAAKoC,EAAKvC,OACVC,EAAArH,EAAAsH,cAAA,UA9pBxC,SAACsC,GACrB,IAAMC,EAAevL,GAAoBwD,KAAK,SAAAC,GAAG,OAAIA,EAAIO,IAAMsH,IAC/D,OAAOC,EAAeA,EAAa5R,QAAU,GA4pBqB6R,CAAgBH,EAAKC,iBAC3BvC,EAAArH,EAAAsH,cAAA,WArqB9CuC,EAqqB6DF,GApqB9CvH,QAGZ,KAFCyH,EAAa3H,UAEK,KADlB2H,EAAa1H,UAAY0H,EAAa1H,UAAY,KAmqBRkF,EAAArH,EAAAsH,cAAA,WA5pBlC/G,EA4pB6DoJ,EAAKpJ,cA3pBtEA,EAAa8B,MAAQ,IA4pBiBgF,EAAArH,EAAAsH,cAAA,WA1pB5C9M,EA0pB6DmP,EAAKnP,UAzpBhEA,EAAQmI,MAAQnI,EAAQmI,KAAKV,OAAS,EAAIzH,EAAQmI,KAAK,GAAK,IA0pBlB0E,EAAArH,EAAAsH,cAAA,UACID,EAAArH,EAAAsH,cAAA,UAAQtF,KAAK,SACLqG,UAAU,2CACV0B,QAAS,SAAC9D,GAAD,OAtf1D,SAAC+D,EAAU5C,GAClC/L,EAAS,mBAAoB2O,EAASJ,gBACtCvO,EAAS,aAAc2O,EAAS9H,WAChC7G,EAAS,cAAe2O,EAAS7H,WACjC9G,EAAS,YAAa2O,EAAS5H,SAC/B/G,EAAS,qBAAsB2O,EAASzJ,aAAeyJ,EAASzJ,aAAa8B,MAAQ,IACrFhH,EAAS,iBAAkB2O,EAASxP,SAAWwP,EAASxP,QAAQmI,MAAQqH,EAASxP,QAAQmI,KAAKV,OAAS,EAAI+H,EAASxP,QAAQmI,KAAK,GAAK,IACtI5F,GAAgB,GAChBI,GAAgBiK,GA8ewE6C,CAAmBN,EAAMvC,KAC7CC,EAAArH,EAAAsH,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,UAJ9B,WAOI9C,EAAArH,EAAAsH,cAAA,UACItF,KAAK,SACLqG,UAAU,kCACV0B,QAAS,SAAC9D,GAAD,OAnfpD,SAACmB,GAC1BgD,WAAW,WACP7N,EAAS8N,OAAOjD,EAAO,GACvB5K,EAAYD,GACZQ,GAAgB,GAChBA,GAAgB,IACjB,KA6eiFuN,CAAqBlD,KACrCC,EAAArH,EAAAsH,cAAC4C,EAAA,EAAD,CAAiBC,KAAK,aAtqB3E,IAAC3P,EAHU+F,EAVZsJ,OA8rBkBxC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,uBAEPvL,GACIuK,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,QACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,aACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,oBAAX,uBACAhC,EAAArH,EAAAsH,cAAA,SAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVR,KAAK,mBACLvF,GAAG,oBACClH,EAAS,qBACbiM,EAAArH,EAAAsH,cAAA,UAAQjF,MAAO,KACd0E,IAEJtL,EAAO8O,kBAAoBlD,EAAArH,EAAAsH,cAAA,SAAI7L,EAAO8O,iBAAiBf,WAIhEnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,cAAX,gBACAhC,EAAArH,EAAAsH,cAAA,QAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,OACL6F,KAAK,aACLvF,GAAG,cACClH,EAAS,gBAEhBK,EAAO+O,YAAcnD,EAAArH,EAAAsH,cAAA,SAAI7L,EAAO+O,WAAWhB,WAIpDnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,oBACA/B,EAAArH,EAAAsH,cAAA,QAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,OACL6F,KAAK,cACLvF,GAAG,eACClH,EAAS,iBAEhBK,EAAOgP,aAAepD,EAAArH,EAAAsH,cAAA,SAAI7L,EAAOgP,YAAYjB,WAItDnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,oBACA/B,EAAArH,EAAAsH,cAAA,QAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,OACL6F,KAAK,YACLvF,GAAG,aACClH,EAAS,eAEhBK,EAAOiP,WAAarD,EAAArH,EAAAsH,cAAA,SAAI7L,EAAOiP,UAAUlB,YAKtDnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,sBAAX,gBACAhC,EAAArH,EAAAsH,cAAA,QAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,OACL6F,KAAK,qBACLvF,GAAG,sBACClH,EAAS,wBAEhBK,EAAOkP,oBAAsBtD,EAAArH,EAAAsH,cAAA,SAAI7L,EAAOkP,mBAAmBnB,WAIpEnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,gBAAX,SACAhC,EAAArH,EAAAsH,cAAA,QAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,OACL6F,KAAK,eACLvF,GAAG,gBACClH,EAAS,kBAEhBK,EAAOmP,cAAgBvD,EAAArH,EAAAsH,cAAA,SAAI7L,EAAOmP,aAAapB,WAIxDnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,kBAAX,WACAhC,EAAArH,EAAAsH,cAAA,QAAApL,OAAAoN,OAAA,CACIjB,UAAU,eACVrG,KAAK,OACL6F,KAAK,iBACLvF,GAAG,kBACClH,EAAS,oBAEhBK,EAAOoP,gBAAkBxD,EAAArH,EAAAsH,cAAA,SAAI7L,EAAOoP,eAAerB,YAKhEnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,IACXhB,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACI1G,KAAK,SACL2G,QAAQ,YACRC,MAAM,UACNP,UAAW9I,GAAQ3G,OACnBmR,QAlvBrC,SAAC9D,GAC5B,IAAMsE,EAAmBjP,EAAU,oBAC7BkP,EAAalP,EAAU,cACvBmP,EAAcnP,EAAU,eACxBoP,EAAYpP,EAAU,aACtBqP,EAAqBrP,EAAU,sBAE/BuP,GADevP,EAAU,gBACRA,EAAU,mBACjC,GAAKiP,EAIL,GAAKC,EAIL,GAAKE,EAAL,CAKA,IAAMhJ,EAAU,CACZlH,QAAW,CACPmI,KAAQ,CACJkI,IAGRtK,aAAgB,CACZyB,KAAQ,QACRK,MAASsI,GAEbzI,UAAasI,EACbM,SAAYN,EAAa,IAAMC,EAAc,IAAMC,EACnDd,eAAkBW,EAClBnI,QAAWsI,EACXvI,UAAasI,GAEG,MAAhBvN,GACAX,EAAS8N,OAAOnN,EAAc,GAC9BV,EAAYD,EAAS6E,OAAOM,KAE5BlF,EAAYD,EAAS6E,OAAOM,IAEhC3E,GAAgB,QA1BZxB,EAAS,YAAa,CAAGyG,KAAM,SAAUwH,QAAS,wBAA0B,CAAEuB,aAAa,SAJ3FxP,EAAS,aAAc,CAAGyG,KAAM,SAAUwH,QAAS,yBAA2B,CAAEuB,aAAa,SAJ7FxP,EAAS,mBAAoB,CAAGyG,KAAM,SAAUwH,QAAS,4BAA8B,CAAEuB,aAAa,MAouB9C,QAWJ1D,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,IACXhB,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACI1G,KAAK,SACL2G,QAAQ,YACRC,MAAM,YACNP,UAAW9I,GAAQ3G,OACnBmR,QAjtB/B,WACjChN,GAAgB,KA2sB4C,gBAkBhCsK,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OACXhB,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACI1G,KAAK,SACL2G,QAAQ,YACRC,MAAM,UACNP,UAAW9I,GAAQ3G,OACnBiQ,UAAWxB,EAAArH,EAAAsH,cAAC0D,EAAAhL,EAAD,MACX+J,QArxBd,WACtBhN,GAAgB,KA8wBgB,iCAcXJ,EAAS0K,EAAArH,EAAAsH,cAAC2D,EAAA,EAAD,MAAc,GAExB5D,EAAArH,EAAAsH,cAAA,WAGQD,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACI1G,KAAK,SACL2G,QAAQ,YACRC,MAAM,UACNP,UAAW9I,GAAQ3G,OACnBiQ,UAAWxB,EAAArH,EAAAsH,cAAC4D,EAAAlL,EAAD,OAETrD,EAGE0K,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAAEC,cAAe,eAA9B,aAFA3B,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAAEC,cAAe,eAA9B,SAuBhB3B,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACIC,QAAQ,YACRN,UAAW9I,GAAQ3G,OACnBiQ,UAAWxB,EAAArH,EAAAsH,cAAC6D,EAAAnL,EAAD,MACX+J,QA7jBP,WACjBvK,GAAQoE,KAAK,OA8jBWyD,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAAEC,cAAe,eAA9B,kKCjxBjBoC,mBAjNA,SAAAvT,GAAK,MAAK,CACrBgB,KAAM,CACFR,MAAO,QAEXgT,QAAS,CACLC,SAAUzT,EAAM0T,WAAWC,QAAQ,KAEvCC,iBAAkB,CACdH,SAAUzT,EAAM0T,WAAWC,QAAQ,IACnC5C,MAAO/Q,EAAMqB,QAAQwS,KAAKC,WAE9BxB,KAAM,CACFyB,cAAe,SACfjT,OAAQ,GACRN,MAAO,IAEXwT,QAAS,CACL1T,WAAY,UAEhB2T,OAAQ,CACJC,UAAW,UAEfC,OAAQ,CACJC,WAAU,aAAA7K,OAAevJ,EAAMqB,QAAQgT,SACvCC,QAAO,GAAA/K,OAAKvJ,EAAMG,QAAQ,GAAnB,OAAAoJ,OAA8C,EAAnBvJ,EAAMG,QAAQ,GAAzC,OAEXoU,KAAM,CACFxD,MAAO/Q,EAAMqB,QAAQmT,QAAQC,KAC7BC,eAAgB,OAChBC,UAAW,CACPD,eAAgB,gBAmLbnB,CA9Kf,SAAqBtQ,GAAO,IAChByE,EAAYzE,EAAZyE,QACFkN,EAAa3R,EAAM2R,WAAa3R,EAAM2R,WAAa,GAmCzD,OACIpF,EAAArH,EAAAsH,cAAA,OAAKe,UAAW9I,EAAQ1G,MACpBwO,EAAArH,EAAAsH,cAACoF,EAAA,EAAD,CAAWC,iBAAe,GACtBtF,EAAArH,EAAAsH,cAACsF,EAAA,EAAD,KAEIvF,EAAArH,EAAAsH,cAACuF,GAAA,EAAD,KAEIxF,EAAArH,EAAAsH,cAACwF,GAAA,EAAD,CAAKC,GAAI,IACL1F,EAAArH,EAAAsH,cAACuF,GAAA,EAAD,CAAKxE,UAAW,QACZhB,EAAArH,EAAAsH,cAACwF,GAAA,EAAD,CAAKC,GAAI,GAAI1E,UAAW9I,EAAQyN,OAC5B3F,EAAArH,EAAAsH,cAAA,KAAGyB,MAAO,CAACuC,SAAU,SACfmB,EAAWrK,QAAU,KAAOqK,EAAWvK,UAAY,IAAMuK,EAAWtK,YAI9EkF,EAAArH,EAAAsH,cAACwF,GAAA,EAAD,CAAKC,GAAI,EAAG1E,UAAW9I,EAAQyN,OAC3C3F,EAAArH,EAAAsH,cAAA,YACK,IADL,qBAEsBD,EAAArH,EAAAsH,cAAA,SAnDZ,SAACzF,GACvB,IACMlI,EADcgI,KAAKC,MAAMC,GACIA,WAAWC,KAAK,SAAAC,GAAG,MAAgB,kBAAZA,EAAIC,OAC9D,OAAOrI,EAAiBA,EAAe0I,MAAQ,GAgDT4K,CAAkBR,EAAW5K,eAI3CwF,EAAArH,EAAAsH,cAACwF,GAAA,EAAD,CAAKC,GAAI,EAAG1E,UAAW9I,EAAQyN,OAC3C3F,EAAArH,EAAAsH,cAAA,+BACoBD,EAAArH,EAAAsH,cAAA,SAAImF,EAAWjK,eAGvB6E,EAAArH,EAAAsH,cAACwF,GAAA,EAAD,CAAKC,GAAI,EAAG1E,UAAW9I,EAAQyN,OAC3C3F,EAAArH,EAAAsH,cAAA,YACK,IADL,SAEUD,EAAArH,EAAAsH,cAAA,SAzDJ,SAAAlN,GAClB,IAAMgC,EAAQ,IAAIP,KAEZqR,GADY9S,EAAI+S,MAAM,KACV,IAAItR,KAAKzB,IACvBgT,EAAUhR,EAAMiR,cAAgBH,EAAUG,cACxCC,EAAIlR,EAAMmR,WAAaL,EAAUK,WAIvC,OAHID,EAAI,GAAY,IAANA,GAAWlR,EAAMoR,UAAYN,EAAUM,YACjDJ,IAEY,IAAZA,EACOE,EAAI,YAERF,EAAU,WA6CSK,CAAchB,EAAWjK,gBAG3B6E,EAAArH,EAAAsH,cAACwF,GAAA,EAAD,CAAKC,GAAI,GACrB1F,EAAArH,EAAAsH,cAAA,YACK,IADL,WAEa,IACTD,EAAArH,EAAAsH,cAAA,SAAI3F,KAAKC,MAAM6K,EAAW9L,QAAQ0B,SAG1BgF,EAAArH,EAAAsH,cAACwF,GAAA,EAAD,CAAKC,GAAI,EAAG1E,UAAW9I,EAAQyN,OAC3C3F,EAAArH,EAAAsH,cAAA,YACK,IADL,kBAEmBD,EAAArH,EAAAsH,cAAA,SAvDlB,SAAC/G,GACd,IACMmN,EADgB/L,KAAKC,MAAMrB,GACEA,aAAauB,KAAK,SAAAC,GAAG,MAAgB,SAAZA,EAAIC,OAChE,OAAO0L,EAAeA,EAAarL,MAAQ,GAoDRsL,CAASlB,EAAWlM,iBAG/B8G,EAAArH,EAAAsH,cAACwF,GAAA,EAAD,CAAKC,GAAI,EAAG1E,UAAW9I,EAAQyN,OAC3C3F,EAAArH,EAAAsH,cAAA,YACK,IADL,aAEcD,EAAArH,EAAAsH,cAAA,SAvDX,SAAC9M,GAChB,IAAMoT,EAAYjM,KAAKC,MAAMpH,GAE7B,OADaoT,GAAaA,EAAUpT,SAAWoT,EAAUpT,QAAQyH,OAAS,EAAI2L,EAAUpT,QAAQ,GAAGkI,KAAO,KAqD5EmL,CAAWpB,EAAWjS,SAA1B,OAIF6M,EAAArH,EAAAsH,cAACwF,GAAA,EAAD,CAAKC,GAAI,IACL1F,EAAArH,EAAAsH,cAACwG,GAAA,EAAMC,MAAP,KAEI1G,EAAArH,EAAAsH,cAACwG,GAAA,EAAD,CAAOlF,MAAO,OAAQoF,KAAM,QAA5B,kBAaxB3G,EAAArH,EAAAsH,cAAC2G,EAAA,EAAD,CAAkB5F,UAAW9I,EAAQsM,SACjCxE,EAAArH,EAAAsH,cAAA,OAAKe,UAAW9I,EAAQuM,QACpBzE,EAAArH,EAAAsH,cAAC4G,GAAA,EAAD,CACItF,MAAM,MACNuF,QAAQ,YAERC,MAAO,CAAEC,OAAO,EAAMzF,MAAO,MAAO0F,SAAU,OAAQH,QAAS,UAIvE9G,EAAArH,EAAAsH,cAAA,OAAKe,UAAW9I,EAAQuM,QACpBzE,EAAArH,EAAAsH,cAAC4G,GAAA,EAAD,CACIG,OAAK,EACLzF,MAAM,OACNuF,QAAQ,SACRhE,KAAK,OACLiE,MAAO,CACHG,GAAI,IACJF,OAAO,EACPzF,MAAO,OACP0F,SAAU,OACVH,QAAS,cAIrB9G,EAAArH,EAAAsH,cAAA,OAAKe,UAAW9I,EAAQuM,QACpBzE,EAAArH,EAAAsH,cAAC4G,GAAA,EAAD,CACIG,OAAK,EACLzF,MAAM,OACNuF,QAAQ,SACRhE,KAAK,OACLiE,MAAO,CACHG,GAAI,IACJF,OAAO,EACPzF,MAAO,OACP0F,SAAU,OACVH,QAAS,cAIrB9G,EAAArH,EAAAsH,cAAA,OAAKe,UAAWmG,IAAWjP,EAAQuM,OAAQvM,EAAQyM,SAC/C3E,EAAArH,EAAAsH,cAACmH,EAAA,EAAD,CAAY9F,QAAQ,WAChBtB,EAAArH,EAAAsH,cAACwG,GAAA,EAAD,CAAOlF,MAAO,MAAOoF,KAAM,QAA3B,mBAEI3G,EAAArH,EAAAsH,cAACwG,GAAA,EAAMY,OAAP,sBAGJrH,EAAArH,EAAAsH,cAACwG,GAAA,EAAD,CAAOlF,MAAO,QAASoF,KAAM,QAA7B,iBAEI3G,EAAArH,EAAAsH,cAACwG,GAAA,EAAMY,OAAP,mBAKhBrH,EAAArH,EAAAsH,cAACqH,EAAA,EAAD,MACAtH,EAAArH,EAAAsH,cAACsH,EAAA,EAAD,UC9IDxD,mBA5DA,SAAAvT,GAAK,MAAK,CACrBgB,KAAM,CACFR,MAAO,QAEXgT,QAAS,CACLC,SAAUzT,EAAM0T,WAAWC,QAAQ,KAEvCC,iBAAkB,CACdH,SAAUzT,EAAM0T,WAAWC,QAAQ,IACnC5C,MAAO/Q,EAAMqB,QAAQwS,KAAKC,WAE9BxB,KAAM,CACFyB,cAAe,SACfjT,OAAQ,GACRN,MAAO,IAEXwT,QAAS,CACL1T,WAAY,UAEhB2T,OAAQ,CACJC,UAAW,UAEfC,OAAQ,CACJC,WAAU,aAAA7K,OAAevJ,EAAMqB,QAAQgT,SACvCC,QAAO,GAAA/K,OAAKvJ,EAAMG,QAAQ,GAAnB,OAAAoJ,OAA8C,EAAnBvJ,EAAMG,QAAQ,GAAzC,OAEXoU,KAAM,CACFxD,MAAO/Q,EAAMqB,QAAQmT,QAAQC,KAC7BC,eAAgB,OAChBC,UAAW,CACPD,eAAgB,gBA8BbnB,CAzBf,SAA0BtQ,GACtB,IAAI0E,EAAUC,cACNF,EAAYzE,EAAZyE,QACFkN,EAAajN,EAAQvI,UAAYuI,EAAQvI,SAASoI,MAAQG,EAAQvI,SAASoI,MAAMoN,WAAa,GAEpG,OADAzI,QAAQC,IAAIwI,GAERpF,EAAArH,EAAAsH,cAAA,OAAKe,UAAW9I,EAAQ1G,MACpBwO,EAAArH,EAAAsH,cAACuH,EAAA,EAAD,KACIxH,EAAArH,EAAAsH,cAACwH,EAAA,EAAD,KACIzH,EAAArH,EAAAsH,cAACiB,EAAA,EAAD,CAAMC,GAAI,KACNnB,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNP,UAAU,qBACVhB,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAAEC,cAAe,eAA9B,UAGR3B,EAAArH,EAAAsH,cAAA,WAAKD,EAAArH,EAAAsH,cAAA,WACLD,EAAArH,EAAAsH,cAACyH,GAAD,CAAmBtC,WAAYA,wHCoMpCuC,WAnPGpX,YAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACFoW,QAAS,CACLlX,OAAQF,EAAMG,QAAQ,KAG9BkX,MAAO,CACHjX,QAAS,QAEbiR,MAAO,CACHN,MAAO,UACP0C,SAAU,QAEd6D,QAAS,CACLvG,MAAO,WACP0C,SAAU,WAID,SAACxQ,GAAU,IAAAa,EACQC,mBAAS,IADjBK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACjByT,EADiBnT,EAAA,GACPoT,EADOpT,EAAA,GAAAI,EAEMT,mBAAS,IAFfU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEjBiT,EAFiBhT,EAAA,GAAAG,GAAAH,EAAA,GAGEV,oBAAS,IAHXc,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAGjB8S,EAHiB7S,EAAA,GAGV8S,EAHU9S,EAAA,GAAAE,EAIMhB,oBAAS,GAJfiB,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAIjBwD,EAJiBvD,EAAA,GAIR4S,EAJQ5S,EAAA,GAYlB6S,EAAe7P,sBAAW3D,OAAA4D,EAAA,EAAA5D,CAAA6D,EAAAC,EAAAC,KAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEFC,IAAMhK,IAAN,GAAAiK,OAAaC,EAAb,YAAgC,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4BtK,MAFtE,OAEnBqJ,EAFmBa,EAAAQ,KAGzB6N,EAAYlP,EAASsB,MAHIT,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA+C,GAAA/C,EAAA,SAKzBgD,QAAQC,IAARjD,EAAA+C,IALyB,yBAAA/C,EAAA4B,SAAA1C,EAAA,iBAO9B,IAEGyP,EAAQ,eAAA7M,EAAA5G,OAAA4D,EAAA,EAAA5D,CAAA6D,EAAAC,EAAAC,KAAG,SAAA8C,EAAOT,GAAP,OAAAvC,EAAAC,EAAAe,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,UAAA+B,EAAAhC,KAAA,GAELqB,EAFK,CAAAW,EAAA/B,KAAA,eAAA+B,EAAA/B,KAAA,EAGkBC,IAAMyO,OAAN,GAAAxO,OAAgBC,EAAhB,YAAAD,OAAkCkB,GAAM,CAAEhB,QAAS,CAACC,cAAA,UAAAH,OAA4BtK,MAHlG,OAAAmM,EAAAzB,KAILxK,OAAOC,SAAS4Y,SAJX,OAAA5M,EAAA/B,KAAA,gBAAA+B,EAAAhC,KAAA,EAAAgC,EAAAc,GAAAd,EAAA,kCAAAA,EAAAL,SAAAG,EAAA,iBAAH,gBAAAmB,GAAA,OAAApB,EAAAqB,MAAAC,KAAAC,YAAA,GAWRyL,EAAiB,WACnBN,GAAS,IAGP/B,EAAgB,SAAArT,GAClB,IAAMgC,EAAQ,IAAIP,KAEZqR,GADY9S,EAAI+S,MAAM,KACV,IAAItR,KAAKzB,IACvBgT,EAAUhR,EAAMiR,cAAgBH,EAAUG,cACxCC,EAAIlR,EAAMmR,WAAaL,EAAUK,WAIvC,OAHID,EAAI,GAAY,IAANA,GAAWlR,EAAMoR,UAAYN,EAAUM,YACjDJ,IAEY,IAAZA,EACOE,EAAI,YAERF,EAAU,YAGfH,EAAoB,SAACpL,GACvB,IACMlI,EADcgI,KAAKC,MAAMC,GACIA,WAAWC,KAAK,SAAAC,GAAG,MAAgB,kBAAZA,EAAIC,OAC9D,OAAOrI,EAAiBA,EAAe0I,MAAQ,IAG7CwL,EAAa,SAACrT,GAChB,IAAMoT,EAAYjM,KAAKC,MAAMpH,GAE7B,OADaoT,GAAaA,EAAUpT,SAAWoT,EAAUpT,QAAQyH,OAAS,EAAI2L,EAAUpT,QAAQ,GAAGkI,KAAO,MAahH,OAJEgE,oBAAU,WACNgJ,KACD,CAACA,IAGJrI,EAAArH,EAAAsH,cAAA,WACID,EAAArH,EAAAsH,cAACW,EAAA,EAAD,CAAgBC,UAAW,IAAMC,iBAAe,IAChDd,EAAArH,EAAAsH,cAACyI,GAAA,EAAD,KACI1I,EAAArH,EAAAsH,cAAC0I,GAAA,EAAD,KAEI3I,EAAArH,EAAAsH,cAACiB,EAAA,EAAD,CAAMC,GAAI,oBACNnB,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNP,UAAU,oBACVQ,UAAWxB,EAAArH,EAAAsH,cAAC2I,GAAA,EAAD,CAAYjC,KAAK,QAE5B3G,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAAEC,cAAe,eAA9B,iBAGR3B,EAAArH,EAAAsH,cAAA,WAAKD,EAAArH,EAAAsH,cAAA,WACLD,EAAArH,EAAAsH,cAAA,WACAD,EAAArH,EAAAsH,cAAC4I,GAAAlQ,EAAD,CACImQ,MAAM,gBACNC,QAAS,CACL,CACID,MAAO,eACPE,MAAO,QAEX,CAAEF,MAAO,aAAcE,MAAO,MAC9B,CAAEF,MAAO,SAAUE,MAAO,UAC1B,CAAEF,MAAO,gBAAiBE,MAAO,cAAeC,WAAW,GAC3D,CAAEH,MAAO,MAAOE,MAAO,MAAOC,WAAW,GACzC,CAAEH,MAAO,UAAWE,MAAO,UAAWC,WAAW,GACjD,CAAEH,MAAO,SAAUE,MAAO,SAAUC,WAAW,GAC/C,CAACH,MAAO,UAAWE,MAAO,UAAWC,WAAW,IAEpDC,UAAWjB,EACX7N,KAAM2N,EAASjI,IAAI,SAACqJ,GAAD,MAAU,CACzB3I,KAAM2I,EAAItO,UAAa,IAAMsO,EAAIrO,UAAa,IAAMqO,EAAIpO,QACxDE,GAAI2K,EAAkBuD,EAAI3O,YAC1BlB,QA9CDA,EA8CmB6P,EAAI7P,OA7CpBgB,KAAKC,MAAMjB,GACZ0B,OA6CDG,YAAagO,EAAIhO,YACjBiO,IAA0B,IAApBD,EAAIhO,kBACckO,IAApBF,EAAIhO,aACgB,OAApBgO,EAAIhO,aACgB,KAApBgO,EAAIhO,YACF,EACAiL,EAAc+C,EAAIhO,aACxBhI,QAASqT,EAAW2C,EAAIhW,SACxBmW,OAAQH,EAAItN,OACPmE,EAAArH,EAAAsH,cAACwG,GAAA,EAAD,CAAOlF,MAAM,QAAQoF,KAAK,QAA1B,UACE3G,EAAArH,EAAAsH,cAACwG,GAAA,EAAD,CAAOlF,MAAM,OAAOoF,KAAK,QAAzB,cACP4C,QACIvJ,EAAArH,EAAAsH,cAAA,WAEID,EAAArH,EAAAsH,cAACuJ,GAAA,EAAD,KACIxJ,EAAArH,EAAAsH,cAACuJ,GAAA,EAAD,CAAY9H,MAAO,CAAE9P,gBAAgB,UAAW2P,MAAM,OAAQkI,OAAO,oBAAqBC,aAAa,QAAvG,WACY1J,EAAArH,EAAAsH,cAAA,QAAM0J,eAAA,GAAN,WAEZ3J,EAAArH,EAAAsH,cAACuJ,GAAA,EAAD,CAAUxI,UAAW,aACjBhB,EAAArH,EAAAsH,cAACuJ,GAAA,EAAD,CAAW9H,MAAO,CAAEH,MAAM,oBACtBvB,EAAArH,EAAAsH,cAACiB,EAAA,EAAD,CACIC,GAAI,CACAC,SAAU,qBACVpJ,MAAO,CAAEoN,WAAY+D,KAGzBnJ,EAAArH,EAAAsH,cAAC2J,GAAA,EAAD,CAAajD,KAAK,OAAQ,IAAI3G,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAACH,MAAO,SAArB,uBAGtCvB,EAAArH,EAAAsH,cAACuJ,GAAA,EAAD,CAAU9H,MAAO,CAAEH,MAAM,oBACrBvB,EAAArH,EAAAsH,cAACiB,EAAA,EAAD,CACIC,GAAI,CACAC,SAAU,oBACVpJ,MAAO,CAAEtE,UAAYyV,EAAIlO,MAG7B+E,EAAArH,EAAAsH,cAAC2J,GAAA,EAAD,CAAYjD,KAAK,OAAQ,IAAI3G,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAACH,MAAO,SAArB,mBAGrCvB,EAAArH,EAAAsH,cAACuJ,GAAA,EAAD,CAAU9H,MAAO,CAAEH,MAAM,oBACrBvB,EAAArH,EAAAsH,cAACiB,EAAA,EAAD,CACIwB,QAAS,SAAC9D,GAAD,OAjJtC,SAAC3D,GACZ,IAAMlC,EAAUgP,EAAStN,KAAK,SAAAC,GAAG,OAAIA,EAAIO,IAAMA,IAC/CmN,EAAWrP,GACXoP,GAAUD,GA8I8C2B,CAAOV,EAAIlO,KAC3BkG,GAAI,CACAC,SAAU,KACV0I,UAAWX,IAGfnJ,EAAArH,EAAAsH,cAAC2J,GAAA,EAAD,CAAiBjD,KAAK,OAAS,IAC/B3G,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAACH,MAAO,SAArB,wBA/F1B,IAACjI,IAuGHyQ,QAAS,CACLC,YAAa,CAETzI,MAAO,QAEX0I,iBAAkB,CACdjZ,MAAQ,OACRkZ,YAAa,SAEjBjB,WAAW,EACXkB,cAAc,EACdC,qBAAsB,OACtBC,gBAAgB,CAAC,GAAG,GAAG,KACvBC,SAAS,GACTC,iBAAkB,SAMlCvK,EAAArH,EAAAsH,cAACuK,GAAA,EAAD,CAAOC,OAAQvC,EAAO2B,OAAQpB,GAC1BzI,EAAArH,EAAAsH,cAACyK,GAAA,EAAD,CAAab,OAAQpB,GAArB,kBACAzI,EAAArH,EAAAsH,cAAC0K,GAAA,EAAD,4CAC0C5R,EAAUA,EAAQgC,QAAW,KAAOhC,EAAQ8B,UAAa,IAAM9B,EAAQ+B,UAAY,IAE7HkF,EAAArH,EAAAsH,cAAC2K,GAAA,EAAD,KACI5K,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CAAQE,MAAM,UAAU5G,KAAK,SAAS+H,QAAS,SAAC9D,GAAD,OAAO0J,EAASvP,EAAQkC,MAAvE,OAAyF,IACzF+E,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CAAQE,MAAM,YAAY5G,KAAK,SAAS+H,QAAS,SAAC9D,GAAD,OAAO6J,MAAxD,WCnPD,SAASoC,KACtB,OACE7K,EAAArH,EAAAsH,cAAC6K,EAAA,EAAD,KACE9K,EAAArH,EAAAsH,cAAA,WACAD,EAAArH,EAAAsH,cAACW,EAAA,EAAD,MAGEZ,EAAArH,EAAAsH,cAAC6K,EAAA,EAAD,KAEE9K,EAAArH,EAAAsH,cAAC6K,EAAA,EAAD,CAAOC,KAAK,qBACV/K,EAAArH,EAAAsH,cAAC+K,GAAD,OAEFhL,EAAArH,EAAAsH,cAAC6K,EAAA,EAAD,CAAOC,KAAK,sBACV/K,EAAArH,EAAAsH,cAACgL,GAAD,OAEFjL,EAAArH,EAAAsH,cAAC6K,EAAA,EAAD,CAAOC,KAAK,KACV/K,EAAArH,EAAAsH,cAACiL,GAAD,UASZ,SAASD,KACP,OAAOjL,EAAArH,EAAAsH,cAACkL,GAAD,MAET,SAASH,KACP,OAAOhL,EAAArH,EAAAsH,cAACmL,EAAD,aClCTC,IAASC,OACPtL,EAAArH,EAAAsH,cAACD,EAAArH,EAAM4S,WAAP,KACEvL,EAAArH,EAAAsH,cAAC4K,GAAD,OAEFW,SAASC,eAAe","file":"static/js/main.e924b5f6.chunk.js","sourcesContent":[" export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\n export const url = '/api/'\n//export const url =  'http://localhost:8282/api/';\n//export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjUwNTc5ODc1fQ.mofTZqq_uSC2xXPJ8ig9at5I3vEmpso47jrczACLWB1YMrTDMmwhEqvGbK88IpqHxuZ8IuAJ3exWW8n7ZvUsdw';\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { format } from 'date-fns';\nimport MatButton from \"@material-ui/core/Button\";\nimport {\n    FormGroup,\n    Input,\n    Label,\n    FormFeedback, Form,\n} from \"reactstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckSquare, faCoffee, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { ToastContainer, toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { Spinner } from \"reactstrap\";\nimport {Link, useHistory, useLocation } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { TiArrowBack } from 'react-icons/ti'\nimport {useForm} from \"react-hook-form\";\nimport {token, url as baseUrl} from \"../../../api\";\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n}));\n\nconst schema = yup.object().shape({\n    dateOfRegistration: yup.date().required(),\n    hospitalNumber: yup.string().required(),\n    firstName: yup.string().required(),\n    middleName: yup.string().nullable(),\n    lastName: yup.string().required(),\n    sex: yup.number().required(),\n    employmentStatus: yup.number().required(),\n    highestQualification: yup.number().required(),\n    maritalStatus: yup.number().required(),\n    dob: yup.date().required(),\n    pnumber: yup.string().required(),\n    altPhonenumber: yup.string().nullable(),\n    email: yup.string().nullable(),\n    address: yup.string().nullable(),\n    landmark: yup.string().nullable(),\n    countryId: yup.number().required(),\n    stateId: yup.number().required(),\n    district: yup.number().nullable(),\n});\n\nconst UserRegistration = (props) => {\n    const { register, setValue, getValues, setError, handleSubmit, formState: { errors } } = useForm({\n        resolver: yupResolver(schema),\n    });\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\n    const [contacts, setContacts] = useState([]);\n    const [saving, setSaving] = useState(false);\n    const [showRelative, setShowRelative] = useState(false);\n    const [editRelative, setEditRelative] = useState(null);\n    const [genders, setGenders]= useState([]);\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\n    const [educationOptions, setEducationOptions]= useState([]);\n    const [occupationOptions, setOccupationOptions]= useState([]);\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\n    const [stateUnitOptions, setStateUnitOptions]= useState([]);\n    const [districtUnitOptions, setDistrictUnitOptions]= useState([]);\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\n    const classes = useStyles();\n    const history = useHistory();\n\n    const location = useLocation();\n    const locationState = location.state;\n    let patientId = null;\n    patientId = locationState ? locationState.patientId : null;\n\n    const getNames = (relationship) => {\n        const surname = relationship.surname;\n        const firstname = relationship.firstname;\n        const otherName = relationship.otherName ? relationship.otherName : '';\n        return surname + ', ' + firstname + ' ' + otherName;\n    }\n    const getRelationship = (relationshipId) => {\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\n        return relationship ? relationship.display : '';\n    };\n    const getPhoneContactPoint = (contactPoint) => {\n        return contactPoint ? contactPoint.value : '';\n    };\n    const getAddress = (address) => {\n        return address && address.line && address.line.length > 0 ? address.line[0] : '';\n    };\n    const getPatient = useCallback(async () => {\n        if (patientId) {\n            const response = await axios.get(`${baseUrl}patient/${patientId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            const patient = response.data;\n            const contacts = patient.contact ? JSON.parse(patient.contact) : [];\n            setContacts(contacts.contact);\n            const identifiers = JSON.parse(patient.identifier);\n            const address = JSON.parse(patient.address);\n            const contactPoint = JSON.parse(patient.contactPoint);\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\n            const gender = JSON.parse(patient.gender);\n            const employmentStatus = JSON.parse(patient.employmentStatus);\n            const education = JSON.parse(patient.education);\n            const maritalStatus = JSON.parse(patient.maritalStatus);\n            setValue('dateOfRegistration', patient.dateOfRegistration);\n            setValue('firstName', patient.firstname);\n            setValue('middleName', patient.otherName);\n            setValue('lastName', patient.surname);\n            setValue('hospitalNumber', hospitalNumber ? hospitalNumber.value : '');\n            setValue('maritalStatus', maritalStatus.id);\n            setValue('employmentStatus', employmentStatus.id);\n            setValue('sex', gender.id);\n            setValue('highestQualification', education.id);\n            setValue('dob', format(new Date(patient.dateOfBirth), 'yyyy-MM-dd'));\n            if (country) {\n                setValue('countryId', country.countryId);\n                const stateOptions = await loadOrganisationUnitsByParentId(country.countryId);\n                setStateUnitOptions(stateOptions);\n                setValue('stateId', country.stateId);\n                const districtOptions = await loadOrganisationUnitsByParentId(country.stateId);\n                setDistrictUnitOptions(districtOptions);\n                setValue('district', country.district);\n                setValue('address', country.city);\n                setValue('landmark', country.line[0]);\n            }\n            setValue('pnumber', phone ? phone.value : null);\n            setValue('email', email ? email.value : null);\n            setValue('altPhonenumber', altphone ? altphone.value : null);\n        }\n    }, []);\n    const handleAddRelative = () => {\n        setShowRelative(true);\n    };\n    const handleSaveRelationship = (e) => {\n        const relationshipType = getValues(\"relationshipType\");\n        const cfirstName = getValues(\"cfirstName\");\n        const cmiddleName = getValues(\"cmiddleName\");\n        const clastName = getValues(\"clastName\");\n        const contactPhoneNumber = getValues(\"contactPhoneNumber\");\n        const contactEmail = getValues(\"contactEmail\");\n        const contactAddress = getValues(\"contactAddress\");\n        if (!relationshipType) {\n            setError(\"relationshipType\", {  type: 'custom', message: 'Relationship is required' }, { shouldFocus: true });\n            return;\n        }\n        if (!cfirstName) {\n            setError(\"cfirstName\", {  type: 'custom', message: 'FirstName is required' }, { shouldFocus: true });\n            return;\n        }\n        if (!clastName) {\n            setError(\"clastName\", {  type: 'custom', message: 'LastName is required' }, { shouldFocus: true });\n            return;\n        }\n\n        const contact = {\n            \"address\": {\n                \"line\": [\n                    contactAddress\n                ],\n            },\n            \"contactPoint\": {\n                \"type\": \"phone\",\n                \"value\": contactPhoneNumber\n            },\n            \"firstname\": cfirstName,\n            \"fullName\": cfirstName + ' ' + cmiddleName + ' ' + clastName,\n            \"relationshipId\": relationshipType,\n            \"surname\": clastName,\n            \"otherName\": cmiddleName\n        };\n        if (editRelative != null) {\n            contacts.splice(editRelative, 1);\n            setContacts(contacts.concat(contact));\n        } else {\n            setContacts(contacts.concat(contact));\n        }\n        setShowRelative(false);\n    };\n    const handleCancelSaveRelationship = () => {\n        setShowRelative(false);\n    }\n    const onSubmit = async (data) => {\n        try {\n            const patientForm = {\n                active: true,\n                address: [\n                    {\n                        \"city\": data.address,\n                        \"countryId\": data.countryId,\n                        \"district\": data.district,\n                        \"line\": [\n                            data.landmark\n                        ],\n                        \"organisationUnitId\": 0,\n                        \"postalCode\": \"\",\n                        \"stateId\": data.stateId\n                    }\n                ],\n                contact: contacts,\n                contactPoint: [],\n                dateOfBirth: new Date(data.dob),\n                deceased: false,\n                deceasedDateTime: null,\n                firstname: data.firstName,\n                genderId: data.sex,\n                identifier: [\n                    {\n                        \"assignerId\": 1,\n                        \"type\": \"HospitalNumber\",\n                        \"value\": data.hospitalNumber\n                    }\n                ],\n                otherName: data.middleName,\n                maritalStatusId: data.maritalStatus,\n                surname: data.lastName,\n                educationId: data.highestQualification,\n                employmentStatusId: data.employmentStatus,\n                dateOfRegistration: data.dateOfRegistration\n            };\n            const phone = {\n                \"type\": \"phone\",\n                \"value\": data.pnumber\n            };\n            if (data.email) {\n                const email = {\n                    \"type\": \"email\",\n                    \"value\": data.email\n                }\n                patientForm.contactPoint.push(email);\n            }\n            if (data.altPhonenumber) {\n                const altPhonenumber = {\n                    \"type\": \"altphone\",\n                    \"value\": data.altPhonenumber\n                }\n                patientForm.contactPoint.push(altPhonenumber);\n            }\n            patientForm.contactPoint.push(phone);\n            if (patientId) {\n                const response = await axios.put(`${baseUrl}patient/${patientId}`, patientForm, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            } else {\n                const response = await axios.post(`${baseUrl}patient/`, patientForm, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            }\n            history.push('/');\n        } catch (e) {\n            console.log(e);\n        }\n    };\n    const onError = (errors) => {\n        console.error(errors)\n    }\n    const handleEditRelative = (relative, index) => {\n        setValue(\"relationshipType\", relative.relationshipId);\n        setValue(\"cfirstName\", relative.firstname);\n        setValue(\"cmiddleName\", relative.otherName);\n        setValue(\"clastName\", relative.surname);\n        setValue(\"contactPhoneNumber\", relative.contactPoint ? relative.contactPoint.value : '');\n        setValue(\"contactAddress\", relative.address && relative.address.line && relative.address.line.length > 0 ? relative.address.line[0] : '');\n        setShowRelative(true);\n        setEditRelative(index);\n    };\n    const handleDeleteRelative = (index) => {\n        setTimeout(() => {\n            contacts.splice(index, 1);\n            setContacts(contacts);\n            setShowRelative(true);\n            setShowRelative(false);\n        }, 500);\n    };\n\n    const loadGenders = useCallback(async () => {\n        try {\n            const response = await axios.get(`${baseUrl}application-codesets/v2/GENDER`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            setGenders(response.data);\n        } catch (e) {\n\n        }\n    }, []);\n    const loadMaritalStatus = useCallback(async () => {\n        try {\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            setMaritalStatusOptions(response.data);\n        } catch (e) {\n\n        }\n    }, []);\n    const loadEducation = useCallback(async () => {\n        try {\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            setEducationOptions(response.data);\n        } catch (e) {\n\n        }\n    }, []);\n    const loadOccupation = useCallback(async () => {\n        try {\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            setOccupationOptions(response.data);\n        } catch (e) {\n\n        }\n    }, []);\n    const loadRelationships = useCallback(async () => {\n      try {\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n          setRelationshipOptions(response.data);\n      } catch (e) {\n          \n      }\n    }, []);\n    const loadTopLevelCountry = useCallback(async () => {\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n        settopLevelUnitCountryOptions(response.data);\n    }, []);\n    const loadOrganisationUnitsByParentId = async (parentId) => {\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n        return response.data;\n    };\n    const onCountryChange = async (e) => {\n        if (e.target.value) {\n            const stateOptions = await loadOrganisationUnitsByParentId(e.target.value);\n            setStateUnitOptions(stateOptions);\n        } else {\n            setStateUnitOptions([]);\n        }\n    };\n    const onStateChange = async (e) => {\n        if (e.target.value) {\n            const districtOptions = await loadOrganisationUnitsByParentId(e.target.value);\n            setDistrictUnitOptions(districtOptions);\n        } else {\n            setDistrictUnitOptions([]);\n        }\n    };\n\n    useEffect(() => {\n        loadGenders();\n        loadMaritalStatus();\n        loadEducation();\n        loadOccupation();\n        loadRelationships();\n        loadTopLevelCountry();\n        getPatient();\n    }, [loadGenders, loadMaritalStatus, loadEducation, loadOccupation, loadRelationships, loadTopLevelCountry, getPatient]);\n\n    let genderRows = null;\n    let maritalStatusRows = null;\n    let educationRows = null;\n    let occupationRows = null;\n    let relationshipRows = null;\n    let topLevelUnitCountryRows = null;\n    let stateRows = null;\n    let districtRows = null;\n    if (genders && genders.length > 0) {\n        genderRows = genders.map((gender, index) => (\n            <option key={gender.id} value={gender.id}>{gender.display}</option>\n        ));\n    }\n    if (maritalStatusOptions && maritalStatusOptions.length > 0) {\n        maritalStatusRows = maritalStatusOptions.map((maritalStatusOption, index) => (\n            <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\n        ));\n    }\n    if (educationOptions && educationOptions.length > 0) {\n        educationRows = educationOptions.map((educationOption, index) => (\n            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\n        ));\n    }\n    if (occupationOptions && occupationOptions.length > 0) {\n        occupationRows = occupationOptions.map((occupationOption, index) => (\n            <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\n        ));\n    }\n    if (relationshipOptions && relationshipOptions.length > 0) {\n        relationshipRows = relationshipOptions.map((relationshipOption, index) => (\n            <option key={relationshipOption.id} value={relationshipOption.id}>{relationshipOption.display}</option>\n        ));\n    }\n    if (topLevelUnitCountryOptions && topLevelUnitCountryOptions.length > 0) {\n        topLevelUnitCountryRows = topLevelUnitCountryOptions.map((topLevelUnitCountryOption, index) => (\n            <option key={topLevelUnitCountryOption.id} value={topLevelUnitCountryOption.id}>{topLevelUnitCountryOption.name}</option>\n        ));\n    }\n    if (stateUnitOptions && stateUnitOptions.length > 0) {\n        stateRows = stateUnitOptions.map((stateUnitOption, index) => (\n            <option key={stateUnitOption.id} value={stateUnitOption.id}>{stateUnitOption.name}</option>\n        ));\n    }\n    if (districtUnitOptions && districtUnitOptions.length > 0) {\n        districtRows = districtUnitOptions.map((districtUnitOption, index) => (\n            <option key={districtUnitOption.id} value={districtUnitOption.id}>{districtUnitOption.name}</option>\n        ));\n    }\n\n    const handleCancel = () => {\n        history.push('/');\n    };\n\n    return (\n        <>\n            <ToastContainer autoClose={3000} hideProgressBar />\n            <Card className={classes.cardBottom}>\n                <CardContent>\n                    <Link\n                        to={{\n                            pathname: \"/\",\n                            state: 'users'\n                        }}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\" float-right ms-1\"\n                            startIcon={<TiArrowBack />}\n                        >\n                            <span style={{ textTransform: \"capitalize\" }}>Back </span>\n                        </Button>\n                    </Link>\n                    <br />\n                    <br />\n                    <div className=\"col-xl-12 col-lg-12\">\n                        <Form onSubmit={handleSubmit(onSubmit, onError)}>\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h5 className=\"card-title\">{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\n                                </div>\n\n                                <div className=\"card-body\">\n                                    <div className=\"basic-form\">\n                                        <div className=\"row\">\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label for=\"dateOfRegistration\">Date of Registration*</Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"date\"\n                                                        name=\"dateOfRegistration\"\n                                                        id=\"dateOfRegistration\"\n                                                        max={today}\n                                                        {...register(\"dateOfRegistration\")}\n                                                    />\n                                                    {errors.dateOfRegistration && <p>{errors.dateOfRegistration.message}</p>}\n                                                </FormGroup>\n                                            </div>\n\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label for=\"patientId\">Patient ID * </Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"hospitalNumber\"\n                                                        id=\"hospitalNumber\"\n                                                        {...register(\"hospitalNumber\")}\n                                                    />\n                                                    {errors.hospitalNumber && <p>{errors.hospitalNumber.message}</p>}\n                                                </FormGroup>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label for=\"firstName\">First Name *</Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"firstName\"\n                                                        id=\"firstName\"\n                                                        {...register(\"firstName\")}\n                                                    />\n                                                    {errors.firstName && <p>{errors.firstName.message}</p>}\n                                                </FormGroup>\n                                            </div>\n\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label>Middle Name</Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"middleName\"\n                                                        id=\"middleName\"\n                                                        {...register(\"middleName\")}\n                                                    />\n                                                    {errors.middleName && <p>{errors.middleName.message}</p>}\n                                                </FormGroup>\n                                            </div>\n\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label>Last Name *</Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"lastName\"\n                                                        id=\"lastName\"\n                                                        {...register(\"lastName\")}\n                                                    />\n                                                    {errors.lastName && <p>{errors.lastName.message}</p>}\n                                                </FormGroup>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"form-group  col-md-4\">\n                                                <FormGroup>\n                                                    <Label>Sex *</Label>\n                                                    <select\n                                                        className=\"form-control\"\n                                                        name=\"sex\"\n                                                        id=\"sex\"\n                                                        {...register(\"sex\")}\n                                                    >\n                                                        <option value={\"\"}></option>\n                                                        {genderRows}\n                                                    </select>\n                                                    {errors.sex && <p>{errors.sex.message}</p>}\n                                                </FormGroup>\n                                            </div>\n\n                                            <div className=\"form-group  col-md-4\">\n                                                <FormGroup>\n                                                    <Label>Employment Status *</Label>\n                                                    <select\n                                                        className=\"form-control\"\n                                                        name=\"employmentStatus\"\n                                                        id=\"employmentStatus\"\n                                                        {...register(\"employmentStatus\")}\n                                                    >\n                                                        <option value={\"\"}></option>\n                                                        {occupationRows}\n                                                    </select>\n                                                    {errors.lastName && <p>{errors.lastName.message}</p>}\n                                                </FormGroup>\n                                            </div>\n\n                                            <div className=\"form-group  col-md-4\">\n                                                <FormGroup>\n                                                    <Label>Highest Qualification *</Label>\n                                                    <select\n                                                        className=\"form-control\"\n                                                        name=\"highestQualification\"\n                                                        id=\"highestQualification\"\n                                                        {...register(\"highestQualification\")}\n                                                    >\n                                                        <option value={\"\"}></option>\n                                                        {educationRows}\n                                                    </select>\n                                                    {errors.highestQualification && <p>{errors.highestQualification.message}</p>}\n                                                </FormGroup>\n                                            </div>\n                                        </div>\n\n                                        <div className={\"row\"}>\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label>Marital Status</Label>\n                                                    <select\n                                                        className=\"form-control\"\n                                                        name=\"maritalStatus\"\n                                                        id=\"maritalStatus\"\n                                                        {...register(\"maritalStatus\")}\n                                                    >\n                                                        <option value={\"\"}></option>\n                                                        {maritalStatusRows}\n                                                    </select>\n                                                    {errors.maritalStatus && <p>{errors.maritalStatus.message}</p>}\n                                                </FormGroup>\n                                            </div>\n\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label>Date Of Birth</Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"date\"\n                                                        name=\"dob\"\n                                                        id=\"dob\"\n                                                        max={today}\n                                                        {...register(\"dob\")}\n                                                    />\n                                                    {errors.dob && <p>{errors.dob.message}</p>}\n                                                </FormGroup>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h5 className=\"card-title\">Contact Details</h5>\n                                </div>\n\n                                <div className=\"card-body\">\n                                    <div className={\"row\"}>\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>Phone Number *</Label>\n                                                <input\n                                                    className=\"form-control\"\n                                                    type=\"tel\"\n                                                    name=\"pnumber\"\n                                                    id=\"pnumber\"\n                                                    {...register(\"pnumber\")}\n                                                    placeholder=\"(234)7099999999\"\n                                                />\n                                                {errors.pnumber && <p>{errors.pnumber.message}</p>}\n                                            </FormGroup>\n                                        </div>\n\n                                        <div className=\"form-group col-md-4\">\n                                            <FormGroup>\n                                                <Label>Alt. Phone Number</Label>\n                                                <input\n                                                    className=\"form-control\"\n                                                    type=\"tel\"\n                                                    name=\"altPhoneNumber\"\n                                                    id=\"altPhoneNumber\"\n                                                    {...register(\"altPhonenumber\")}\n                                                    placeholder=\"(234)7099999999\"\n                                                />\n                                                {errors.altPhonenumber && <p>{errors.altPhonenumber.message}</p>}\n                                            </FormGroup>\n                                        </div>\n\n                                        <div className=\"form-group col-md-4\">\n                                            <FormGroup>\n                                                <Label>Email</Label>\n                                                <input\n                                                    className=\"form-control\"\n                                                    type=\"email\"\n                                                    name=\"email\"\n                                                    id=\"email\"\n                                                    {...register(\"email\")}\n                                                />\n                                                {errors.email && <p>{errors.email.message}</p>}\n                                            </FormGroup>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>Country</Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    name=\"country\"\n                                                    id=\"country\"\n                                                    {...register(\"countryId\")}\n                                                    onChange={(e) => onCountryChange(e)}>\n                                                    <option value={\"\"}></option>\n                                                    {topLevelUnitCountryRows}\n                                                </select>\n                                                {errors.country && <p>{errors.country.message}</p>}\n                                            </FormGroup>\n                                        </div>\n\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>State</Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    name=\"stateId\"\n                                                    id=\"stateId\"\n                                                    {...register(\"stateId\")}\n                                                    onChange={(e) => onStateChange(e)}>\n                                                    <option value={\"\"}></option>\n                                                    {stateRows}\n                                                </select>\n                                            </FormGroup>\n                                        </div>\n\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>Province/District/LGA</Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    name=\"district\"\n                                                    id=\"district\"\n                                                    {...register(\"district\")}>\n                                                    <option value={\"\"}></option>\n                                                    {districtRows}\n                                                </select>\n                                            </FormGroup>\n                                        </div>\n                                    </div>\n\n                                    <div className={\"row\"}>\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>Street Address</Label>\n                                                <input\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    name=\"address\"\n                                                    id=\"address\"\n                                                    {...register(\"address\")}\n                                                />\n                                                {errors.address && <p>{errors.address.message}</p>}\n                                            </FormGroup>\n                                        </div>\n\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>Landmark</Label>\n                                                <input\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    name=\"landmark\"\n                                                    id=\"landmark\"\n                                                    {...register(\"landmark\")}\n                                                />\n                                                {errors.landmark && <p>{errors.landmark.message}</p>}\n                                            </FormGroup>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h5 className=\"card-title\">Relationship / Next Of Kin</h5>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        {\n                                            contacts && contacts.length > 0 && (\n                                                <div className=\"col-xl-12 col-lg-12\">\n                                                    <table style={{ width: '100%' }}>\n                                                        <thead>\n                                                        <tr>\n                                                            <th>Relationship Type</th>\n                                                            <th>Name</th>\n                                                            <th>Phone</th>\n                                                            <th>Address</th>\n                                                            <th>Actions</th>\n                                                        </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                        {contacts.map((item, index) => {\n                                                            return (\n                                                                <tr key={item.index}>\n                                                                    <td>{ getRelationship(item.relationshipId) }</td>\n                                                                    <td>{ getNames(item) }</td>\n                                                                    <td>{ getPhoneContactPoint(item.contactPoint) }</td>\n                                                                    <td>{ getAddress(item.address) }</td>\n                                                                    <td>\n                                                                        <button type=\"button\"\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\n                                                                                onClick={(e) => handleEditRelative(item, index)}>\n                                                                            <FontAwesomeIcon icon=\"edit\" />\n                                                                        </button>\n                                                                        &nbsp;&nbsp;\n                                                                        <button\n                                                                            type=\"button\"\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\n                                                                            onClick={(e) => handleDeleteRelative(index)}>\n                                                                            <FontAwesomeIcon icon=\"trash\" />\n                                                                        </button>\n                                                                    </td>\n                                                                </tr>\n                                                            );\n                                                        })}\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            )\n                                        }\n                                        <div className=\"col-xl-12 col-lg-12\">\n                                            {\n                                                showRelative && (\n                                                    <div className=\"card\">\n                                                        <div className=\"card-body\">\n                                                            <div className=\"row\">\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\n                                                                        <select\n                                                                            className=\"form-control\"\n                                                                            name=\"relationshipType\"\n                                                                            id=\"relationshipType\"\n                                                                            {...register(\"relationshipType\")}>\n                                                                            <option value={\"\"}></option>\n                                                                            {relationshipRows}\n                                                                        </select>\n                                                                        {errors.relationshipType && <p>{errors.relationshipType.message}</p>}\n                                                                    </FormGroup>\n                                                                </div>\n\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\n                                                                        <input\n                                                                            className=\"form-control\"\n                                                                            type=\"text\"\n                                                                            name=\"cfirstName\"\n                                                                            id=\"cfirstName\"\n                                                                            {...register(\"cfirstName\")}\n                                                                        />\n                                                                        {errors.cfirstName && <p>{errors.cfirstName.message}</p>}\n                                                                    </FormGroup>\n                                                                </div>\n\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label>Middle Name</Label>\n                                                                        <input\n                                                                            className=\"form-control\"\n                                                                            type=\"text\"\n                                                                            name=\"cmiddleName\"\n                                                                            id=\"cmiddleName\"\n                                                                            {...register(\"cmiddleName\")}\n                                                                        />\n                                                                        {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>}\n                                                                    </FormGroup>\n                                                                </div>\n\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label>Last Name *</Label>\n                                                                        <input\n                                                                            className=\"form-control\"\n                                                                            type=\"text\"\n                                                                            name=\"clastName\"\n                                                                            id=\"clastName\"\n                                                                            {...register(\"clastName\")}\n                                                                        />\n                                                                        {errors.clastName && <p>{errors.clastName.message}</p>}\n                                                                    </FormGroup>\n                                                                </div>\n                                                            </div>\n\n                                                            <div className=\"row\">\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\n                                                                        <input\n                                                                            className=\"form-control\"\n                                                                            type=\"text\"\n                                                                            name=\"contactPhoneNumber\"\n                                                                            id=\"contactPhoneNumber\"\n                                                                            {...register(\"contactPhoneNumber\")}\n                                                                        />\n                                                                        {errors.contactPhoneNumber && <p>{errors.contactPhoneNumber.message}</p>}\n                                                                    </FormGroup>\n                                                                </div>\n\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label for=\"contactEmail\">Email</Label>\n                                                                        <input\n                                                                            className=\"form-control\"\n                                                                            type=\"text\"\n                                                                            name=\"contactEmail\"\n                                                                            id=\"contactEmail\"\n                                                                            {...register(\"contactEmail\")}\n                                                                        />\n                                                                        {errors.contactEmail && <p>{errors.contactEmail.message}</p>}\n                                                                    </FormGroup>\n                                                                </div>\n\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label for=\"contactAddress\">Address</Label>\n                                                                        <input\n                                                                            className=\"form-control\"\n                                                                            type=\"text\"\n                                                                            name=\"contactAddress\"\n                                                                            id=\"contactAddress\"\n                                                                            {...register(\"contactAddress\")}\n                                                                        />\n                                                                        {errors.contactAddress && <p>{errors.contactAddress.message}</p>}\n                                                                    </FormGroup>\n                                                                </div>\n                                                            </div>\n\n                                                            <div className=\"row\">\n                                                                <div className=\"\">\n                                                                    <MatButton\n                                                                        type=\"button\"\n                                                                        variant=\"contained\"\n                                                                        color=\"primary\"\n                                                                        className={classes.button}\n                                                                        onClick={handleSaveRelationship}\n                                                                    >\n                                                                        Add\n                                                                    </MatButton>\n                                                                </div>\n\n                                                                <div className=\"\">\n                                                                    <MatButton\n                                                                        type=\"button\"\n                                                                        variant=\"contained\"\n                                                                        color=\"secondary\"\n                                                                        className={classes.button}\n                                                                        onClick={handleCancelSaveRelationship}\n                                                                    >\n                                                                        Cancel\n                                                                    </MatButton>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                )\n                                            }\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <MatButton\n                                            type=\"button\"\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<AddIcon />}\n                                            onClick={handleAddRelative}\n                                        >\n                                            Add a Relative/Next Of Kin\n                                        </MatButton>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {saving ? <Spinner /> : \"\"}\n\n                            <br />\n\n                            {userDetail ===null ? (\n                                    <MatButton\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.button}\n                                        startIcon={<SaveIcon />}\n                                    >\n                                        {!saving ? (\n                                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                                        ) : (\n                                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                                        )}\n                                    </MatButton>\n                                )\n                                :\n                                (\n                                    <MatButton\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.button}\n                                        startIcon={<SaveIcon />}\n                                    >\n                                        {!saving ? (\n                                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                                        ) : (\n                                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                                        )}\n                                    </MatButton>\n                                )\n                            }\n                            <MatButton\n                                variant=\"contained\"\n                                className={classes.button}\n                                startIcon={<CancelIcon />}\n                                onClick={handleCancel}\n                            >\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\n                            </MatButton>\n                        </Form>\n                    </div>\n                </CardContent>\n            </Card>\n        </>\n    );\n};\n\nexport default UserRegistration","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport {\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    AccordionActions\n} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n//import Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport { Button } from 'semantic-ui-react';\nimport { Grid, Step, Label, Segment, Icon } from \"semantic-ui-react\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Col, Row } from \"reactstrap\";\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    icon: {\n        verticalAlign: 'bottom',\n        height: 20,\n        width: 20,\n    },\n    details: {\n        alignItems: 'center',\n    },\n    column: {\n        flexBasis: '20.33%',\n    },\n    helper: {\n        borderLeft: `2px solid ${theme.palette.divider}`,\n        padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\n    },\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: 'none',\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n});\n\nfunction PatientCard(props) {\n    const { classes } = props;\n    const patientObj = props.patientObj ? props.patientObj : {};\n\n    const getHospitalNumber = (identifier) => {\n        const identifiers = JSON.parse(identifier);\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\n        return hospitalNumber ? hospitalNumber.value : '';\n    };\n\n    const calculate_age = dob => {\n        const today = new Date();\n        const dateParts = dob.split(\"-\");\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\n        let age_now = today.getFullYear() - birthDate.getFullYear();\n        const m = today.getMonth() - birthDate.getMonth();\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n            age_now--;\n        }\n        if (age_now === 0) {\n            return m + \" month(s)\";\n        }\n        return age_now + \" year(s)\";\n    };\n\n    const getPhone = (contactPoint) => {\n        const contactPoints = JSON.parse(contactPoint);\n        const phoneContact = contactPoints.contactPoint.find(obj => obj.type == 'phone');\n        return phoneContact ? phoneContact.value : '';\n    };\n\n    const getAddress = (address) => {\n        const addresses = JSON.parse(address);\n        const city = addresses && addresses.address && addresses.address.length > 0 ? addresses.address[0].city : null;\n        return city;\n    };\n\n    return (\n        <div className={classes.root}>\n            <Accordion defaultExpanded>\n                <AccordionSummary>\n\n                    <Row>\n\n                        <Col md={11}>\n                            <Row className={\"mt-1\"}>\n                                <Col md={12} className={classes.root2}>\n                                    <b style={{fontSize: \"25px\"}}>\n                                        { patientObj.surname + \", \" + patientObj.firstname + \" \" + patientObj.otherName }\n                                    </b>\n\n                                </Col>\n                                <Col md={4} className={classes.root2}>\n                    <span>\n                        {\" \"}\n                        Hospital Number : <b>{getHospitalNumber(patientObj.identifier) }</b>\n                    </span>\n                                </Col>\n\n                                <Col md={4} className={classes.root2}>\n                    <span>\n                        Date Of Birth : <b>{patientObj.dateOfBirth }</b>\n                    </span>\n                                </Col>\n                                <Col md={4} className={classes.root2}>\n                    <span>\n                        {\" \"}\n                        Age : <b>{calculate_age(patientObj.dateOfBirth) }</b>\n                    </span>\n                                </Col>\n                                <Col md={4}>\n                    <span>\n                        {\" \"}\n                        Gender :{\" \"}\n                        <b>{JSON.parse(patientObj.gender).value }</b>\n                    </span>\n                                </Col>\n                                <Col md={4} className={classes.root2}>\n                    <span>\n                        {\" \"}\n                        Phone Number : <b>{getPhone(patientObj.contactPoint) }</b>\n                    </span>\n                                </Col>\n                                <Col md={4} className={classes.root2}>\n                    <span>\n                        {\" \"}\n                        Address : <b>{getAddress(patientObj.address)} </b>\n                    </span>\n                                </Col>\n\n                                <Col md={12}>\n                                    <Label.Group >\n\n                                        <Label color={\"blue\"} size={\"mini\"}>\n                                            Transfer\n\n                                        </Label>\n\n                                    </Label.Group>\n\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n\n                </AccordionSummary>\n                <AccordionDetails className={classes.details}>\n                    <div className={classes.column} >\n                        <Button\n                            color='red'\n                            content='BloodType'\n                            //icon='heart'\n                            label={{ basic: true, color: 'red', pointing: 'left', content: 'AB+' }}\n                        />\n\n                    </div>\n                    <div className={classes.column}>\n                        <Button\n                            basic\n                            color='blue'\n                            content='Height'\n                            icon='fork'\n                            label={{\n                                as: 'a',\n                                basic: true,\n                                color: 'blue',\n                                pointing: 'left',\n                                content: '74.5 in',\n                            }}\n                        />\n                    </div>\n                    <div className={classes.column}>\n                        <Button\n                            basic\n                            color='blue'\n                            content='Weight'\n                            icon='fork'\n                            label={{\n                                as: 'a',\n                                basic: true,\n                                color: 'blue',\n                                pointing: 'left',\n                                content: '74.5 in',\n                            }}\n                        />\n                    </div>\n                    <div className={classNames(classes.column, classes.helper)}>\n                        <Typography variant=\"caption\">\n                            <Label color={\"red\"} size={\"mini\"}>\n                                Biometric Status\n                                <Label.Detail>Not Captured</Label.Detail>\n                            </Label>\n\n                            <Label color={\"green\"} size={\"mini\"}>\n                                Patient Status\n                                <Label.Detail>Active</Label.Detail>\n                            </Label>\n                        </Typography>\n                    </div>\n                </AccordionDetails>\n                <Divider />\n                <AccordionActions>\n\n                </AccordionActions>\n            </Accordion>\n\n        </div>\n    );\n}\n\nPatientCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PatientCard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\nimport ButtonMui from \"@material-ui/core/Button\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Col} from \"reactstrap\";\nimport { Grid, Step, Label, Segment, Icon } from \"semantic-ui-react\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport PatientCardDetail from './PatientCard'\nimport { useHistory } from \"react-router-dom\";\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    icon: {\n        verticalAlign: 'bottom',\n        height: 20,\n        width: 20,\n    },\n    details: {\n        alignItems: 'center',\n    },\n    column: {\n        flexBasis: '20.33%',\n    },\n    helper: {\n        borderLeft: `2px solid ${theme.palette.divider}`,\n        padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\n    },\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: 'none',\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n});\n\nfunction PatientDashboard(props) {\n    let history = useHistory();\n    const { classes } = props;\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\n    console.log(patientObj);\n    return (\n        <div className={classes.root}>\n            <Card>\n                <CardContent>\n                    <Link to={\"/\"} >\n                        <ButtonMui\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\" float-right mr-1\">\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\n                        </ButtonMui>\n                    </Link>\n                    <br/><br/>\n                    <PatientCardDetail patientObj={patientObj}/>\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n\nexport default withStyles(styles)(PatientDashboard);","import React, {useState, useEffect, useCallback} from 'react'\nimport MaterialTable from 'material-table';\nimport axios from \"axios\";\nimport { url as baseUrl } from \"../../../api\";\nimport { token as token } from \"../../../api\";\nimport { Link } from 'react-router-dom'\nimport { Card,CardBody,} from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Button from \"@material-ui/core/Button\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { FaUserPlus } from \"react-icons/fa\";\nimport { MdDashboard, MdDeleteForever, MdModeEdit } from \"react-icons/md\";\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Label } from 'semantic-ui-react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./patient.css\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n}));\n\nconst SyncList = (props) => {\n    const [patients, setPatients] = useState([]);\n    const [loading, setLoading] = useState('');\n    const [modal, setModal] = useState(false);\n    const [patient, setPatient] = useState(false);\n\n    const toggle = (id) => {\n        const patient = patients.find(obj => obj.id == id);\n        setPatient(patient);\n        setModal(!modal);\n    }\n\n    const loadPatients = useCallback(async () => {\n        try {\n            const response = await axios.get(`${baseUrl}patient/`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            setPatients(response.data);\n        } catch (e) {\n            console.log(e);\n        }\n    }, []);\n\n    const onDelete = async (id) => {\n        try {\n            if (id) {\n                const response = await axios.delete(`${baseUrl}patient/${id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n                window.location.reload();\n            }\n        } catch (e) {\n\n        }\n    }\n\n    const onCancelDelete = () => {\n        setModal(false);\n    }\n\n    const calculate_age = dob => {\n        const today = new Date();\n        const dateParts = dob.split(\"-\");\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\n        let age_now = today.getFullYear() - birthDate.getFullYear();\n        const m = today.getMonth() - birthDate.getMonth();\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n            age_now--;\n        }\n        if (age_now === 0) {\n            return m + \" month(s)\";\n        }\n        return age_now + \" year(s)\";\n    };\n    \n    const getHospitalNumber = (identifier) => {\n        const identifiers = JSON.parse(identifier);\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\n        return hospitalNumber ? hospitalNumber.value : '';\n    };\n\n    const getAddress = (address) => {\n        const addresses = JSON.parse(address);\n        const city = addresses && addresses.address && addresses.address.length > 0 ? addresses.address[0].city : null;\n        return city;\n    };\n\n    const getGender = (gender) => {\n        const genderVal = JSON.parse(gender);\n        return genderVal.value;\n    };\n\n    useEffect(() => {\n        loadPatients();\n    }, [loadPatients]);\n\n  return (\n    <div>\n        <ToastContainer autoClose={3000} hideProgressBar />\n        <Card>\n            <CardBody>\n\n                <Link to={\"register-patient\"}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className=\" float-right mr-1\"\n                        startIcon={<FaUserPlus size=\"10\"/>}\n                    >\n                        <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\n                    </Button>\n                </Link>\n                <br/><br/>\n                <br/>\n                <MaterialTable\n                    title=\"Find patients\"\n                    columns={[\n                        {\n                            title: \"Patient Name\",\n                            field: \"name\",\n                        },\n                        { title: \"Patient ID\", field: \"id\" },\n                        { title: \"Gender\", field: \"gender\" },\n                        { title: \"Date Of Birth\", field: \"dateOfBirth\", filtering: false },\n                        { title: \"Age\", field: \"age\", filtering: false },\n                        { title: \"Address\", field: \"address\", filtering: false },\n                        { title: \"Status\", field: \"status\", filtering: false },\n                        {title: \"Actions\", field: \"actions\", filtering: false },\n                    ]}\n                    isLoading={loading}\n                    data={patients.map((row) => ({\n                        name: row.firstname +  ' ' + row.otherName +  ' ' + row.surname,\n                        id: getHospitalNumber(row.identifier),\n                        gender: getGender(row.gender),\n                        dateOfBirth: row.dateOfBirth,\n                        age: (row.dateOfBirth === 0 ||\n                            row.dateOfBirth === undefined ||\n                            row.dateOfBirth === null ||\n                            row.dateOfBirth === \"\" )\n                            ? 0\n                            : calculate_age(row.dateOfBirth),\n                        address: getAddress(row.address),\n                        status: row.active ?\n                            (<Label color=\"green\" size=\"mini\">active</Label>)\n                            : (<Label color=\"teal\" size=\"mini\">not-active</Label>),\n                        actions:\n                            <div>\n\n                                <Menu>\n                                    <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", }}>\n                                        Actions <span aria-hidden>▾</span>\n                                    </MenuButton>\n                                    <MenuList className={'menuClass'} >\n                                        <MenuItem  style={{ color:\"#000 !important\"}}>\n                                            <Link\n                                                to={{\n                                                    pathname: \"/patient-dashboard\",\n                                                    state: { patientObj: row }\n                                                }}\n                                            >\n                                                <MdDashboard size=\"15\" />{\" \"}<span style={{color: '#000'}}>Patient Dashboard</span>\n                                            </Link>\n                                        </MenuItem>\n                                        <MenuItem style={{ color:\"#000 !important\"}}>\n                                            <Link\n                                                to={{\n                                                    pathname: \"/register-patient\",\n                                                    state: { patientId : row.id }\n                                                }}\n                                            >\n                                                <MdModeEdit size=\"15\" />{\" \"}<span style={{color: '#000'}}>Edit Patient </span>\n                                            </Link>\n                                        </MenuItem>\n                                        <MenuItem style={{ color:\"#000 !important\"}}>\n                                            <Link\n                                                onClick={(e) => toggle(row.id)}\n                                                to={{\n                                                    pathname: \"/#\",\n                                                    currentId: row\n                                                }}\n                                            >\n                                                <MdDeleteForever size=\"15\"  />{\" \"}\n                                                <span style={{color: '#000'}}>Delete Patient</span>\n                                            </Link>\n                                        </MenuItem>\n                                    </MenuList>\n                                </Menu>\n                            </div>\n                    }))}\n\n                    options={{\n                        headerStyle: {\n                            //backgroundColor: \"#9F9FA5\",\n                            color: \"#000\",\n                        },\n                        searchFieldStyle: {\n                            width : '200%',\n                            margingLeft: '250px',\n                        },\n                        filtering: true,\n                        exportButton: false,\n                        searchFieldAlignment: 'left',\n                        pageSizeOptions:[10,20,100],\n                        pageSize:10,\n                        debounceInterval: 400\n                    }}\n                />\n\n            </CardBody>\n        </Card>\n        <Modal isOpen={modal} toggle={onCancelDelete}>\n            <ModalHeader toggle={onCancelDelete}>Delete Patient</ModalHeader>\n            <ModalBody>\n                Are you sure to delete this record? { patient ? patient.surname +  ', ' + patient.firstname +  ' ' + patient.otherName : '' }\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"primary\" type=\"button\" onClick={(e) => onDelete(patient.id)}>Yes</Button>{' '}\n                <Button color=\"secondary\" type=\"button\" onClick={(e) => onCancelDelete()}>No</Button>\n            </ModalFooter>\n        </Modal>\n    </div>\n  );\n}\n\nexport default SyncList;\n\n\n","import React from \"react\";\nimport {\n  MemoryRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport RegisterPatient from './main/webapp/components/RegisterPatient';\nimport PatientDashboard from './main/webapp/components/PatientDashboard';\nimport Dashboard from './main/webapp/components/Dashboard';\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n      <ToastContainer />\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n         \n          <Route path=\"/register-patient\">\n            <RegisterPatientPage />\n          </Route>\n          <Route path=\"/patient-dashboard\">\n            <PatientDashboardPage />\n          </Route>\n          <Route path=\"/\">\n            <Dashboard />\n          </Route>\n          \n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction PatientDashboardPage() {\n  return <PatientDashboard />;\n}\nfunction RegisterPatientPage() {\n  return <RegisterPatient />;\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}