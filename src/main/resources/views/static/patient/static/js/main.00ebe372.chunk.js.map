{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CheckedInPatients.js","main/webapp/jsx/components/Enrollment/EnrollmentForm.js","main/webapp/jsx/components/ArtCommencement/ArtCommencement.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/EnhancedAdherenceCounseling/EnhancedAdherenceCounseling.js","main/webapp/jsx/components/DifferentiatedCare/DifferentiatedCare.js","main/webapp/jsx/components/ClientStatusUpdate/ClientStatusUpdate.js","main/webapp/jsx/components/ClinicFollowUpVisit/ClinicFollowUp.js","main/webapp/jsx/components/CervicalCancer/Index.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/History/Ventic/WidgetBasic/ActiveUser.js","main/webapp/jsx/components/History/Ventic/WidgetBasic/FeeCollection.js","main/webapp/jsx/components/History/Ventic/WidgetBasic/NewStudent.js","main/webapp/jsx/components/History/Ventic/WidgetBasic/TotalCourse.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/Ventic/WidgetBasic/VisitorActivity.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","useState","patientList","setPatientList","a","axios","baseUrl","headers","then","response","data","catch","useEffect","patients","calculate_age","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","getHospitalNumber","identifier","hospitalNumber","find","obj","type","value","p","id","name","console","log","length","CardBody","to","Button","variant","className","startIcon","size","style","textTransform","icons","title","columns","field","filtering","map","row","firstName","surname","hospital_number","gender","age","dateOfBirth","undefined","moment","format","status","Label","currentStatus","actions","backgroundColor","border","borderRadius","pathname","state","patientObj","patientId","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","pageSize","debounceInterval","divStyle","Home","key","setKey","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","useStyles","Enrollment","classes","useHistory","values","uniqueId","dateOfRegistration","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","objValues","setObjValues","saving","setSaving","errors","carePoints","setCarePoints","sourceReferral","setSourceReferral","hivStatus","setHivStatus","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","pregnancyStatus","setPregnancyStatus","transferIn","setTransferIn","ovcEnrolled","setOvcEnrolled","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","handleInputChange","e","target","Modal","show","showModal","toggle","Header","onClick","FormGroup","for","Input","onChange","required","time","regDate","value1","max","pregnancy_status","checked","htmlFor","Spinner","preventDefault","personId","enrolled","post","toast","PatientCurrentStatus","ArtCommencement","clinicalStage","setClinicalStage","setErrors","regimenLine","setRegimenLine","regimenType","setRegimenType","pregancyStatus","setPregancyStatus","functionalStatus","setFunctionalStatus","visitDate","viralLoad","whoStagingId","clinicalStageId","cd4","cd4Percentage","isCommencement","functionalStatusId","clinicalNote","hivEnrollmentId","vitalSignDto","facilityId","regimenTypeId","regimenId","bodyWeight","diastolic","encounterDate","serviceTypeId","systolic","vital","setVitalSignDto","FunctionalStatus","WhoStaging","PreganacyStatus","RegimenLine","handleInputChangeVitalSignDto","regimenID","description","temp","Object","every","x","InputGroup","InputGroupText","address","rows","cols","enrollment","commenced","apierror","message","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","unit","link","primary","main","textDecoration","patientObjs","setpatientObj","modal","setModal","artModal","setArtModal","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","md","root2","phoneNumber","contactPoint","getPhoneNumber","city","getAddress","ExpansionPanelDetails","content","label","basic","pointing","as","floated","paddingLeft","Divider","ExpansionPanelActions","setValues","patient_id","current_status","participant_id","loadPatients","setTransferStatus","firstname","first_name","mid_name","last_name","phone","ClientStatusUpdate","RelativeList","relative","index","removeRelativeLocation","adr","adrOnsetDate","IconButton","InfectionList","removeInfection","illnessInfection","ondateInfection","ClinicFollowUp","adherenceLevel","setAdherenceLevel","prepSideEffect","setPrepSideEffect","adrObj","setAdrObj","adrList","setAdrList","infection","setInfection","infectionList","setInfectionList","TBForms","setTBForms","regimenDrugs","adheres","adrScreened","adverseDrugReactions","artStatusId","nextAppointment","lmpDate","oiScreened","opportunisticInfections","stiIds","stiTreated","uuid","AdherenceLevel","PrepSideEffect","handAdrleInputChange","handleInfectionInputChange","addADR","splice","addInfection","panes","menuItem","render","Pane","Icon","List","Table","striped","responsive","isMulti","drugsInfo","abbrev","Grid","Column","CervicalCancer","navItemText","SubMenu","ancModal","setAncModal","careModal","setCareModal","clientStatusUpdateModal","setClientStatusUpdateModal","clinicFollowUpModal","setClinicFollowUpModal","cervicalCancerModal","setCervicalCancerModal","loadAnc","loadStatusUpdate","loadClinicFolowUp","onClickHome","setActiveContent","Menu","inverted","Item","disabled","Dropdown","labeled","simple","EnhancedAdherenceCounseling","DifferentiatedCare","createReactClass","require","labels","datasets","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","tooltips","enabled","legend","scales","yAxes","xAxes","realtime","onRefresh","push","now","y","Math","random","delay","plugins","streaming","frameRate","displayName","Component","uv","pv","amt","Widget","PureComponent","alt","Toggle","viewBox","version","stroke","strokeWidth","fill","fillRule","cx","cy","r","Segment","ribbon","celled","Group","HeaderCell","Cell","fluid","placeholder","Footer","labelPosition","Content","Feed","Event","Summary","history","art","setArt","activeContent","CardContent","RecentHistory","flexGrow","maxWidth","demo","background","default","inline","schema","yup","shape","middleName","nullable","lastName","sex","employmentStatus","highestQualification","maritalStatus","pnumber","altPhonenumber","email","landmark","countryId","stateId","district","UserRegistration","useForm","resolver","yupResolver","register","setValue","getValues","setError","handleSubmit","formState","toISOString","substr","replace","contacts","setContacts","patientDTO","ageDisabled","setAgeDisabled","showRelative","setShowRelative","editRelative","setEditRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","stateUnitOptions","setStateUnitOptions","districtUnitOptions","setDistrictUnitOptions","userDetail","user","locationState","useLocation","getRelationship","relationshipId","relationship","getPatient","useCallback","patient","contact","identifiers","altphone","country","education","otherName","loadOrganisationUnitsByParentId","stateOptions","districtOptions","line","onSubmit","patientForm","active","deceased","deceasedDateTime","genderId","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","person","hivEnrollment","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","parentId","onCountryChange","onStateChange","handleDateOfBirthChange","genderRows","maritalStatusRows","educationRows","occupationRows","relationshipRows","topLevelUnitCountryRows","stateRows","districtRows","maritalStatusOption","educationOption","occupationOption","relationshipOption","topLevelUnitCountryOption","stateUnitOption","districtUnitOption","autoClose","hideProgressBar","Form","defaultChecked","handleDobChange","currentDate","setDate","setMonth","add","toDate","handleAgeChange","item","handleEditRelative","setTimeout","handleDeleteRelative","relationshipType","cfirstName","cmiddleName","clastName","contactPhoneNumber","contactEmail","contactAddress","concat","shouldFocus","App","path","PatientDetail","RegisterPatient","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","alert","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","fontFamily","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","children","ReactDOM","StrictMode","basename","getElementById"],"mappings":"wTACcA,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QAASC,IAAI,OAC3DC,EAAM,W,icCoCnBC,KAAOC,OAAO,MACdC,OAEA,IAAMC,GAAa,CACnBC,IAAKC,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,QACxDC,MAAOH,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,QACzDE,MAAOJ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,QACzDG,OAAQL,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAmBD,GAAnB,IAA0BC,IAAKA,QAClEI,YAAaN,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAkBD,GAAlB,IAAyBC,IAAKA,QACtEK,KAAMP,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAUD,GAAV,IAAiBC,IAAKA,QACvDM,OAAQR,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAaD,GAAb,IAAoBC,IAAKA,QAC5DO,OAAQT,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAgBD,GAAhB,IAAuBC,IAAKA,QAC/DQ,UAAWV,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAeD,GAAf,IAAsBC,IAAKA,QACjES,SAAUX,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAcD,GAAd,IAAqBC,IAAKA,QAC/DU,SAAUZ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAkBD,GAAlB,IAAyBC,IAAKA,QACnEW,aAAcb,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAiBD,GAAjB,IAAwBC,IAAKA,QACtEY,YAAad,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,QAC/Da,OAAQf,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,QAC3Dc,UAAWhB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAiBD,GAAjB,IAAwBC,IAAKA,QACnEe,gBAAiBjB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,QACpEgB,WAAYlB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,KAAD,2BAAgBD,GAAhB,IAAuBC,IAAKA,SAuNpDiB,IApNGC,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,QAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,YAKD,SAACxC,GAEd,MAAsC0C,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoCF,mBAAS,IAA7C,6BAHwB,4CASpB,sBAAAG,EAAA,sDACIC,IACKtD,IADL,UACYuD,EADZ,gBAEI,CAAEC,QAAS,CAAC,+BAA4B7D,MAEvC8D,MAAK,SAACC,GAEHN,EAAeM,EAASC,SAG3BC,OAAM,SAACd,OAVhB,4CAToB,sBAKxBe,qBAAU,YALc,mCAMpBC,KACC,IAeL,IAAMC,EAAgB,SAAAC,GAClB,IAAIC,EAAQ,IAAIC,KACZC,EAAYH,EAAII,MAAM,KACtBC,EAAa,IAAIH,MAAMC,EAAU,GAAIA,EAAU,GAAK,GAAIA,EAAU,IAClEG,EAAY,IAAIJ,KAAKG,GACrBE,EAAUN,EAAMO,cAAgBF,EAAUE,cAC1CC,EAAIR,EAAMS,WAAaJ,EAAUI,WAIjC,OAHID,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YAC7CJ,IAEQ,IAAZA,EACWE,EAAI,YAERF,EAAU,YAGvBK,EAAoB,SAACC,GACvB,IACMC,EADcD,EACeA,WAAWE,MAAK,SAAAC,GAAG,MAAgB,kBAAZA,EAAIC,QAC9D,OAAOH,EAAiBA,EAAeI,MAAQ,IAE/CC,EAAG,CAAC,CAACC,GAAI,EAAGC,KAAO,OAAQ,CAACD,GAAI,EAAGC,KAAK,UAG9C,OAFEC,QAAQC,IAAIJ,EAAEA,EAAEK,OAAS,IAGzB,+BACG,eAAC,KAAD,UACE,gBAACC,GAAA,EAAD,WACA,eAAC,IAAD,CAAMC,GAAI,mBAAV,SACO,eAACC,GAAA,EAAD,CACIC,QAAQ,YACR7C,MAAM,UACN8C,UAAU,aACVC,UAAW,eAAC,KAAD,CAAYC,KAAK,OAJhC,SAMI,uBAAMC,MAAO,CAAEC,cAAe,cAA9B,6BAGJ,wBAAK,wBACL,wBAEJ,eAAC,IAAD,CACAC,MAAO7F,GACL8F,MAAM,gBACNC,QAAS,CAEP,CACED,MAAO,eACPE,MAAO,QAET,CAAEF,MAAO,kBAAmBE,MAAO,kBAAmBC,WAAW,GACjE,CAAEH,MAAO,SAAUE,MAAO,SAAUC,WAAW,GAC/C,CAAEH,MAAO,MAAOE,MAAO,MAAOC,WAAW,GAGzC,CAAEH,MAAO,iBAAkBE,MAAO,SAAUC,WAAW,GACvD,CAAEH,MAAO,UAAWE,MAAO,UAAWC,WAAW,IAEnD3C,KAAOR,EAAYoD,KAAI,SAACC,GAAD,MAAU,CAE3BnB,KAAKmB,EAAIC,UAAY,IAAMD,EAAIE,QAC/BC,gBAAiB/B,EAAkB4B,EAAI3B,YAGvC+B,OAAOJ,EAAII,OAAO5E,QAClB6E,IAA0B,IAApBL,EAAIM,kBACcC,IAApBP,EAAIM,aACgB,OAApBN,EAAIM,aACgB,KAApBN,EAAIM,YACA,EACA/C,EAAciD,KAAOR,EAAIM,aAAaG,OAAO,eAErDC,OAAS,eAACC,GAAA,EAAD,CAAOpE,MAAM,OAAOgD,KAAK,OAAzB,SAAiCS,EAAIY,gBAE9CC,QAEA,+BACA,gBAAC,KAAD,WACI,gBAAC,KAAD,CAAYrB,MAAO,CAAEsB,gBAAgB,UAAWvE,MAAM,OAAQwE,OAAO,oBAAqBC,aAAa,OAAvG,qBACU,uBAAM,iBAAN,uBAEN,eAAC,KAAD,CAAUxB,MAAO,CAAEjD,MAAM,sBAAzB,SAC0B,iBAArByD,EAAIY,cAEG,qCACI,eAAC,KAAD,CAAUpB,MAAO,CAAEjD,MAAM,mBAAzB,SACI,gBAAC,IAAD,CACI2C,GAAI,CACA+B,SAAU,mBACVC,MAAO,CAAEC,WAAYnB,IAH7B,UAKA,eAAC,KAAD,CAAaT,KAAK,KAAKhD,MAAM,UAAW,IAAI,uBAAMiD,MAAO,CAACjD,MAAO,QAArB,sCAOpD,qCACI,eAAC,KAAD,CAAUiD,MAAO,CAAEjD,MAAM,mBAAzB,SACI,gBAAC,IAAD,CACI2C,GAAI,CACA+B,SAAU,oBACVC,MAAO,CAAEE,UAAYpB,EAAIpB,KAHjC,UAKA,eAAC,KAAD,CAAgBW,KAAK,KAAKhD,MAAM,UAAW,IAAI,uBAAMiD,MAAO,CAACjD,MAAO,QAArB,8CAevE8E,QAAS,CACPC,YAAa,CAET/E,MAAO,QAEXgF,iBAAkB,CACd3F,MAAQ,OACR4F,YAAa,SAEjB1B,WAAW,EACX2B,cAAc,EACdC,qBAAsB,OACtBC,gBAAgB,CAAC,GAAG,GAAG,KACvBC,SAAS,GACTC,iBAAkB,gBChQtCC,ICiDY3G,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,QAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,YDxFD,CACfwE,aAAc,MACdxE,SAAU,KAsCGuF,GAnCF,WACT,MAAsBrF,mBAAS,QAA/B,mBAAOsF,EAAP,KAAYC,EAAZ,KAGF,OACE,eAAC,WAAD,UACE,eAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACE,eAACC,EAAA,EAAD,CAAM7C,MAAOsC,GAAb,SACE,eAACO,EAAA,EAAKC,KAAN,UAEE,sBAAKjD,UAAU,eAAf,SACE,eAACkD,EAAA,EAAD,CACI3D,GAAG,yBACH4D,UAAWR,EACXS,SAAU,SAACC,GAAD,OAAOT,EAAOS,IACxBrD,UAAU,OAJd,SASE,eAACsD,EAAA,EAAD,CAAKC,SAAS,OAAOjD,MAAM,gBAA3B,SACE,eAAC,GAAD,qB,iREXdkD,GAAY1H,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,YAqkBFsH,GAjkBI,SAAC9I,GAEhB,IAAMmH,EAAanH,EAAMmH,WAEnB4B,GADQC,cACEH,MAChB,EAA4BnG,mBAAS,IAArC,mBAAOuG,EAAP,KACA,GADA,KACkCvG,mBAAS,CAACkC,GAAG,GAAIsE,SAAU,GAAGC,mBAAmB,GAAGC,aAAa,GAAIC,aAAa,GAAGC,uBAAuB,GAAGC,iBAAiB,GAAGC,iBAAiB,GAAGC,oBAAoB,GAAGC,kBAAkB,GAAGC,UAAU,GAAGC,WAAW,GAAGC,cAAc,GAAGC,aAAa,GAAGC,UAAU,MAA3S,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BvH,oBAAS,GAArC,mBAAOwH,EAAP,KAAeC,EAAf,KACA,EAA4BzH,mBAAS,IAArC,mBAAO0H,EAAP,KACA,GADA,KACoC1H,mBAAS,KAA7C,mBAAO2H,EAAP,KAAmBC,EAAnB,KACA,EAA4C5H,mBAAS,IAArD,mBAAO6H,EAAP,KAAuBC,EAAvB,KACA,EAAkC9H,mBAAS,IAA3C,mBAAO+H,EAAP,KAAkBC,EAAlB,KACA,EAA0ChI,mBAAS,IAAnD,mBAAOiI,EAAP,KAAsBC,EAAtB,KACA,EAAgClI,mBAAS,IAAzC,mBAAOmI,EAAP,KAAiBC,EAAjB,KACA,EAAoBpI,mBAAS,IAA7B,mBAAOqI,EAAP,KAAWC,EAAX,KACA,EAA8CtI,mBAAS,IAAvD,mBAAOuI,EAAP,KAAwBC,EAAxB,KAEA,EAAoCxI,oBAAS,GAA7C,oBAAOyI,GAAP,MAAmBC,GAAnB,MAEA,GAAsC1I,oBAAS,GAA/C,qBAAO2I,GAAP,MAAoBC,GAApB,MAEAjI,qBAAU,WACNkI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,OACC,IAGH,IAAMN,GAAgB,WACfzI,IACItD,IADJ,UACWuD,EADX,uCAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEHoH,EAAcpH,EAASC,SAE1BC,OAAM,SAACd,QAMdkJ,GAAgB,WACd1I,IACCtD,IADD,UACQuD,EADR,2CAEI,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEHsH,EAAkBtH,EAASC,SAE9BC,OAAM,SAACd,QAMTmJ,GAAW,WACd3I,IACItD,IADJ,UACWuD,EADX,4CAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEHwH,EAAaxH,EAASC,SAEzBC,OAAM,SAACd,QAMPoJ,GAAmB,WACvB5I,IACItD,IADJ,UACWuD,EADX,8CAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEH0H,EAAiB1H,EAASC,SAE7BC,OAAM,SAACd,QAMPqJ,GAAU,WACd7I,IACItD,IADJ,UACWuD,EADX,qCAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEH4H,EAAY5H,EAASC,SAExBC,OAAM,SAACd,QAMPsJ,GAAI,WACR9I,IACItD,IADJ,UACWuD,EADX,mCAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEH8H,EAAM9H,EAASC,SAElBC,OAAM,SAACd,QAMPuJ,GAAiB,WACrB/I,IACItD,IADJ,UACWuD,EADX,4CAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEHgI,EAAmBhI,EAASC,SAE/BC,OAAM,SAACd,QAKTwJ,GAAoB,SAAAC,GAEtB9B,EAAY,2BAAMD,GAAN,mBAAmB+B,EAAEC,OAAOnH,KAAOkH,EAAEC,OAAOtH,SACpC,iBAAjBqH,EAAEC,OAAOnH,OACY,OAAjBkH,EAAEC,OAAOtH,MACR0G,IAAc,GAEdA,IAAc,KAmD5B,OACI,+BAEQ,gBAACa,GAAA,EAAD,CAAOC,KAAMlM,EAAMmM,UAAWC,OAAQpM,EAAMoM,OAAQ/G,UAAU,OAAOE,KAAK,KAA1E,UACD,gBAAC0G,GAAA,EAAMI,OAAP,CAAcD,OAAQpM,EAAMoM,OAAQ5G,MAAO,CAACsB,gBAAgB,WAA5D,sCAEI,eAAC,KAAD,CACG1B,QAAQ,GACRC,UAAU,YACViH,QAAStM,EAAMoM,YAGnB,eAACH,GAAA,EAAM3D,KAAP,UACQ,eAAC,KAAD,UACI,eAACrD,GAAA,EAAD,UACA,kCACI,uBAAKI,UAAU,MAAf,UAEI,sBAAKA,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,WAAX,8BACA,eAACC,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,WACLD,GAAG,WACH8H,SAAUZ,GACVpH,MAAOsF,EAAUd,SACjByD,UAAQ,IAEQ,KAAnBvC,EAAOlB,SACJ,uBAAM7D,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAOlB,WACxC,QAGR,sBAAK7D,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,qBAAX,mCACA,eAAC,kBAAD,CACII,MAAM,EACN/H,KAAK,qBACLD,GAAG,qBACHF,MAAOsF,EAAU6C,QACjBH,SAAU,SAAAI,GAAM,OACZ7C,EAAa,2BAAKD,GAAN,IAAiBb,mBAAoB3C,KAAOsG,GAAQrG,OAAO,kBAGvEsG,IAAK,IAAIrJ,OAEa,KAA7B0G,EAAOjB,mBACJ,uBAAM9D,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAOjB,qBACxC,WAIZ,uBAAK9D,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,eAAX,8BACA,gBAACC,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,eACLD,GAAG,eACH8H,SAAUZ,GACVpH,MAAOsF,EAAUZ,aACjBuD,UAAQ,EANZ,UAQA,yBAAQjI,MAAM,GAAd,eAEC2F,EAAWtE,KAAI,SAACrB,GAAD,OACZ,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,OAIC,KAAvBwF,EAAOhB,aACA,uBAAM/D,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAOhB,eACxC,WAKR,sBAAK/D,UAAU,2BAAf,UACc,IAAb8F,GAEO,gBAACoB,GAAA,EAAD,WACA,eAAC,KAAD,4BACA,eAACE,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,eACLD,GAAG,eACH8H,SAAUZ,GACVpH,MAAOsF,EAAUX,aACjBsD,UAAQ,OAKhB,KAIJ,sBAAKtH,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,yCACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,yBACLD,GAAG,yBACH8H,SAAUZ,GACVpH,MAAOsF,EAAUV,uBACjBqD,UAAQ,EANZ,UAQA,yBAAQjI,MAAM,GAAd,eAEC+F,EAAU1E,KAAI,SAACrB,GAAD,OACX,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,OAIW,KAAjCwF,EAAOd,uBACA,uBAAMjE,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAOd,yBACxC,WAKR,sBAAKjE,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,2CACA,eAAC,kBAAD,CACIK,MAAM,EACN/H,KAAK,mBACLD,GAAG,mBACHF,MAAOsF,EAAU6C,QACjBH,SAAU,SAAAI,GAAM,OACZ7C,EAAa,2BAAKD,GAAN,IAAiBT,iBAAkB/C,KAAOsG,GAAQrG,OAAO,kBAGrEsG,IAAK,IAAIrJ,YAKrB,sBAAK2B,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,iCACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,mBACLD,GAAG,mBACHF,MAAOsF,EAAUR,iBACjBkD,SAAUZ,GACVa,UAAQ,EANZ,UAQK,yBAAQjI,MAAM,GAAd,eAEI6F,EAAexE,KAAI,SAACrB,GAAD,OAChB,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,UAKH,KAA3BwF,EAAOZ,iBACJ,uBAAMnE,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAOZ,mBACxC,QAIR,sBAAKnE,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,iCACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,sBACLD,GAAG,sBACHF,MAAOsF,EAAUP,oBACjBiD,SAAUZ,GACVa,UAAQ,EANZ,UAQK,yBAAQjI,MAAM,GAAd,eAEIiG,EAAc5E,KAAI,SAACrB,GAAD,OACf,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,UAKA,KAA9BwF,EAAOX,oBACJ,uBAAMpE,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAOX,sBACxC,QAIc,IAAtBtC,EAAWf,OAEP,sBAAKf,UAAY,2BAAjB,SACA,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,gBAACE,GAAA,EAAD,CACIhI,KAAO,SACPI,KAAO,oBACPD,GAAK,oBACLF,MAASsF,EAAUN,kBACnBgD,SAAYZ,GACZa,UAAQ,EANZ,UAQI,yBACAjI,MAAQ,GADR,eAIIuG,EAAgBlF,KAAI,SAACrB,GAAD,OAChB,yBAEJA,MAASA,EAAME,GAFX,SAGCF,EAAMlD,SAFJkD,EAAME,UASe,KAA5BwF,EAAO4C,iBACH,wBAAO3H,UAAa0D,EAAQzG,MAA5B,cAAsC8H,EAAO4C,iBAA7C,OAGJ,QAMZ,GAGsB,IAAtB7F,EAAWf,OAEX,sBAAKf,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,2BACA,eAAC,kBAAD,CACIK,MAAM,EACN/H,KAAK,YACLD,GAAG,YACHF,MAAOuE,EAAO4D,QACdH,SAAU,SAAAI,GAAM,OACZ7C,EAAa,2BAAKD,GAAN,IAAiBL,UAAWnD,KAAOsG,GAAQrG,OAAO,kBAG9DsG,IAAK,IAAIrJ,YAOrB,GAEA,sBAAK2B,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,wBACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,aACLD,GAAG,aACHF,MAAOsF,EAAUJ,WACjB8C,SAAUZ,GACVa,UAAQ,EANZ,UAQK,yBAAQjI,MAAM,GAAd,eAEImG,EAAS9E,KAAI,SAACrB,GAAD,OACV,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,UAKT,KAArBwF,EAAOR,WACJ,uBAAMvE,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAOR,aACxC,QAGR,sBAAKvE,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,8BACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,gBACLD,GAAG,gBACHF,MAAOsF,EAAUH,cACjB6C,SAAUZ,GACVa,UAAQ,EANZ,UAQK,yBAAQjI,MAAM,GAAd,eAEIqG,EAAGhF,KAAI,SAACrB,GAAD,OACJ,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,UAKN,KAAxBwF,EAAOP,cACJ,uBAAMxE,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAOP,gBACxC,QAGR,sBAAKxE,UAAU,2BAAf,SAEI,uBAAKA,UAAU,mCAAf,UACI,wBACAZ,KAAK,WACLY,UAAU,mBAEVR,KAAK,eACLD,GAAG,eACH8H,SArWlB,SAAAX,GACfA,EAAEC,OAAOiB,QACR3B,IAAe,GAEfA,IAAe,MAoWiB,wBACAjG,UAAU,mBACV6H,QAAQ,mBAFR,qCAQR,sBAAK7H,UAAU,2BAAf,UACmB,IAAdgG,GAEG,gBAACkB,GAAA,EAAD,WACA,eAAC,KAAD,yBACA,eAACE,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,YACLD,GAAG,YACH8H,SAAUZ,GACVpH,MAAOsF,EAAUD,UACjB4C,UAAQ,OAKZ,QAKXzC,EAAS,eAACiD,GAAA,EAAD,IAAc,GAC5B,wBAEI,eAAC,KAAD,CACA1I,KAAK,SACLW,QAAQ,YACR7C,MAAM,UACN8C,UAAW0D,EAAQ5G,OACnBmD,UAAW,eAAC,KAAD,IACXgH,QA5XP,SAACP,GAClBA,EAAEqB,iBAEApD,EAAUqD,SAAUlG,EAAWvC,GAC/BuC,EAAWmG,UAAS,SACbtD,EAAS,UAChBG,GAAU,GACVrH,IAAMyK,KAAN,UAAcxK,EAAd,kBAAsCiH,EACrC,CAAEhH,QAAS,CAAC,+BAA4B7D,MAGpC8D,MAAK,SAAAC,GACFiH,GAAU,GACVqD,IAAM/K,QAAQ,0BACdzC,EAAMoM,SACNpM,EAAMmH,WAAWmG,UAAS,EAC1BtN,EAAMyN,0BAGTrK,OAAM,SAAAd,GACH6H,GAAU,GACVqD,IAAMlL,MAAM,4BAiWE,SAQE4H,EAGF,uBAAM1E,MAAO,CAAEC,cAAe,cAA9B,uBAFA,uBAAMD,MAAO,CAAEC,cAAe,cAA9B,oBAMJ,eAAC,KAAD,CACIL,QAAQ,YACRC,UAAW0D,EAAQ5G,OACnBmD,UAAW,eAAC,KAAD,IACXgH,QAAStM,EAAMoM,OAJnB,SAOI,uBAAM5G,MAAO,CAAEC,cAAe,cAA9B,qC,sBC3lB1BoD,I,OAAY1H,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,QAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,aAikBHkL,GA7jBS,SAAC1N,GACFA,EAAMmH,WACX6B,cADd,IAEMD,EAAUF,KAChB,EAA0CnG,mBAAS,IAAnD,mBAAOiL,EAAP,KAAsBC,EAAtB,KACA,EAA4BlL,mBAAS,IAArC,mBAAOuG,EAAP,KACA,GADA,KAC4BvG,oBAAS,IAArC,mBAAOwH,EAAP,KAAeC,EAAf,KACA,EAA4BzH,mBAAS,IAArC,mBAAO0H,EAAP,KAAeyD,EAAf,KACA,EAAgCnL,mBAAS,IAAzC,mBAAOmI,EAAP,KAAiBC,EAAjB,KACA,EAAsCpI,mBAAS,IAA/C,mBAAOoL,EAAP,KAAoBC,EAApB,KACA,EAAsCrL,mBAAS,IAA/C,mBAAOsL,EAAP,KAAoBC,EAApB,KACA,EAA4CvL,mBAAS,IAArD,mBAAOwL,EAAP,KAAuBC,EAAvB,KACA,EAAgDzL,mBAAS,IAAzD,mBAAO0L,EAAP,KAAyBC,EAAzB,KACA,EAAkC3L,mBAAS,CACK2K,SAASrN,EAAMmH,WAAWvC,GAC1B0J,UAAW,GACXC,UAAW,GACXC,aAAa,GACbC,gBAAgB,GAChBC,IAAK,GACLC,cAAe,GACfC,gBAAgB,EAChBC,mBAAoB,GACpBC,aAAc,GACdC,gBAAiB,GACjBC,aAAa,GACbC,WAAW,EACXC,cAAe,EACfC,UAAU,IAf1D,mBAAOnF,EAAP,KAAkBC,EAAlB,KAmBA,EAAgCvH,mBAAS,CACG0M,WAAY,GACZC,UAAU,GACVC,cAAe,GACfL,WAAY,EACZ/M,OAAQ,GACRmL,SAAUrN,EAAMmH,WAAWvC,GAC3B2K,cAAe,EACfC,SAAS,KARrD,mBAAOC,EAAP,KAAcC,GAAd,KAWArM,qBAAU,YA3CqB,oCA4C3BsM,GACAC,KACAjE,KACAkE,KACAC,OACC,IAEH,IAAMF,GAAY,WAChB9M,IACItD,IADJ,UACWuD,EADX,0CAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEH0K,EAAiB1K,EAASC,SAE7BC,OAAM,SAACd,QAMLwN,GAAa,WACnBhN,IACItD,IADJ,UACWuD,EADX,qBAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEH6K,EAAe7K,EAASC,SAE3BC,OAAM,SAACd,QAqBPuN,GAAiB,WACrB/M,IACItD,IADJ,UACWuD,EADX,4CAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEHiL,EAAkBjL,EAASC,SAE9BC,OAAM,SAACd,QAzGgB,8CA+G3B,sBAAAO,EAAA,sDACIC,IACKtD,IADL,UACYuD,EADZ,gDAEI,CAAEC,QAAS,CAAC,+BAA4B7D,MAEvC8D,MAAK,SAACC,GAEHmL,EAAoBnL,EAASC,SAGhCC,OAAM,SAACd,OAVhB,4CA/G2B,sBA6H3B,IAAMqJ,GAAU,WACZ7I,IACItD,IADJ,UACWuD,EADX,qCAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEH4H,EAAY5H,EAASC,SAExBC,OAAM,SAACd,QAMTwJ,GAAoB,SAAAC,GACtB9B,EAAY,2BAAMD,GAAN,mBAAmB+B,EAAEC,OAAOnH,KAAOkH,EAAEC,OAAOtH,UAEtDqL,GAAgC,SAAAhE,GAClC2D,GAAe,2BAAMD,GAAN,mBAAe1D,EAAEC,OAAOnH,KAAOkH,EAAEC,OAAOtH,UAmEjE,OACI,+BAEQ,gBAACuH,GAAA,EAAD,CAAOC,KAAMlM,EAAMmM,UAAWC,OAAQpM,EAAMoM,OAAQ/G,UAAU,OAAOE,KAAK,KAA1E,UACD,gBAAC0G,GAAA,EAAMI,OAAP,CAAcD,OAAQpM,EAAMoM,OAAQ5G,MAAO,CAACsB,gBAAgB,WAA5D,6BAEI,eAAC,KAAD,CACG1B,QAAQ,GACRC,UAAU,YACViH,QAAStM,EAAMoM,YAGnB,eAACH,GAAA,EAAM3D,KAAP,UACQ,eAAC,KAAD,UACI,eAACrD,GAAA,EAAD,UACA,kCACI,uBAAKI,UAAU,MAAf,UAEI,sBAAKA,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,UAAX,gCACA,eAACC,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,YACLD,GAAG,YACH8H,SAAUZ,GACVpH,MAAOsF,EAAUsE,UACjB3B,UAAQ,SAIhB,sBAAKtH,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,MAAX,kCACA,eAACC,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,MACLD,GAAG,MACH8H,SAAUZ,GACVpH,MAAOsF,EAAU0E,IACjB/B,UAAQ,SAMhB,sBAAKtH,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,gBAAX,kBACA,eAACC,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,gBACLD,GAAG,gBACH8H,SAAUZ,GACVpH,MAAOsF,EAAU2E,cACjBhC,UAAQ,SAKZ,sBAAKtH,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,sCACA,gBAACE,GAAA,EAAD,CACQhI,KAAK,SACLI,KAAK,YACLD,GAAG,YAEH8H,SArIP,SAAAX,GACzB,IAlEiBnH,EAkEboL,EAAYjE,EAAEC,OAAOtH,MACzBuF,EAAY,2BAAMD,GAAN,IAAiBmF,UAAUa,KAnEtBpL,EAoELoL,EAnEZlN,IACItD,IADJ,UACWuD,EADX,6BACuC6B,GAChC,CAAE5B,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEH+K,EAAe/K,EAASC,SAE3BC,OAAM,SAACd,QA8LqBqK,UAAQ,EANhB,UAQS,yBAAQjI,MAAM,SAAd,eAEIoJ,EAAY/H,KAAI,SAACrB,GAAD,OACb,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMuL,aADEvL,EAAME,eAQnC,sBAAKS,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,+BACA,gBAACE,GAAA,EAAD,CACQhI,KAAK,SACLI,KAAK,gBACLD,GAAG,gBACHF,MAAOsF,EAAUkF,cACjBxC,SAAUZ,GACVa,UAAQ,EANhB,UAQS,yBAAQjI,MAAM,SAAd,eAEIsJ,EAAYjI,KAAI,SAACrB,GAAD,OACb,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMuL,aADEvL,EAAME,eAWnC,sBAAKS,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,2CACA,eAACE,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,YACLD,GAAG,YACH8H,SA5KT,SAAAX,GAC3B,IAAImE,EAAI,eAAQ9F,GAChB,GAAG2B,EAAEC,OAAOnH,OAASmF,EAAUoF,YAAcrD,EAAEC,OAAOtH,MAAO,EAKzD,OAJAwL,EAAKrL,KAAOmF,EAAUoF,WAAa,GAAK,0CACxCvB,EAAU,eACHqC,IAEAC,OAAOlH,OAAOiH,GAAME,OAAM,SAAAC,GAAC,MAAS,IAALA,KAG1CpG,EAAY,2BAAMD,GAAN,mBAAmB+B,EAAEC,OAAOnH,KAAOkH,EAAEC,OAAOtH,UAmKpBA,MAAOsF,EAAUuE,UACjB5B,UAAQ,IAEa,iBAApB1D,EAAOsF,UACJ,uBAAMlJ,UAAW0D,EAAQzG,MAAzB,SAAiC,2BACjC,GACiB,KAApB8H,EAAOmE,UACR,uBAAMlJ,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAOmE,YACxC,QAGR,sBAAKlJ,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,eACLD,GAAG,eACHF,MAAOsF,EAAUwE,aACjB9B,SAAUZ,GACVa,UAAQ,EANZ,UAQK,yBAAQjI,MAAM,SAAd,eAEIiJ,EAAc5H,KAAI,SAACrB,GAAD,OACf,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,eASnC,sBAAKS,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,gCACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,qBACLD,GAAG,qBACHF,MAAOsF,EAAU6E,mBACjBnC,SAAUZ,GACVa,UAAQ,EANZ,UAQK,yBAAQjI,MAAM,SAAd,eAEI0J,EAAiBrI,KAAI,SAACrB,GAAD,OAClB,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,eAOnC,sBAAKS,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,wBACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,aACLD,GAAG,aACHF,MAAOsF,EAAUJ,WACjB8C,SAAUZ,GACVa,UAAQ,EANZ,UAQK,yBAAQjI,MAAM,SAAd,eAEImG,EAAS9E,KAAI,SAACrB,GAAD,OACV,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,eAOnC,sBAAKS,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,gBAAC+D,GAAA,EAAD,WACI,eAAC7D,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,aACLD,GAAG,aACH8H,SAAUqD,GACVrL,MAAO+K,EAAML,aAGjB,eAACmB,GAAA,EAAD,oBAIHd,EAAML,WAAa,IACZ,uBAAM/J,UAAW0D,EAAQzG,MAAzB,SAAiC,4CACjC,QAKZ,sBAAK+C,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,qBACA,gBAAC+D,GAAA,EAAD,WACI,eAAC7D,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,SACLD,GAAG,SACH8H,SAAUqD,GACVrL,MAAO+K,EAAMvN,SAEjB,eAACqO,GAAA,EAAD,mBAIHd,EAAMvN,OAAS,EACZ,uBAAMmD,UAAW0D,EAAQzG,MAAzB,SAAiC,qCACjC,QAGR,sBAAK+C,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,6BACA,gBAAC+D,GAAA,EAAD,WACI,eAAC7D,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,WACLD,GAAG,WACH8H,SAAUqD,GACVrL,MAAO+K,EAAMD,WAEjB,eAACe,GAAA,EAAD,gCAIHd,EAAMD,SAAW,IACV,uBAAMnK,UAAW0D,EAAQzG,MAAzB,SAAiC,+CACjC,QAGZ,sBAAK+C,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,6BAEA,gBAAC+D,GAAA,EAAD,WACI,eAAC7D,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,YACLD,GAAG,YACH8H,SAAUqD,GACVrL,MAAO+K,EAAMJ,YAEjB,eAACkB,GAAA,EAAD,iCAIHd,EAAMJ,UAAY,IACf,uBAAMhK,UAAW0D,EAAQzG,MAAzB,SAAiC,+CACjC,QAGR,sBAAK+C,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,+BACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,UACLD,GAAG,UACH8H,SAAUZ,GACVpH,MAAOsF,EAAUwG,QACjB7D,UAAQ,EANZ,UAQI,yBAAQjI,MAAM,SAAd,eAECwJ,EAAenI,KAAI,SAACrB,GAAD,OAChB,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,eAO/B,sBAAKS,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,kBACA,eAACE,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,UACLD,GAAG,UACH8H,SAAUZ,GACVpH,MAAOuE,EAAOuH,QACd7D,UAAQ,SAIhB,sBAAKtH,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,6BACA,eAACE,GAAA,EAAD,CACIhI,KAAK,WACLI,KAAK,eACL4L,KAAK,KAAKC,KAAK,KACf9L,GAAG,eACH8H,SAAUZ,GACVpH,MAAOsF,EAAU8E,aACjBnC,UAAQ,YAMnBzC,EAAS,eAACiD,GAAA,EAAD,IAAc,GAC5B,wBAEI,eAAC,KAAD,CACA1I,KAAK,SACLW,QAAQ,YACR7C,MAAM,UACN8C,UAAW0D,EAAQ5G,OACnBmD,UAAW,eAAC,KAAD,IACXgH,QAhXH,SAACP,GAClBA,EAAEqB,iBACFpD,EAAUqD,SAAWrN,EAAMmH,WAAWvC,GACtC6K,EAAMH,cAAgBtF,EAAUsE,UAChCmB,EAAMpC,SAASrN,EAAMmH,WAAWvC,GAChCoF,EAAUgF,aAAcS,EACxBzF,EAAU+E,gBAAiB/O,EAAMmH,WAAWwJ,WAAW/L,GACvDoF,EAAUyE,gBAAkBzE,EAAUwE,aACtCrE,GAAU,GACVrH,IAAMyK,KAAN,UAAcxK,EAAd,yBAA6CiH,EAC7C,CAAEhH,QAAS,CAAC,+BAA4B7D,MAGrC8D,MAAK,SAAAC,GACFiH,GAAU,GACVnK,EAAMmH,WAAWyJ,WAAU,EAC3BpD,IAAM/K,QAAQ,0BACdzC,EAAMoM,SACNpM,EAAMyN,0BAGTrK,OAAM,SAAAd,GACH6H,GAAU,GACP7H,EAAMuO,SACPrD,IAAMlL,MAAMA,EAAMuO,SAASC,SAE3BtD,IAAMlL,MAAM,iDAgVA,SAQE4H,EAGF,uBAAM1E,MAAO,CAAEC,cAAe,cAA9B,uBAFA,uBAAMD,MAAO,CAAEC,cAAe,cAA9B,oBAMJ,eAAC,KAAD,CACIL,QAAQ,YACRC,UAAW0D,EAAQ5G,OACnBmD,UAAW,eAAC,KAAD,IAHf,SAMI,uBAAME,MAAO,CAAEC,cAAe,cAA9B,qCCnlBhC/F,KAAOC,OAAO,MACdC,OAqPemR,qBAnPA,SAAA3P,GAAK,MAAK,CACvBgB,KAAM,CACJR,MAAO,QAEToP,QAAS,CACPxO,SAAUpB,EAAM6P,WAAWC,QAAQ,KAErCC,iBAAkB,CAChB3O,SAAUpB,EAAM6P,WAAWC,QAAQ,IACnC3O,MAAOnB,EAAMgQ,QAAQC,KAAKC,WAE5BC,KAAM,CACJC,cAAe,SACftP,OAAQ,GACRN,MAAO,IAET6P,QAAS,CACP/P,WAAY,UAEdgQ,OAAQ,CACNC,UAAW,UAEbC,OAAQ,CACNC,WAAW,aAAD,OAAezQ,EAAMgQ,QAAQU,SACvCC,QAAQ,GAAD,OAAK3Q,EAAMG,QAAQyQ,KAAnB,cAAkD,EAArB5Q,EAAMG,QAAQyQ,KAA3C,OAETC,KAAM,CACJ1P,MAAOnB,EAAMgQ,QAAQc,QAAQC,KAC7BC,eAAgB,OAChB,UAAW,CACTA,eAAgB,iBAqNPrB,EAhNf,SAAqB/Q,GACnB,IAAQ+I,EAAY/I,EAAZ+I,QACFsJ,EAAcrS,EAAMmH,WAAanH,EAAMmH,WAAa,GAC1D,EAAoCzE,mBAAS2P,GAA7C,mBAAOlL,EAAP,KAAmBmL,EAAnB,KACA,EAA0B5P,oBAAS,GAAnC,mBAAO6P,EAAP,KAAcC,EAAd,KACA,EAAkC9P,qBAAlC,mBAAkBgI,GAAlB,WAEA,EAAgChI,oBAAS,GAAzC,mBAAO+P,EAAP,KAAiBC,EAAjB,KAP0B,SAaTjF,IAbS,2EAaxB,sBAAA5K,EAAA,sDACIC,IACKtD,IADL,UACYuD,EADZ,sCACiDoE,EAAWvC,IACxD,CAAE5B,QAAS,CAAC,+BAA4B7D,MAEvC8D,MAAK,SAACC,GAELwH,EAAaxH,EAASC,SAEvBC,OAAM,SAACd,OAThB,4CAbwB,sBAuE1B,OA9DAe,qBAAU,WACRoK,MACC,IA6DD,uBAAKpI,UAAW0D,EAAQ3G,KAAxB,UACG,gBAACuQ,GAAA,EAAD,CAAgBC,iBAAe,EAA/B,UACS,eAACC,GAAA,EAAD,CAAuBC,WAAY,eAAC,KAAD,IAAnC,SAEA,eAAC,KAAD,UAEI,eAAC,KAAD,CAAKC,GAAI,GAAT,SACA,gBAAC,KAAD,CAAK1N,UAAW,OAAhB,UACA,eAAC,KAAD,CAAK0N,GAAI,GAAI1N,UAAW0D,EAAQiK,MAAhC,SACI,oBAAGxN,MAAO,CAAChD,SAAU,QAArB,SACC2E,EAAWlB,UAAY,IAAMkB,EAAWjB,YAI7C,eAAC,KAAD,CAAK6M,GAAI,EAAG1N,UAAW0D,EAAQiK,MAA/B,SACA,kCACK,IADL,gBAEiB,6BApCX,SAAC3O,GACzB,IACMC,EADcD,EACeA,WAAWE,MAAK,SAAAC,GAAG,MAAgB,kBAAZA,EAAIC,QAC9D,OAAOH,EAAiBA,EAAeI,MAAQ,GAiCRN,CAAkB+C,EAAW9C,mBAIlD,eAAC,KAAD,CAAK0O,GAAI,EAAG1N,UAAW0D,EAAQiK,MAA/B,SACA,qDACoB,6BAAI7L,EAAWb,mBAGnC,eAAC,KAAD,CAAKyM,GAAI,EAAG1N,UAAW0D,EAAQiK,MAA/B,SACA,kCACK,IADL,SAEU,6BA5EJ,SAAAxP,GACpB,IAAIC,EAAQ,IAAIC,KACZC,EAAYH,EAAII,MAAM,KACtBC,EAAa,IAAIH,MAAMC,EAAU,GAAIA,EAAU,GAAK,GAAIA,EAAU,IAClEG,EAAY,IAAIJ,KAAKG,GACrBE,EAAUN,EAAMO,cAAgBF,EAAUE,cAC1CC,EAAIR,EAAMS,WAAaJ,EAAUI,WAIjC,OAHID,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YAC7CJ,IAEQ,IAAZA,EACWE,EAAI,YAERF,EAAU,WA+DGR,CAAciD,KAAOW,EAAWb,aAAaG,OAAO,sBAGlE,eAAC,KAAD,CAAKsM,GAAI,EAAT,SACA,kCACK,IADL,WAEa,IACT,6BAAI5L,EAAWf,OAAO5E,eAG1B,eAAC,KAAD,CAAKuR,GAAI,EAAG1N,UAAW0D,EAAQiK,MAA/B,SACA,kCACK,IADL,kBAEmB,6BAxDhB,SAAC3O,GACtB,IACM4O,EADc5O,EACY6O,aAAa3O,MAAK,SAAAC,GAAG,MAAgB,SAAZA,EAAIC,QAC7D,OAAOwO,EAAcA,EAAYvO,MAAQ,GAqDAyO,CAAehM,EAAW+L,qBAGjD,eAAC,KAAD,CAAKH,GAAI,EAAG1N,UAAW0D,EAAQiK,MAA/B,SACA,kCACK,IADL,aAEc,+BAzDf,SAAC3O,GAClB,IACMmM,EADcnM,EACQmM,QAAQjM,MAAK,SAAAC,GAAG,OAAIA,EAAI4O,QACpD,OAAO5C,EAAUA,EAAQ4C,KAAO,GAsDIC,CAAWlM,EAAWqJ,SAA1B,YAId,eAAC,KAAD,CAAKuC,GAAI,cAYb,gBAACO,GAAA,EAAD,CAAuBjO,UAAW0D,EAAQ0I,QAA1C,UAEI,eAAC,KAAD,CACElP,MAAM,MACNgR,QAAQ,YAERC,MAAO,CAAEC,OAAO,EAAMlR,MAAO,MAAOmR,SAAU,OAAQH,QAAS,SAGjE,eAAC,KAAD,CACIE,OAAK,EACLlR,MAAM,OACNgR,QAAQ,SACRhC,KAAK,OACLiC,MAAO,CACHG,GAAI,IACJF,OAAO,EACPlR,MAAO,OACPmR,SAAU,OACVH,QAAS,aAGf,eAAC,KAAD,CACEE,OAAK,EACLlR,MAAM,OACNgR,QAAQ,SACRhC,KAAK,OACLiC,MAAO,CACHG,GAAI,IACJF,OAAO,EACPlR,MAAO,OACPmR,SAAU,OACVH,QAAS,aAIrB,sBAAKlO,UAAW0D,EAAQ2I,OAAxB,SACE,eAAC,KAAD,CAAQQ,SAAO,EAAE0B,QAAQ,QAAQtH,QAAS,kBArIjCtG,EAqIsDmB,EApI3EmL,EAAc,2BAAInL,GAAenB,SAC7BwM,GAAUD,GAFM,IAACvM,GAqIT,0CAEqB,IAAvBmB,EAAWyJ,WACX,uBAAKvL,UAAW0D,EAAQ2I,OAAQlM,MAAO,CAACqO,YAAY,QAApD,UACC,IAAI,eAAC,KAAD,CAAQvC,WAAS,EAAChF,QAAS,kBArI9BtG,EAqI4CmB,EApIxDmL,EAAc,2BAAInL,GAAenB,SAC7B0M,GAAaD,GAFN,IAACzM,GAqIG,qCAgBL,eAAC8N,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,CAAuBjB,WAAY,eAAC,KAAD,SAI7C,eAAC,GAAD,CAAY1G,OAhMD,kBAAMoG,GAAUD,IAgMCpG,UAAWoG,EAAOpL,WAAYA,EAAYsG,qBAAsBA,IAC5F,eAAC,GAAD,CAAkBrB,OA/LJ,kBAAMsG,GAAaD,IA+LItG,UAAWsG,EAAUtL,WAAYA,EAAYsG,qBAAsBA,U,qBCjPxG5E,GAAY1H,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,YA6IFsH,GAzII,SAAC9I,GAEhB,IAAMmH,EAAanH,EAAMmH,WAEnB4B,GADQC,cACEH,MAChB,EAA4CnG,mBAAS,IAArD,mBACA,GADA,UAC4BA,mBAAS,KAArC,mBAAOuG,EAAP,KAAe+K,EAAf,KACA,EAAkCtR,mBAAS,CAACuR,WAAY,GAAGC,eAAe,KAA1E,mBAAOlK,EAAP,KACA,GADA,KAC4BtH,oBAAS,IAArC,mBAAOwH,EAAP,KAAeC,EAAf,KACA,EAA4BzH,mBAAS,IAArC,mBAAO0H,EAAP,UAgCF,OACI,+BAEQ,gBAAC6B,GAAA,EAAD,CAAOC,KAAMlM,EAAMmM,UAAWC,OAAQpM,EAAMoM,OAAQ/G,UAAU,OAAOE,KAAK,KAA1E,UACD,gBAAC0G,GAAA,EAAMI,OAAP,CAAcD,OAAQpM,EAAMoM,OAAQ5G,MAAO,CAACsB,gBAAgB,WAA5D,2CAEI,eAAC,KAAD,CACG1B,QAAQ,GACRC,UAAU,YACViH,QAAStM,EAAMoM,YAGnB,eAACH,GAAA,EAAM3D,KAAP,UACQ,eAAC,KAAD,UACI,eAACrD,GAAA,EAAD,UACA,kCACI,uBAAKI,UAAU,MAAf,UAEA,sBAAKA,UAAU,2BAAf,SACQ,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,iBAAX,sCACA,eAAC,kBAAD,CACII,MAAM,EACN/H,KAAK,mBACLD,GAAG,mBACHF,MAAOuE,EAAO4D,QACdH,SAAU,SAAAI,GAAM,OACZkH,EAAU,2BAAK/K,GAAN,IAAczF,IAAKgD,KAAOsG,GAAQrG,OAAO,kBAGlDsG,IAAK,IAAIrJ,OAES,KAAzB0G,EAAO+J,eACJ,uBAAM9O,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAO+J,iBACxC,QAGR,sBAAK9O,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,iBAAX,yCACA,eAAC,kBAAD,CACII,MAAM,EACN/H,KAAK,mBACLD,GAAG,mBACHF,MAAOuE,EAAO4D,QACdH,SAAU,SAAAI,GAAM,OACZkH,EAAU,2BAAK/K,GAAN,IAAczF,IAAKgD,KAAOsG,GAAQrG,OAAO,kBAGlDsG,IAAK,IAAIrJ,OAES,KAAzB0G,EAAO+J,eACJ,uBAAM9O,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAO+J,iBACxC,WAMXjK,EAAS,eAACiD,GAAA,EAAD,IAAc,GACxB,wBAEA,eAAC,KAAD,CACA1I,KAAK,SACLW,QAAQ,YACR7C,MAAM,UACN8C,UAAW0D,EAAQ5G,OACnBmD,UAAW,eAAC,KAAD,IACXgH,QA7FP,SAACP,GAClBA,EAAEqB,iBAEApD,EAAUiK,WAAY9M,EAAWvC,GAEjCuF,GAAU,GACVrH,IAAMyK,KAAN,UAAcxK,EAAd,uBAA2CiH,EAC1C,CAAEhH,QAAS,CAAC,+BAA4B7D,MAGpC8D,MAAK,SAAAC,GACFiH,GAAU,GACVqD,IAAM/K,QAAQ,uBACdzC,EAAMoM,SACNpM,EAAMoU,kBAIThR,OAAM,SAAAd,GACH6H,GAAU,GACVqD,IAAMlL,MAAM,4BAmEE,SAQE4H,EAGF,uBAAM1E,MAAO,CAAEC,cAAe,cAA9B,uBAFA,uBAAMD,MAAO,CAAEC,cAAe,cAA9B,oBAMA,eAAC,KAAD,CACIL,QAAQ,YACRC,UAAW0D,EAAQ5G,OACnBmD,UAAW,eAAC,KAAD,IACXgH,QAAStM,EAAMoM,OAJnB,SAMA,uBAAM5G,MAAO,CAAEC,cAAe,cAA9B,qCC/J1BoD,GAAY1H,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,YAuYFkM,GAnYS,SAAC1N,GAErB,IAAMmH,EAAanH,EAAMmH,WAEnB4B,GADQC,cACEH,MAChB,EAA4CnG,mBAAS,IAArD,mBAAuB2R,GAAvB,WACA,EAA4B3R,mBAAS,IAArC,mBAAOuG,EAAP,KAAe+K,EAAf,KACA,EAAkCtR,mBAAS,CAACuR,WAAY,GAAGC,eAAe,KAA1E,mBAAOlK,EAAP,KAAkBC,EAAlB,KACA,EAA4BvH,oBAAS,GAArC,mBAAOwH,EAAP,KAAeC,EAAf,KACA,EAA4BzH,mBAAS,IAArC,mBAAO0H,EAAP,UAT+B,4CAe3B,sBAAAvH,EAAA,sDACIC,IACKtD,IADL,UACYuD,EADZ,8CAEI,CAAEC,QAAS,CAAC,+BAA4B7D,MAEvC8D,MAAK,SAACC,GAEHmR,EAAkBnR,EAASC,SAG9BC,OAAM,SAACd,OAVhB,4CAf2B,sBAW/Be,qBAAU,YAXqB,mCAY3BC,KACC,IAeD,IAAMwI,EAAoB,SAAAC,GACtB9B,EAAY,2BAAMD,GAAN,mBAAmB+B,EAAEC,OAAOnH,KAAOkH,EAAEC,OAAOtH,UA6BlE,OACI,+BAEQ,gBAACuH,GAAA,EAAD,CAAOC,KAAMlM,EAAMmM,UAAWC,OAAQpM,EAAMoM,OAAQ/G,UAAU,OAAOE,KAAK,KAA1E,UACD,gBAAC0G,GAAA,EAAMI,OAAP,CAAcD,OAAQpM,EAAMoM,OAAQ5G,MAAO,CAACsB,gBAAgB,WAA5D,mCAC0B,6BAAIK,EAAWmN,UAAY,IAAMnN,EAAWjB,UAClE,eAAC,KAAD,CACGd,QAAQ,GACRC,UAAU,YACViH,QAAStM,EAAMoM,YAGnB,eAACH,GAAA,EAAM3D,KAAP,UACQ,eAAC,KAAD,UACI,eAACrD,GAAA,EAAD,UACA,kCACI,uBAAKI,UAAU,MAAf,UAEI,sBAAKA,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,iBAAX,qCACA,eAACC,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,iBACLD,GAAG,iBACH8H,SAAUZ,EACVpH,MAAOuE,EAAOkL,eACdxH,UAAQ,IAEc,KAAzBvC,EAAO+J,eACJ,uBAAM9O,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAO+J,iBACxC,QAGR,sBAAK9O,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,iBAAX,2BACA,eAAC,kBAAD,CACII,MAAM,EACN/H,KAAK,mBACLD,GAAG,mBACHF,MAAOuE,EAAO4D,QACdH,SAAU,SAAAI,GAAM,OACZkH,EAAU,2BAAK/K,GAAN,IAAczF,IAAKgD,KAAOsG,GAAQrG,OAAO,kBAGlDsG,IAAK,IAAIrJ,OAES,KAAzB0G,EAAO+J,eACJ,uBAAM9O,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAO+J,iBACxC,QAIR,sBAAK9O,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,aAAX,+BACA,eAACC,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,aACLD,GAAG,aACH8H,SAAUZ,EACVpH,MAAOuE,EAAOsL,WACd5H,UAAQ,IAEU,KAArBvC,EAAOmK,WACA,uBAAMlP,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAOmK,aACxC,QAGR,sBAAKlP,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,0CACA,eAACE,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,WACLD,GAAG,WACH8H,SAAUZ,EACVpH,MAAOuE,EAAOuL,SACd7H,UAAQ,SAKZ,sBAAKtH,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,wCACA,eAACE,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,YACLD,GAAG,YACH8H,SAAUZ,EACVpH,MAAOuE,EAAOwL,UACd9H,UAAQ,IAES,KAApBvC,EAAOqK,UACA,uBAAMpP,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAOqK,YACxC,QAIR,sBAAKpP,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,iCACA,eAAC,kBAAD,CACIK,MAAM,EACN/H,KAAK,mBACLD,GAAG,mBACHF,MAAOuE,EAAO4D,QACdH,SAAU,SAAAI,GAAM,OACZkH,EAAU,2BAAK/K,GAAN,IAAczF,IAAKgD,KAAOsG,GAAQrG,OAAO,kBAGlDsG,IAAK,IAAIrJ,OAEE,iBAAduF,EAAOzF,IACJ,uBAAM6B,UAAW0D,EAAQzG,MAAzB,SAAiC,2BACjC,GACW,KAAd8H,EAAO5G,IACR,uBAAM6B,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAO5G,MACxC,QAGR,sBAAK6B,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,iCACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,SACLD,GAAG,SACHF,MAAOuE,EAAO7C,OACdsG,SAAUZ,EACVa,UAAQ,EANZ,UAQI,yBAAQjI,MAAM,GAAd,4BACA,yBAAQA,MAAM,IAAd,mBACA,yBAAQA,MAAM,IAAd,wBAEc,KAAjB0F,EAAOhE,OACJ,uBAAMf,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAOhE,SACxC,QAIR,sBAAKf,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,eAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,QACLD,GAAG,QACH8H,SAAUZ,EACVpH,MAAOuE,EAAOyL,MACd/H,UAAQ,SAIhB,sBAAKtH,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,eAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,UACLD,GAAG,UACH8H,SAAUZ,EACVpH,MAAOuE,EAAOuH,QACd7D,UAAQ,SAIhB,sBAAKtH,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,qCACA,eAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,UACLD,GAAG,UACH8H,SAAUZ,EACVpH,MAAOuE,EAAOuH,QACd7D,UAAQ,SAKhB,sBAAKtH,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,qCACA,eAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,UACLD,GAAG,UACH8H,SAAUZ,EACVpH,MAAOuE,EAAOuH,QACd7D,UAAQ,SAIhB,sBAAKtH,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,eAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,UACLD,GAAG,UACH8H,SAAUZ,EACVpH,MAAOuE,EAAOuH,QACd7D,UAAQ,SAIhB,sBAAKtH,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,sCACA,eAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,UACLD,GAAG,UACH8H,SAAUZ,EACVpH,MAAOuE,EAAOuH,QACd7D,UAAQ,SAIhB,sBAAKtH,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,oDACA,eAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,UACLD,GAAG,UACH8H,SAAUZ,EACVpH,MAAOuE,EAAOuH,QACd7D,UAAQ,SAIhB,sBAAKtH,UAAU,6BAaf,sBAAKA,UAAU,4BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAACE,GAAA,EAAD,CACIhI,KAAK,WACLI,KAAK,UACLD,GAAG,UACH8H,SAAUZ,EACVpH,MAAOuE,EAAOuH,QACd7D,UAAQ,EACRtH,UAAU,SAEd,eAAC,KAAD,oEAIJ,sBAAKA,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,gCACA,eAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,UACLD,GAAG,UACH8H,SAAUZ,EACVpH,MAAOuE,EAAOuH,QACd7D,UAAQ,SAIhB,sBAAKtH,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,sCACA,eAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,UACLD,GAAG,UACH8H,SAAUZ,EACVpH,MAAOuE,EAAOuH,QACd7D,UAAQ,YAMnBzC,EAAS,eAACiD,GAAA,EAAD,IAAc,GAC5B,wBAEI,eAAC,KAAD,CACA1I,KAAK,SACLW,QAAQ,YACR7C,MAAM,UACN8C,UAAW0D,EAAQ5G,OACnBmD,UAAW,eAAC,KAAD,IACXgH,QAtUP,SAACP,GAClBA,EAAEqB,iBAEApD,EAAUiK,WAAY9M,EAAWvC,GAEjCuF,GAAU,GACVrH,IAAMyK,KAAN,UAAcxK,EAAd,uBAA2CiH,EAC1C,CAAEhH,QAAS,CAAC,+BAA4B7D,MAGpC8D,MAAK,SAAAC,GACFiH,GAAU,GACVqD,IAAM/K,QAAQ,uBACdzC,EAAMoM,SACNpM,EAAMoU,kBAIThR,OAAM,SAAAd,GACH6H,GAAU,GACVqD,IAAMlL,MAAM,4BA4SE,SAQE4H,EAGF,uBAAM1E,MAAO,CAAEC,cAAe,cAA9B,uBAFA,uBAAMD,MAAO,CAAEC,cAAe,cAA9B,oBAMJ,eAAC,KAAD,CACIL,QAAQ,YACRC,UAAW0D,EAAQ5G,OACnBmD,UAAW,eAAC,KAAD,IAHf,SAMI,uBAAME,MAAO,CAAEC,cAAe,cAA9B,qCC1Z1BoD,GAAY1H,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,YAoLFmT,GAhLY,SAAC3U,GAExB,IAAMmH,EAAanH,EAAMmH,WAEnB4B,GADQC,cACEH,MAChB,EAA4CnG,mBAAS,IAArD,mBACA,GADA,UAC4BA,mBAAS,KAArC,mBAAOuG,EAAP,KAAe+K,EAAf,KACA,EAAkCtR,mBAAS,CAACuR,WAAY,GAAGC,eAAe,KAA1E,mBAAOlK,EAAP,KAAkBC,EAAlB,KACA,EAA4BvH,oBAAS,GAArC,mBAAOwH,EAAP,KAAeC,EAAf,KACA,EAA4BzH,mBAAS,IAArC,mBAAO0H,EAAP,KAEM0B,GAFN,KAE0B,SAAAC,GACtB9B,EAAY,2BAAMD,GAAN,mBAAmB+B,EAAEC,OAAOnH,KAAOkH,EAAEC,OAAOtH,WA6B9D,OACI,+BAEM,gBAACuH,GAAA,EAAD,CAAOC,KAAMlM,EAAMmM,UAAWC,OAAQpM,EAAMoM,OAAQ/G,UAAU,OAAOE,KAAK,KAA1E,UACA,gBAAC0G,GAAA,EAAMI,OAAP,CAAcD,OAAQpM,EAAMoM,OAAQ5G,MAAO,CAACsB,gBAAgB,WAA5D,iCAEK,eAAC,KAAD,CACG1B,QAAQ,GACRC,UAAU,YACViH,QAAStM,EAAMoM,YAGnB,eAACH,GAAA,EAAM3D,KAAP,UACQ,eAAC,KAAD,UACI,eAACrD,GAAA,EAAD,UACA,kCACI,uBAAKI,UAAU,MAAf,UACA,sBAAKA,UAAU,2BAAf,SACQ,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,yBACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,SACLD,GAAG,SACHF,MAAOuE,EAAO7C,OACdsG,SAAUZ,EACVa,UAAQ,EANZ,UAQI,yBAAQjI,MAAM,GAAd,4BACA,yBAAQA,MAAM,IAAd,mBACA,yBAAQA,MAAM,IAAd,wBAEc,KAAjB0F,EAAOhE,OACJ,uBAAMf,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAOhE,SACxC,QAGZ,sBAAKf,UAAU,2BAAf,SACQ,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,iBAAX,iCACA,eAAC,kBAAD,CACII,MAAM,EACN/H,KAAK,mBACLD,GAAG,mBACHF,MAAOuE,EAAO4D,QACdH,SAAU,SAAAI,GAAM,OACZkH,EAAU,2BAAK/K,GAAN,IAAczF,IAAKgD,KAAOsG,GAAQrG,OAAO,kBAGlDsG,IAAK,IAAIrJ,OAES,KAAzB0G,EAAO+J,eACJ,uBAAM9O,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAO+J,iBACxC,QAGR,sBAAK9O,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,+BACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,SACLD,GAAG,SACHF,MAAOuE,EAAO7C,OACdsG,SAAUZ,EACVa,UAAQ,EANZ,UAQI,yBAAQjI,MAAM,GAAd,4BACA,yBAAQA,MAAM,IAAd,mBACA,yBAAQA,MAAM,IAAd,wBAEc,KAAjB0F,EAAOhE,OACJ,uBAAMf,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAOhE,SACxC,QAGR,sBAAKf,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,iBAAX,6BACA,eAAC,kBAAD,CACII,MAAM,EACN/H,KAAK,mBACLD,GAAG,mBACHF,MAAOuE,EAAO4D,QACdH,SAAU,SAAAI,GAAM,OACZkH,EAAU,2BAAK/K,GAAN,IAAczF,IAAKgD,KAAOsG,GAAQrG,OAAO,kBAGlDsG,IAAK,IAAIrJ,OAES,KAAzB0G,EAAO+J,eACJ,uBAAM9O,UAAW0D,EAAQzG,MAAzB,SAAiC8H,EAAO+J,iBACxC,WAMXjK,EAAS,eAACiD,GAAA,EAAD,IAAc,GACxB,wBAEA,eAAC,KAAD,CACA1I,KAAK,SACLW,QAAQ,YACR7C,MAAM,UACN8C,UAAW0D,EAAQ5G,OACnBmD,UAAW,eAAC,KAAD,IACXgH,QApIP,SAACP,GAClBA,EAAEqB,iBAEApD,EAAUiK,WAAY9M,EAAWvC,GAEjCuF,GAAU,GACVrH,IAAMyK,KAAN,UAAcxK,EAAd,uBAA2CiH,EAC1C,CAAEhH,QAAS,CAAC,+BAA4B7D,MAGpC8D,MAAK,SAAAC,GACFiH,GAAU,GACVqD,IAAM/K,QAAQ,uBACdzC,EAAMoM,SACNpM,EAAMoU,kBAIThR,OAAM,SAAAd,GACH6H,GAAU,GACVqD,IAAMlL,MAAM,4BA0GE,SAQE4H,EAGF,uBAAM1E,MAAO,CAAEC,cAAe,cAA9B,uBAFA,uBAAMD,MAAO,CAAEC,cAAe,cAA9B,oBAMA,eAAC,KAAD,CACIL,QAAQ,YACRC,UAAW0D,EAAQ5G,OACnBmD,UAAW,eAAC,KAAD,IACXgH,QAAStM,EAAMoM,OAJnB,SAMA,uBAAM5G,MAAO,CAAEC,cAAe,cAA9B,qC,wGC1M1BoD,GAAY1H,cAAW,SAAAC,GAAK,MAAK,CACnCe,OAAQ,CACNb,OAAQF,EAAMG,QAAQ,IAExBe,MAAO,CACLC,MAAO,UACPC,SAAU,QAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,YAg+BhB,SAASoS,GAAT,GAII,IAHFC,EAGC,EAHDA,SACAC,EAEC,EAFDA,MACAC,EACC,EADDA,uBAIA,OACQ,gCACI,8BAAKF,EAASG,MACd,8BAAKH,EAASI,eACd,wBACA,8BACI,eAACC,GAAA,EAAD,CAAY,aAAW,SAAS3P,KAAK,QAAQhD,MAAM,QAAQ+J,QAAS,kBAAKyI,EAAuBD,IAAhG,SACI,eAAC,KAAD,CAAYtS,SAAS,mBAQ3C,SAAS2S,GAAT,GAII,IAHFN,EAGC,EAHDA,SACAC,EAEC,EAFDA,MACAM,EACC,EADDA,gBAIA,OACQ,gCAEI,8BAAKP,EAASQ,mBACd,8BAAKR,EAASS,kBACd,wBACA,8BACI,eAACJ,GAAA,EAAD,CAAY,aAAW,SAAS3P,KAAK,QAAQhD,MAAM,QAAQ+J,QAAS,kBAAK8I,EAAgBN,IAAzF,SACI,eAAC,KAAD,CAAYtS,SAAS,mBAO5B+S,OAvgCQ,SAACvV,GACHA,EAAMmH,WAAzB,IACM4B,EAAUF,KAChB,EAA0CnG,mBAAS,IAAnD,mBAAOiL,EAAP,KAAsBC,EAAtB,KACA,EAAgDlL,mBAAS,IAAzD,mBAAO0L,EAAP,KAAyBC,EAAzB,KACA,EAA4C3L,mBAAS,IAArD,mBAAO8S,EAAP,KAAuBC,EAAvB,KACA,EAAgC/S,mBAAS,IAAzC,mBAAOmI,EAAP,KAAiBC,EAAjB,KACA,EAA4CpI,mBAAS,IAArD,mBAAOgT,EAAP,KAAuBC,EAAvB,KACA,EAA4BjT,mBAAS,CAACsS,IAAI,GAAIC,aAAa,KAA3D,mBAAOW,EAAP,KAAeC,EAAf,KACA,EAA8BnT,mBAAS,IAAvC,mBAAOoT,EAAP,KAAgBC,EAAhB,KACA,EAAkCrT,mBAAS,CAAC2S,iBAAiB,GAAIC,gBAAgB,KAAjF,mBAAOU,EAAP,KAAkBC,EAAlB,KACA,EAA0CvT,mBAAS,IAAnD,mBAAOwT,EAAP,KAAsBC,EAAtB,KACA,EAA8BzT,oBAAS,GAAvC,mBAAO0T,EAAP,KAAgBC,EAAhB,KACA,EAAuC3T,mBAAS,IAAhD,mBAAO4T,EAAP,KACA,IADA,KACkC5T,mBAAS,CACG8S,eAAgB,GAChBe,QAAS,GACTC,YAAa,GACbC,qBAAsB,GACtBC,YAAa,EACbhI,IAAK,GACLC,cAAe,EACfG,aAAc,GACdL,gBAAiB,EACjBQ,WAAY,EACZJ,mBAAoB,EACpBE,gBAAiB,EACjB4H,gBAAiB,GACjBC,QAAQ,GACRC,WAAY,GACZC,wBAAyB,GACzBzJ,SAAU,EACV0J,OAAQ,GACRC,WAAY,GACZC,KAAM,GACN3I,UAAW,GAEXE,aAAc,KAvB5D,qBAAOxE,GAAP,MAAkBC,GAAlB,MAyBA,GAAgCvH,mBAAS,CACC0M,WAAY,GACZC,UAAU,GACVC,cAAe,GACfL,WAAY,EACZ/M,OAAQ,GACRmL,SAAUrN,EAAMmH,WAAWvC,GAC3B2K,cAAe,EACfC,SAAS,KARnD,qBAAOC,GAAP,MAAcC,GAAd,MAUArM,qBAAU,YAjDsB,oCAkD9BsM,GACAC,KAnD8B,oCAoD9BsH,GACAvL,KACAwL,OACC,IAGD,IAAMvH,GAAY,WAClB9M,IACItD,IADJ,UACWuD,EADX,0CAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEH0K,EAAiB1K,EAASC,SAE7BC,OAAM,SAACd,QAML6U,GAAgB,WACtBrU,IACItD,IADJ,UACWuD,EADX,6CAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEHyS,EAAkBzS,EAASC,MACTD,EAASC,QAE9BC,OAAM,SAACd,QAOLqJ,GAAU,WAChB7I,IACItD,IADJ,UACWuD,EADX,qCAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEH4H,EAAY5H,EAASC,SAExBC,OAAM,SAACd,QAnGmB,8CAyG/B,sBAAAO,EAAA,sDACCC,IACKtD,IADL,UACYuD,EADZ,gDAEI,CAAEC,QAAS,CAAC,+BAA4B7D,MAEvC8D,MAAK,SAACC,GAEHmL,EAAoBnL,EAASC,SAGhCC,OAAM,SAACd,OAVb,4CAzG+B,oEAuH/B,sBAAAO,EAAA,sDACCC,IACKtD,IADL,UACYuD,EADZ,mDAEI,CAAEC,QAAS,CAAC,+BAA4B7D,MAEvC8D,MAAK,SAACC,GACLuS,EAAkBvS,EAASC,SAG5BC,OAAM,SAACd,OATb,4CAvH+B,sBAoI9B,IAAMwJ,GAAoB,SAAAC,GAC1B9B,GAAY,2BAAMD,IAAN,mBAAmB+B,EAAEC,OAAOnH,KAAOkH,EAAEC,OAAOtH,SACpC,iBAAjBqH,EAAEC,OAAOnH,OACU,OAAjBkH,EAAEC,OAAOtH,MACR2R,GAAW,GAEXA,GAAW,KAIbtG,GAAgC,SAAAhE,GACpC2D,GAAe,2BAAMD,IAAN,mBAAe1D,EAAEC,OAAOnH,KAAOkH,EAAEC,OAAOtH,UAEnD0S,GAAuB,SAAArL,GAC3B8J,EAAS,2BAAMD,GAAN,mBAAgB7J,EAAEC,OAAOnH,KAAOkH,EAAEC,OAAOtH,UAE9C2S,GAA6B,SAAAtL,GACjCkK,EAAY,2BAAMD,GAAN,mBAAmBjK,EAAEC,OAAOnH,KAAOkH,EAAEC,OAAOtH,UAEpD4S,GAAS,SAAAvL,GACbgK,EAAW,GAAD,oBAAKD,GAAL,CAAcF,MAGpBb,GAAyB,SAAAD,GAC3BgB,EAAQyB,OAAOzC,EAAO,GACtBiB,EAAW,aAAID,KAGb0B,GAAe,SAAAzL,GACnBoK,EAAiB,GAAD,oBAAKD,GAAL,CAAoBF,MAGhCZ,GAAkB,SAAAN,GACxBoB,EAAcqB,OAAOzC,EAAO,GAC5BqB,EAAiB,aAAID,KAIfuB,GAAQ,CACd,CAAEC,SAAU,QAASC,OAAQ,kBAC3B,eAAC,KAAIC,KAAL,UAEE,uBAAKvS,UAAU,MAAf,UACE,sBAAKA,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,6BACA,eAACE,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,gBACLD,GAAG,gBACHF,MAAO+K,GAAMH,cACb5C,SAAUqD,GACVpD,UAAQ,SAMhB,sBAAKtH,UAAU,6BACf,sBAAKA,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,0BAEA,gBAAC+D,GAAA,EAAD,WACA,eAACC,GAAA,EAAD,iBAGI,eAAC9D,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,aACLD,GAAG,aACH8H,SAAUqD,GACVrL,MAAO+K,GAAML,gBAGpBK,GAAML,WAAa,IACZ,uBAAM/J,UAAW0D,EAAQzG,MAAzB,SAAiC,4CACjC,QAIZ,sBAAK+C,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,qBACA,gBAAC+D,GAAA,EAAD,WACA,eAACC,GAAA,EAAD,gBAGI,eAAC9D,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,SACLD,GAAG,SACH8H,SAAUqD,GACVrL,MAAO+K,GAAMvN,YAIpBuN,GAAMvN,OAAS,EACR,uBAAMmD,UAAW0D,EAAQzG,MAAzB,SAAiC,qCACjC,QAGZ,sBAAK+C,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,6BACA,gBAAC+D,GAAA,EAAD,WACA,eAACC,GAAA,EAAD,6BAGI,eAAC9D,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,WACLD,GAAG,WACH8H,SAAUqD,GACVrL,MAAO+K,GAAMD,cAIpBC,GAAMD,SAAW,IACV,uBAAMnK,UAAW0D,EAAQzG,MAAzB,SAAiC,+CACjC,QAGZ,sBAAK+C,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,6BAEA,gBAAC+D,GAAA,EAAD,WACA,eAACC,GAAA,EAAD,8BAGI,eAAC9D,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,YACLD,GAAG,YACH8H,SAAUqD,GACVrL,MAAO+K,GAAMJ,eAIpBI,GAAMJ,UAAY,IACX,uBAAMhK,UAAW0D,EAAQzG,MAAzB,SAAiC,+CACjC,eAOlB,CAAEoV,SAAU,eAAgBC,OAAQ,kBAClC,eAAC,KAAIC,KAAL,UAEI,uBAAKvS,UAAU,MAAf,UAEE,sBAAKA,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,eACLD,GAAG,eACHF,MAAOsF,GAAUwE,aACjB9B,SAAUZ,GACVa,UAAQ,EANZ,UAQM,yBAAQjI,MAAM,GAAd,eAEGiJ,EAAc5H,KAAI,SAACrB,GAAD,OACf,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,eAQnC,sBAAKS,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACE,eAAC,KAAD,gCACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,qBACLD,GAAG,qBACHF,MAAOsF,GAAU6E,mBACjBnC,SAAUZ,GACVa,UAAQ,EANZ,UAQM,yBAAQjI,MAAM,GAAd,eAEG0J,EAAiBrI,KAAI,SAACrB,GAAD,OAClB,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,eAOjC,sBAAKS,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACE,eAAC,KAAD,iCACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,iBACLD,GAAG,iBACHF,MAAOsF,GAAUwL,eACjB9I,SAAUZ,GACVa,UAAQ,EANZ,UAQM,yBAAQjI,MAAM,GAAd,eAEG8Q,EAAezP,KAAI,SAACrB,GAAD,OAChB,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,eAOjC,sBAAKS,UAAU,6BACf,sBAAKA,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,6BACA,eAACE,GAAA,EAAD,CACIhI,KAAK,WACLI,KAAK,eACL4L,KAAK,KAAKC,KAAK,KACf9L,GAAG,eACH8H,SAAUZ,GACVpH,MAAOsF,GAAU8E,aACjBnC,UAAQ,gBAQxB,CAAE+K,SAAU,eAAgBC,OAAQ,kBAClC,eAAC,KAAIC,KAAL,UAEI,uBAAKvS,UAAU,MAAf,UAEE,sBAAKA,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,wCACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,eACLD,GAAG,eACHF,MAAOsF,GAAUwE,aACjB9B,SAAUZ,GACVa,UAAQ,EANZ,UAQM,yBAAQjI,MAAM,GAAd,eACA,yBAAQA,MAAM,MAAd,kBACA,yBAAQA,MAAM,KAAd,0BAMC,IAAV0R,EACC,uCACE,sBAAK/Q,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACE,eAAC,KAAD,wCACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,qBACLD,GAAG,qBACHF,MAAOsF,GAAU6E,mBACjBnC,SAAUZ,GACVa,UAAQ,EANZ,UAQM,yBAAQjI,MAAM,GAAd,eACA,yBAAQA,MAAM,MAAd,kBACE,yBAAQA,MAAM,KAAd,yBAIV,sBAAKW,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACE,eAAC,KAAD,wBACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,iBACLD,GAAG,iBACHF,MAAOsF,GAAUwL,eACjB9I,SAAUZ,GACVa,UAAQ,EANZ,UAQM,yBAAQjI,MAAM,GAAd,eACA,yBAAQA,MAAM,MAAd,kBACA,yBAAQA,MAAM,KAAd,yBAIR,sBAAKW,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACE,eAAC,KAAD,2BACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,iBACLD,GAAG,iBACHF,MAAOsF,GAAUwL,eACjB9I,SAAUZ,GACVa,UAAQ,EANZ,UAQM,yBAAQjI,MAAM,GAAd,eACA,yBAAQA,MAAM,MAAd,kBACA,yBAAQA,MAAM,KAAd,yBAIR,sBAAKW,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACE,eAAC,KAAD,oBACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,iBACLD,GAAG,iBACHF,MAAOsF,GAAUwL,eACjB9I,SAAUZ,GACVa,UAAQ,EANZ,UAQM,yBAAQjI,MAAM,GAAd,eACA,yBAAQA,MAAM,MAAd,kBACA,yBAAQA,MAAM,KAAd,yBAIR,sBAAKW,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACE,eAAC,KAAD,qCACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,iBACLD,GAAG,iBACHF,MAAOsF,GAAUwL,eACjB9I,SAAUZ,GACVa,UAAQ,EANZ,UAQM,yBAAQjI,MAAM,GAAd,eACA,yBAAQA,MAAM,MAAd,kBACA,yBAAQA,MAAM,KAAd,yBAIR,sBAAKW,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACE,eAAC,KAAD,uBACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,iBACLD,GAAG,iBACHF,MAAOsF,GAAUwL,eACjB9I,SAAUZ,GACVa,UAAQ,EANZ,UAQM,yBAAQjI,MAAM,GAAd,eACA,yBAAQA,MAAM,MAAd,kBACF,yBAAQA,MAAM,KAAd,yBAIN,sBAAKW,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACE,eAAC,KAAD,wBACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,aACLD,GAAG,aACHF,MAAOsF,GAAUJ,WACjB8C,SAAUZ,GACVa,UAAQ,EANZ,UAQM,yBAAQjI,MAAM,GAAd,eAEGmG,EAAS9E,KAAI,SAACrB,GAAD,OACV,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,kBAUrC,UAMR,CAAE8S,SAAU,0BAA2BC,OAAQ,kBAC7C,eAAC,KAAIC,KAAL,UACE,uBAAKvS,UAAU,MAAf,UACE,sBAAKA,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,eAACE,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,kBACLD,GAAG,kBACHF,MAAOsR,EAAUV,gBACjB5I,SAAU2K,GACV1K,UAAQ,SAMhB,sBAAKtH,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,uBACA,eAACE,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,mBACLD,GAAG,mBACHF,MAAOsR,EAAUX,iBACjB3I,SAAU2K,GACV1K,UAAQ,SAMhB,sBAAKtH,UAAU,2BAAf,SACA,gBAACsB,GAAA,EAAD,CAAUgN,GAAG,IAAIpR,MAAM,QAAS+J,QAASkL,GAAejS,KAAK,OAAOC,MAAO,CAAE3D,UAAU,IAAvF,UACI,eAACgW,GAAA,EAAD,CAAMhT,KAAK,SADf,YAICqR,EAAclR,OAAQ,EAEnB,eAAC8S,GAAA,EAAD,UACA,gBAACC,GAAA,EAAD,CAAQC,SAAO,EAACC,YAAU,EAA1B,UACM,iCACI,gCACI,0CACA,4CACA,6BAGR,iCACD/B,EAAcnQ,KAAI,SAAC8O,EAAUC,GAAX,OAEjB,eAACK,GAAD,CAEIL,MAAOA,EACPD,SAAUA,EACVO,gBAAiBA,IAHZN,aAUX,UAMd,CAAE4C,SAAU,MAAOC,OAAQ,kBACzB,eAAC,KAAIC,KAAL,UAEE,uBAAKvS,UAAU,MAAf,UACE,sBAAKA,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,mBACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,MACLD,GAAG,MACHF,MAAOkR,EAAOZ,IACdtI,SAAU0K,GACVzK,UAAQ,EANZ,UAQM,yBAAQjI,MAAM,GAAd,eAEGgR,EAAe3P,KAAI,SAACrB,GAAD,OAChB,yBAAuBA,MAAOA,EAAMlD,QAApC,SACKkD,EAAMlD,SADEkD,EAAME,eAQnC,sBAAKS,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,eAACE,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,eACLD,GAAG,eACHF,MAAOkR,EAAOX,aACdvI,SAAU0K,GACVzK,UAAQ,SAOhB,sBAAKtH,UAAU,2BAAf,SACA,gBAACsB,GAAA,EAAD,CAAUgN,GAAG,IAAIpR,MAAM,QAAS+J,QAASgL,GAAS/R,KAAK,OAAOC,MAAO,CAAE3D,UAAU,IAAjF,UACI,eAACgW,GAAA,EAAD,CAAMhT,KAAK,SADf,YAKCiR,EAAQ9Q,OAAQ,EAEb,eAAC8S,GAAA,EAAD,UACA,gBAACC,GAAA,EAAD,CAAQC,SAAO,EAACC,YAAU,EAA1B,UACM,iCACI,gCACI,sCACA,4CACA,6BAGR,iCACDnC,EAAQ/P,KAAI,SAAC8O,EAAUC,GAAX,OAEX,eAACF,GAAD,CAEIE,MAAOA,EACPD,SAAUA,EACVE,uBAAwBA,IAHnBD,aAUX,UAMd,CAAE4C,SAAU,aAAcC,OAAQ,kBAClC,eAAC,KAAIC,KAAL,UACE,sBAAKvS,UAAU,MAAf,SACA,gBAAC6C,EAAA,EAAD,WACQ,eAAC,KAAD,CAAK6K,GAAI,EAAG1N,UAAU,kBAAtB,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,CAAOC,IAAI,gBAAX,oCACA,eAACC,GAAA,EAAD,CACEhI,KAAK,wBAIf,eAAC,KAAD,CAAKsO,GAAI,EAAG1N,UAAU,kBAAtB,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,CAAOC,IAAI,YAAX,gCACA,eAAC,KAAD,CACIG,UAAQ,EACRuL,SAAS,SAIrB,eAAC,KAAD,CAAKnF,GAAI,EAAG1N,UAAU,kBAAtB,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,CAAOC,IAAI,YAAX,0BAEA,eAAC,KAAD,CACIG,UAAQ,EACRuL,SAAS,SAIrB,eAAC,KAAD,CAAKnF,GAAI,EAAG1N,UAAU,kBAAtB,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,CAAOC,IAAI,WAAX,8BACA,eAAC,KAAD,CACIG,UAAQ,EACRuL,SAAS,SAKjB,eAAC,KAAD,CAAKnF,GAAI,EAAG1N,UAAU,kBAAtB,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,CAAOC,IAAI,eAAX,4BACA,eAAC,KAAD,CACAG,UAAQ,EACRuL,SAAS,SAKrB,eAAC,KAAD,CAAKnF,GAAI,EAAG1N,UAAU,kBAAtB,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,CAAOC,IAAI,kBAAX,8BACA,eAACC,GAAA,EAAD,CACIE,UAAQ,EACR9H,KAAK,kBACLD,GAAG,yBAMf,eAAC,KAAD,CAAKmO,GAAI,GAAT,SACM,gBAACpM,GAAA,EAAD,CAAUgN,GAAG,IAAIpR,MAAM,QAAS8C,UAAU,YAAYiH,QAASkL,GAAejS,KAAK,OAAOC,MAAO,CAAE3D,UAAU,IAA7G,UACE,eAACgW,GAAA,EAAD,CAAMhT,KAAK,SADb,0BASlB,CAAE6S,SAAU,WAAYC,OAAQ,kBAC9B,eAAC,KAAIC,KAAL,UACI,uBAAKvS,UAAU,MAAf,UAEsB,sBAAKA,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,UAAX,+BACA,eAACC,GAAA,EAAD,CACIhI,KAAK,iBACLI,KAAK,YACLD,GAAG,YAGH+H,UAAQ,SAIhB,sBAAKtH,UAAU,6BAEf,sBAAKA,UAAU,6BACf,sBAAKA,UAAU,4BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,+BACA,eAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,WACLD,GAAG,WAHP,SAQI,yBAAQF,MAAM,SAAd,sBAWP4R,EAAatR,OAAQ,EAEd,uCACI,eAAC,KAAD,UACA,gBAACC,GAAA,EAAD,WACA,2DACA,sBAAKI,UAAU,MAAf,SACCiR,EAAavQ,KAAI,SAACoS,GAAD,OACd,uCACJ,sBAAK9S,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,oBACA,eAACE,GAAA,EAAD,CACQhI,KAAK,cAUb,sBAAKY,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACA,gBAAC,KAAD,iCAA4B4L,EAAUC,UACtC,eAAC3L,GAAA,EAAD,CACQhI,KAAK,SAKLkI,UAAQ,SAQhB,sBAAKtH,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,4BACA,eAACE,GAAA,EAAD,CACIhI,KAAK,SAKLkI,UAAQ,EANZ,SAQI,yBAAQjI,MAAM,SAAd,mCAiBR,2BAIR,GAEJ,sBAAKW,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,6BACA,eAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,kBACLD,GAAG,kBAGH+H,UAAQ,SAUhB,sBAAKtH,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,eAACE,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,YACLD,GAAG,YAGH+H,UAAQ,SAMhB,sBAAKtH,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,wBACA,eAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,WACLD,GAAG,WAGH+H,UAAQ,SAMhB,sBAAKtH,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,6BACA,eAAC+D,GAAA,EAAD,UACI,eAAC7D,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,eACLD,GAAG,wBAYf,eAAC,KAAD,CAAKmO,GAAI,GAAT,SACM,gBAACpM,GAAA,EAAD,CAAUgN,GAAG,IAAIpR,MAAM,QAAS8C,UAAU,YAAYiH,QAASkL,GAAejS,KAAK,OAAOC,MAAO,CAAE3D,UAAU,IAA7G,UACE,eAACgW,GAAA,EAAD,CAAMhT,KAAK,SADb,yBAiBhC,OACE,eAAC,WAAD,UACG,gBAACoH,GAAA,EAAD,CAAOC,KAAMlM,EAAMmM,UAAWC,OAAQpM,EAAMoM,OAAQ/G,UAAU,OAAOE,KAAK,KAA1E,UACM,gBAAC0G,GAAA,EAAMI,OAAP,CAAcD,OAAQpM,EAAMoM,OAAQ5G,MAAO,CAACsB,gBAAgB,WAA5D,mCAEI,eAAC,KAAD,CACG1B,QAAQ,GACRC,UAAU,YACViH,QAAStM,EAAMoM,YAGnB,eAACH,GAAA,EAAM3D,KAAP,UACE,gBAACJ,EAAA,EAAD,WACA,gCACE,eAAC,KAAD,CAAKuP,MAAOA,OAEZ,eAACY,GAAA,EAAD,UACE,eAACA,GAAA,EAAKC,OAAN,CAAa1W,MAAO,EAApB,SACF,eAAC,KAAD,CACI6C,KAAK,SACLW,QAAQ,YACR7C,MAAM,UACN8C,UAAW0D,EAAQ5G,OACnBmK,QA5BH,SAACP,GAClBA,EAAEqB,iBACFtI,QAAQC,IAAIiF,KAqBI,iCCt9BdnB,GAAY1H,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,QAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,YAqWH+V,GAjWQ,SAACvY,GACDA,EAAMmH,WACX6B,cADd,IAEMD,EAAUF,KAChB,EAA0CnG,mBAAS,IAAnD,mBAAOiL,EAAP,KAAsBC,EAAtB,KACA,EAA4BlL,mBAAS,IAArC,mBACA,GADA,UAC4BA,oBAAS,IAArC,mBAAOwH,EAAP,KAAeC,EAAf,KACA,EAA4BzH,mBAAS,IAArC,mBACA,GADA,UACgCA,mBAAS,KAAzC,mBAAiBoI,GAAjB,WACA,EAAsCpI,mBAAS,IAA/C,mBAAOoL,EAAP,KAAoBC,EAApB,KACA,EAAsCrL,mBAAS,IAA/C,mBAAOsL,EAAP,KAAoBC,EAApB,KACA,EAA4CvL,mBAAS,IAArD,mBAAuByL,GAAvB,WACA,EAAgDzL,mBAAS,IAAzD,mBAAyB2L,GAAzB,WACA,EAAkC3L,mBAAS,CACK2K,SAASrN,EAAMmH,WAAWvC,GAC1B0J,UAAW,GACXC,UAAW,GACXC,aAAa,GACbC,gBAAgB,GAChBC,IAAK,GACLC,cAAe,GACfC,gBAAgB,EAChBC,mBAAoB,GACpBC,aAAc,GACdC,gBAAiB,GACjBC,aAAa,GACbC,WAAW,EACXC,cAAe,EACfC,UAAU,IAf1D,mBAAOnF,EAAP,KAAkBC,EAAlB,KAmBA,EAAgCvH,mBAAS,CACG0M,WAAY,GACZC,UAAU,GACVC,cAAe,GACfL,WAAY,EACZ/M,OAAQ,GACRmL,SAAUrN,EAAMmH,WAAWvC,GAC3B2K,cAAe,EACfC,SAAS,KARrD,mBAAOC,EAAP,UAWApM,qBAAU,YA3CoB,mCA4C1BsM,GACAC,IACAjE,IACAkE,IACAC,MACC,IAEH,IAAMF,EAAY,WAChB9M,IACItD,IADJ,UACWuD,EADX,0CAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEH0K,EAAiB1K,EAASC,SAE7BC,OAAM,SAACd,QAMLwN,EAAa,WACnBhN,IACItD,IADJ,UACWuD,EADX,qBAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEH6K,EAAe7K,EAASC,SAE3BC,OAAM,SAACd,QAqBPuN,EAAiB,WACrB/M,IACItD,IADJ,UACWuD,EADX,4CAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEHiL,EAAkBjL,EAASC,SAE9BC,OAAM,SAACd,QAzGe,4CA+G1B,sBAAAO,EAAA,sDACIC,IACKtD,IADL,UACYuD,EADZ,gDAEI,CAAEC,QAAS,CAAC,+BAA4B7D,MAEvC8D,MAAK,SAACC,GAEHmL,EAAoBnL,EAASC,SAGhCC,OAAM,SAACd,OAVhB,4CA/G0B,sBA6H1B,IAAMqJ,EAAU,WACZ7I,IACItD,IADJ,UACWuD,EADX,qCAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEH4H,EAAY5H,EAASC,SAExBC,OAAM,SAACd,QAMTwJ,EAAoB,SAAAC,GACtB9B,EAAY,2BAAMD,GAAN,mBAAmB+B,EAAEC,OAAOnH,KAAOkH,EAAEC,OAAOtH,UAsElE,OACI,+BAEQ,gBAACuH,GAAA,EAAD,CAAOC,KAAMlM,EAAMmM,UAAWC,OAAQpM,EAAMoM,OAAQ/G,UAAU,OAAOE,KAAK,KAA1E,UACD,gBAAC0G,GAAA,EAAMI,OAAP,CAAcD,OAAQpM,EAAMoM,OAAQ5G,MAAO,CAACsB,gBAAgB,WAA5D,4BAEI,eAAC,KAAD,CACG1B,QAAQ,GACRC,UAAU,YACViH,QAAStM,EAAMoM,YAGnB,eAACH,GAAA,EAAM3D,KAAP,UACQ,eAAC,KAAD,UACI,eAACrD,GAAA,EAAD,UACA,kCACI,uBAAKI,UAAU,MAAf,UAEI,sBAAKA,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,UAAX,kCACA,eAACC,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,YACLD,GAAG,YACH8H,SAAUZ,EACVpH,MAAOsF,EAAUsE,UACjB3B,UAAQ,SAKhB,sBAAKtH,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,gBAACE,GAAA,EAAD,CACQhI,KAAK,SACLI,KAAK,YACLD,GAAG,YAEH8H,SAzGP,SAAAX,GACzB,IAlEiBnH,EAkEboL,EAAYjE,EAAEC,OAAOtH,MACzBuF,EAAY,2BAAMD,GAAN,IAAiBmF,UAAUa,KAnEtBpL,EAoELoL,EAnEZlN,IACItD,IADJ,UACWuD,EADX,6BACuC6B,GAChC,CAAE5B,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEH+K,EAAe/K,EAASC,SAE3BC,OAAM,SAACd,QAkKqBqK,UAAQ,EANhB,UAQS,yBAAQjI,MAAM,SAAd,eAEIoJ,EAAY/H,KAAI,SAACrB,GAAD,OACb,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMuL,aADEvL,EAAME,eAQnC,sBAAKS,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,+BACA,gBAACE,GAAA,EAAD,CACQhI,KAAK,SACLI,KAAK,gBACLD,GAAG,gBACHF,MAAOsF,EAAUkF,cACjBxC,SAAUZ,EACVa,UAAQ,EANhB,UAQS,yBAAQjI,MAAM,SAAd,eAEIsJ,EAAYjI,KAAI,SAACrB,GAAD,OACb,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMuL,aADEvL,EAAME,eAWnC,sBAAKS,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,iCACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,eACLD,GAAG,eACHF,MAAOsF,EAAUwE,aACjB9B,SAAUZ,EACVa,UAAQ,EANZ,UAQK,yBAAQjI,MAAM,SAAd,eAEIiJ,EAAc5H,KAAI,SAACrB,GAAD,OACf,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,kBAYtCsF,EAAS,eAACiD,GAAA,EAAD,IAAc,GAC5B,wBAEI,eAAC,KAAD,CACA1I,KAAK,SACLW,QAAQ,YACR7C,MAAM,UACN8C,UAAW0D,EAAQ5G,OACnBmD,UAAW,eAAC,KAAD,IACXgH,QApJH,SAACP,GAClBA,EAAEqB,iBACFpD,EAAUqD,SAAWrN,EAAMmH,WAAWvC,GACtC6K,EAAMH,cAAgBtF,EAAUsE,UAChCmB,EAAMpC,SAASrN,EAAMmH,WAAWvC,GAChCoF,EAAUgF,aAAcS,EACxBzF,EAAU+E,gBAAiB/O,EAAMmH,WAAWwJ,WAAW/L,GACvDoF,EAAUyE,gBAAkBzE,EAAUwE,aACtCrE,GAAU,GACVrH,IAAMyK,KAAN,UAAcxK,EAAd,yBAA6CiH,EAC7C,CAAEhH,QAAS,CAAC,+BAA4B7D,MAGrC8D,MAAK,SAAAC,GACFiH,GAAU,GACVnK,EAAMmH,WAAWyJ,WAAU,EAC3BpD,IAAM/K,QAAQ,0BACdzC,EAAMoM,SACNpM,EAAMyN,0BAGTrK,OAAM,SAAAd,GACH6H,GAAU,GACP7H,EAAMuO,SACPrD,IAAMlL,MAAMA,EAAMuO,SAASC,SAE3BtD,IAAMlL,MAAM,iDAoHA,SAQE4H,EAGF,uBAAM1E,MAAO,CAAEC,cAAe,cAA9B,uBAFA,uBAAMD,MAAO,CAAEC,cAAe,cAA9B,oBAMJ,eAAC,KAAD,CACIL,QAAQ,YACRC,UAAW0D,EAAQ5G,OACnBmD,UAAW,eAAC,KAAD,IAHf,SAMI,uBAAME,MAAO,CAAEC,cAAe,cAA9B,qCCrY1BoD,GAAY1H,cAAW,SAACC,GAAD,MAAY,CACrCoX,YAAa,CACTzG,QAAS3Q,EAAMG,QAAQ,QA8HhBkX,OA1Hf,SAAiBzY,GACG6I,KAAhB,IACMwJ,EAAcrS,EAAMmH,WAAanH,EAAMmH,WAAa,GAC1D,EAAoCzE,mBAAS2P,GAA7C,mBAAOlL,EAAP,KAAmBmL,EAAnB,KACA,EAAgC5P,oBAAS,GAAzC,mBAAOgW,EAAP,KAAiBC,EAAjB,KAEA,EAAkCjW,oBAAS,GAA3C,mBAAOkW,EAAP,KAAkBC,EAAlB,KAEA,EAA8DnW,oBAAS,GAAvE,mBAAOoW,EAAP,KAAgCC,EAAhC,KAEA,EAAsDrW,oBAAS,GAA/D,mBAAOsW,EAAP,KAA4BC,EAA5B,KAEA,EAAsDvW,oBAAS,GAA/D,mBAAOwW,EAAP,KAA4BC,EAA5B,KAGMC,EAAS,SAACpT,GACZsM,EAAc,2BAAInL,GAAenB,IAC7B2S,GAAaD,IAMfW,EAAkB,SAACrT,GACrBsM,EAAc,2BAAInL,GAAenB,IACjC+S,GAA4BD,IAE1BQ,EAAoB,SAACtT,GACvBsM,EAAc,2BAAInL,GAAenB,IACjCiT,GAAwBD,IAStBO,EAAc,SAACvT,GACjBhG,EAAMwZ,kBAAiB,IAG3B,OACI,kCAC4B,IAAvBrS,EAAWyJ,UAER,gBAAC6I,GAAA,EAAD,CAAMlU,KAAK,OAAOhD,MAAO,OAAQmX,UAAQ,EAAzC,UACI,eAACD,GAAA,EAAKE,KAAN,CAAWrN,QAAS,kBAAMiN,KAAe/T,MAAO,CAACjD,MAAM,SAAUqX,UAAQ,EAAzE,mBACA,eAACH,GAAA,EAAKE,KAAN,CAAWrN,QAAS,kBAAMgN,EAAkBnS,IAAa3B,MAAO,CAACjD,MAAM,SAAUqX,UAAQ,EAAzF,iCACA,eAACH,GAAA,EAAKE,KAAN,CAAWrN,QAAS,kBAAM8M,EAAQjS,IAAa5E,MAAO,QAASqX,UAAQ,EAAvE,6CACA,eAACH,GAAA,EAAKE,KAAN,CAAWrN,QAAS,kBAAM+M,EAAiBlS,IAAayS,UAAQ,EAAhE,iCACA,eAACH,GAAA,EAAKE,KAAN,CAAWC,UAAQ,EAAnB,mBACA,eAACH,GAAA,EAAKE,KAAN,CAAWC,UAAQ,EAAnB,iBACA,eAACH,GAAA,EAAKE,KAAN,CAAWC,UAAQ,EAAnB,6BACA,eAACH,GAAA,EAAKE,KAAN,CAAWC,UAAQ,EAAnB,qBAMJ,gBAACH,GAAA,EAAD,CAAMlU,KAAK,OAAOhD,MAAO,QAASmX,UAAQ,EAA1C,UACI,eAACD,GAAA,EAAKE,KAAN,CAAWrN,QAAS,kBAAMiN,KAA1B,mBAEA,eAACE,GAAA,EAAKE,KAAN,CAAWrN,QAAS,kBAAMgN,EAAkBnS,IAA5C,sCACA,eAACsS,GAAA,EAAKE,KAAN,CAAWrN,QAAS,kBAAM8M,EAAQjS,IAAlC,6CACA,eAACsS,GAAA,EAAKE,KAAN,CAAWrN,QAAS,kBAAM+M,EAAiBlS,IAA3C,iCACA,eAAC0S,GAAA,EAAD,CAAUxI,KAAK,QAAUyI,SAAO,EAACC,QAAM,EAAI1U,UAAU,iBAArD,SACA,gBAACwU,GAAA,EAASJ,KAAV,CAAejU,MAAO,CAACsB,gBAAgB,QAAvC,UACI,eAAC+S,GAAA,EAASF,KAAV,UACI,eAAC,IAAD,CAAMzU,GAAI,CAAC+B,SAAU,+BAArB,mCAIJ,eAAC4S,GAAA,EAASF,KAAV,UACI,eAAC,IAAD,CAAMzU,GAAI,CAAC+B,SAAU,+BAArB,2BAIJ,eAAC4S,GAAA,EAASF,KAAV,UACI,eAAC,IAAD,CAAMzU,GAAI,CAAC+B,SAAU,+BAArB,6BAIJ,eAAC4S,GAAA,EAASF,KAAV,UACI,eAAC,IAAD,CAAMzU,GAAI,CAAC+B,SAAU,+BAArB,iDAMR,eAAC4S,GAAA,EAAD,CAAUxI,KAAK,OAASyI,SAAO,EAACC,QAAM,EAAI1U,UAAU,iBAApD,SACA,gBAACwU,GAAA,EAASJ,KAAV,CAAejU,MAAO,CAACsB,gBAAgB,QAAvC,UACI,eAAC+S,GAAA,EAASF,KAAV,UACI,eAAC,IAAD,CAAMzU,GAAI,CAAC+B,SAAU,+BAArB,+BAIJ,eAAC4S,GAAA,EAASF,KAAV,UACI,eAAC,IAAD,CAAMzU,GAAI,CAAC+B,SAAU,+BAArB,8BAMR,eAACwS,GAAA,EAAKE,KAAN,kBACA,eAACF,GAAA,EAAKE,KAAN,CAAWrN,QAAS,kBA1ERtG,EA0EiCmB,EAzEzDmL,EAAc,2BAAInL,GAAenB,SACjCmT,GAAwBD,GAFD,IAAClT,GA0EZ,6BACA,eAACyT,GAAA,EAAKE,KAAN,OAKR,eAAC,GAAD,CAAgBvN,OApGK,kBAAM6M,GAAwBD,IAoGL7M,UAAW6M,EAAqB7R,WAAYA,IAC1F,eAAC6S,GAAD,CAA8B5N,OA3GpB,kBAAMuM,GAAaD,IA2GoBvM,UAAWuM,EAAUvR,WAAYA,IAClF,eAAC8S,GAAD,CAAoB7N,OA1GT,kBAAMyM,GAAcD,IA0GSzM,UAAWyM,EAAWzR,WAAYA,IAC1E,eAAC,GAAD,CAAciF,OAzGW,kBAAM2M,GAA4BD,IAyGX3M,UAAW2M,EAAyB3R,WAAYA,IAChG,eAAC,GAAD,CAAgBiF,OAtGK,kBAAM+M,GAAwBD,IAsGL/M,UAAW+M,EAAqB/R,WAAYA,Q,0CCjIlG+S,I,QAAmBC,EAAQ,OAEzBhX,GAAO,CACZiX,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACzEC,SAAU,CACR,CACE7G,MAAO,mBACX1M,gBAAiB,qBACjBwT,YAAa,qBACbC,WAAY,gBACZC,iBAAkB,qBAClBC,mBAAoB,qBACpBC,qBAAsB,qBACtBvX,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAKvDkE,GAAU,CACdsT,SAAU,CACRC,SAAS,GAEXC,OAAQ,CACNrZ,SAAS,GAEXsZ,OAAQ,CACNC,MAAO,CACL,CACEvZ,SAAS,IAGbwZ,MAAO,CACL,CACExZ,SAAS,EACTiD,KAAM,WACNwW,SAAU,CACRC,UAAW,WACT/X,GAAKkX,SAAS,GAAGlX,KAAKgY,KAAK,CACzB9K,EAAG3M,KAAK0X,MACRC,EAAmB,IAAhBC,KAAKC,YAGZC,MAAO,QAKf7V,MAAO,CACLnE,SAAS,GAEXia,QAAS,CACPC,UAAW,CAETC,UAAW,K,IAKFzB,GAAiB,CAC9B0B,YAAa,aACbjE,OAF8B,WAG5B,OACE,+BACE,eAAC,OAAD,CAAKxU,KAAMA,GAAMkE,QAASA,GAASnF,OAAQ,W,sCC/DvB2Z,YCAHA,Y,QCAnB1Y,GAAO,CACX,CACE0B,KAAM,SACNiX,GAAI,IACJC,GAAI,KACJC,IAAK,MAEP,CACEnX,KAAM,SACNiX,IAAK,IACLC,GAAI,KACJC,IAAK,MAEP,CACEnX,KAAM,SACNiX,IAAK,IACLC,IAAK,KACLC,IAAK,MAEP,CACEnX,KAAM,SACNiX,GAAI,KACJC,GAAI,KACJC,IAAK,KAEP,CACEnX,KAAM,SACNiX,IAAK,KACLC,GAAI,KACJC,IAAK,MAEP,CACEnX,KAAM,SACNiX,GAAI,KACJC,IAAK,KACLC,IAAK,MAEP,CACEnX,KAAM,SACNiX,GAAI,KACJC,GAAI,KACJC,IAAK,OC87EMC,ID17E0BC,gBE7CXL,YDmBf,WACb,OACE,eAAC,WAAD,UAGE,uBAAKxW,UAAU,MAAf,UACA,sBAAKA,UAAU,8BAAf,SACI,uBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,6BAAf,SACE,qBAAIA,UAAU,aAAd,iCAEF,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CACEG,MAAO,CAAEtD,OAAQ,SACjB0C,GAAG,aACHS,UAAU,yCAHZ,SAKE,sBAAIA,UAAU,WAAd,UACE,8BACE,uBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,aAAf,SACE,sBAAM8W,IAAI,GAAGva,MAAM,SAErB,uBAAKyD,UAAU,aAAf,UACE,qBAAIA,UAAU,OAAd,iCACA,wBAAOA,UAAU,UAAjB,wCAIF,gBAAC,KAAD,CAAUA,UAAU,WAApB,UACE,eAAC,KAAS+W,OAAV,CACEhX,QAAQ,gBACRC,UAAU,qBAFZ,SAIE,sBACEzD,MAAM,OACNM,OAAO,OACPma,QAAQ,YACRC,QAAQ,MAJV,SAME,qBACEC,OAAO,OACPC,YAAY,IACZC,KAAK,OACLC,SAAS,UAJX,UAME,uBAAMrM,EAAE,IAAIgL,EAAE,IAAIzZ,MAAM,KAAKM,OAAO,OACpC,yBAAQua,KAAK,UAAUE,GAAG,IAAIC,GAAG,KAAKC,EAAE,MACxC,yBAAQJ,KAAK,UAAUE,GAAG,KAAKC,GAAG,KAAKC,EAAE,MACzC,yBAAQJ,KAAK,UAAUE,GAAG,KAAKC,GAAG,KAAKC,EAAE,aAI/C,gBAAC,KAASpD,KAAV,CAAepU,UAAU,gBAAzB,UACE,eAAC,KAASsU,KAAV,CACEtU,UAAU,gBACVH,GAAG,gBAFL,kBAMA,eAAC,KAASyU,KAAV,CACEtU,UAAU,gBACVH,GAAG,gBAFL,+BAUR,8BACE,uBAAKG,UAAU,iBAAf,UACE,sBAAKA,UAAU,wBAAf,gBACA,uBAAKA,UAAU,aAAf,UACE,qBAAIA,UAAU,OAAd,6BACA,wBAAOA,UAAU,UAAjB,wCAIF,gBAAC,KAAD,CAAUA,UAAU,WAApB,UACE,eAAC,KAAS+W,OAAV,CACEhX,QAAQ,SACRC,UAAU,6BAFZ,SAIE,sBACEzD,MAAM,OACNM,OAAO,OACPma,QAAQ,YACRC,QAAQ,MAJV,SAME,qBACEC,OAAO,OACPC,YAAY,IACZC,KAAK,OACLC,SAAS,UAJX,UAME,uBAAMrM,EAAE,IAAIgL,EAAE,IAAIzZ,MAAM,KAAKM,OAAO,OACpC,yBAAQua,KAAK,UAAUE,GAAG,IAAIC,GAAG,KAAKC,EAAE,MACxC,yBAAQJ,KAAK,UAAUE,GAAG,KAAKC,GAAG,KAAKC,EAAE,MACzC,yBAAQJ,KAAK,UAAUE,GAAG,KAAKC,GAAG,KAAKC,EAAE,aAI/C,gBAAC,KAASpD,KAAV,CAAepU,UAAU,gBAAzB,UACE,eAAC,KAASsU,KAAV,CACEtU,UAAU,gBACVH,GAAG,gBAFL,kBAMA,eAAC,KAASyU,KAAV,CACEtU,UAAU,gBACVH,GAAG,gBAFL,+BAUR,8BACE,uBAAKG,UAAU,iBAAf,UACE,sBAAKA,UAAU,2BAAf,SACE,oBAAGA,UAAU,iBAEf,uBAAKA,UAAU,aAAf,UACE,qBAAIA,UAAU,OAAd,4BACA,wBAAOA,UAAU,UAAjB,wCAIF,gBAAC,KAAD,CAAUA,UAAU,WAApB,UACE,eAAC,KAAS+W,OAAV,CACEhX,QAAQ,SACRC,UAAU,iCAFZ,SAIE,sBACEzD,MAAM,OACNM,OAAO,OACPma,QAAQ,YACRC,QAAQ,MAJV,SAME,qBACEC,OAAO,OACPC,YAAY,IACZC,KAAK,OACLC,SAAS,UAJX,UAME,uBAAMrM,EAAE,IAAIgL,EAAE,IAAIzZ,MAAM,KAAKM,OAAO,OACpC,yBAAQua,KAAK,UAAUE,GAAG,IAAIC,GAAG,KAAKC,EAAE,MACxC,yBAAQJ,KAAK,UAAUE,GAAG,KAAKC,GAAG,KAAKC,EAAE,MACzC,yBAAQJ,KAAK,UAAUE,GAAG,KAAKC,GAAG,KAAKC,EAAE,aAI/C,gBAAC,KAASpD,KAAV,CAAepU,UAAU,gBAAzB,UACE,eAAC,KAASsU,KAAV,CACEtU,UAAU,gBACVH,GAAG,gBAFL,kBAMA,eAAC,KAASyU,KAAV,CACEtU,UAAU,gBACVH,GAAG,gBAFL,+BAUR,8BACE,uBAAKG,UAAU,iBAAf,UACE,sBAAKA,UAAU,aAAf,SACE,sBAAM8W,IAAI,GAAGva,MAAM,SAErB,uBAAKyD,UAAU,aAAf,UACE,qBAAIA,UAAU,OAAd,uCACA,wBAAOA,UAAU,UAAjB,wCAIF,gBAAC,KAAD,CAAUA,UAAU,WAApB,UACE,eAAC,KAAS+W,OAAV,CACEhX,QAAQ,gBACRC,UAAU,qBAFZ,SAIE,sBACEzD,MAAM,OACNM,OAAO,OACPma,QAAQ,YACRC,QAAQ,MAJV,SAME,qBACEC,OAAO,OACPC,YAAY,IACZC,KAAK,OACLC,SAAS,UAJX,UAME,uBAAMrM,EAAE,IAAIgL,EAAE,IAAIzZ,MAAM,KAAKM,OAAO,OACpC,yBAAQua,KAAK,UAAUE,GAAG,IAAIC,GAAG,KAAKC,EAAE,MACxC,yBAAQJ,KAAK,UAAUE,GAAG,KAAKC,GAAG,KAAKC,EAAE,MACzC,yBAAQJ,KAAK,UAAUE,GAAG,KAAKC,GAAG,KAAKC,EAAE,aAI/C,gBAAC,KAASpD,KAAV,CAAepU,UAAU,gBAAzB,UACE,eAAC,KAASsU,KAAV,CACEtU,UAAU,gBACVH,GAAG,gBAFL,kBAMA,eAAC,KAASyU,KAAV,CACEtU,UAAU,gBACVH,GAAG,gBAFL,+BAUR,8BACE,uBAAKG,UAAU,iBAAf,UACE,sBAAKA,UAAU,0BAAf,gBACA,uBAAKA,UAAU,aAAf,UACE,qBAAIA,UAAU,OAAd,0BACA,wBAAOA,UAAU,UAAjB,wCAIF,gBAAC,KAAD,CAAUA,UAAU,WAApB,UACE,eAAC,KAAS+W,OAAV,CACE3X,KAAK,SACLY,UAAU,kDACV,cAAY,WAHd,SAKE,sBACEzD,MAAM,OACNM,OAAO,OACPma,QAAQ,YACRC,QAAQ,MAJV,SAME,qBACEC,OAAO,OACPC,YAAY,IACZC,KAAK,OACLC,SAAS,UAJX,UAME,uBAAMrM,EAAE,IAAIgL,EAAE,IAAIzZ,MAAM,KAAKM,OAAO,OACpC,yBAAQua,KAAK,UAAUE,GAAG,IAAIC,GAAG,KAAKC,EAAE,MACxC,yBAAQJ,KAAK,UAAUE,GAAG,KAAKC,GAAG,KAAKC,EAAE,MACzC,yBAAQJ,KAAK,UAAUE,GAAG,KAAKC,GAAG,KAAKC,EAAE,aAI/C,gBAAC,KAASpD,KAAV,CAAepU,UAAU,gBAAzB,UACE,eAAC,KAASsU,KAAV,CACEtU,UAAU,gBACVH,GAAG,gBAFL,kBAMA,eAAC,KAASyU,KAAV,CACEtU,UAAU,gBACVH,GAAG,gBAFL,+BAUR,8BACE,uBAAKG,UAAU,iBAAf,UACE,sBAAKA,UAAU,2BAAf,SACE,oBAAGA,UAAU,iBAEf,uBAAKA,UAAU,aAAf,UACE,qBAAIA,UAAU,OAAd,0BACA,wBAAOA,UAAU,UAAjB,wCAIF,gBAAC,KAAD,CAAUA,UAAU,WAApB,UACE,eAAC,KAAS+W,OAAV,CACEhX,QAAQ,gBACRC,UAAU,qBAFZ,SAIE,sBACEzD,MAAM,OACNM,OAAO,OACPma,QAAQ,YACRC,QAAQ,MAJV,SAME,qBACEC,OAAO,OACPC,YAAY,IACZC,KAAK,OACLC,SAAS,UAJX,UAME,uBAAMrM,EAAE,IAAIgL,EAAE,IAAIzZ,MAAM,KAAKM,OAAO,OACpC,yBAAQua,KAAK,UAAUE,GAAG,IAAIC,GAAG,KAAKC,EAAE,MACxC,yBAAQJ,KAAK,UAAUE,GAAG,KAAKC,GAAG,KAAKC,EAAE,MACzC,yBAAQJ,KAAK,UAAUE,GAAG,KAAKC,GAAG,KAAKC,EAAE,aAI/C,gBAAC,KAASpD,KAAV,CAAepU,UAAU,gBAAzB,UACE,eAAC,KAASsU,KAAV,CACEtU,UAAU,gBACVH,GAAG,gBAFL,kBAMA,eAAC,KAASyU,KAAV,CACEtU,UAAU,gBACVH,GAAG,gBAFL,2CAelB,sBAAKG,UAAU,8BAAf,SACE,uBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,4BAAf,SACE,qBAAIA,UAAU,aAAd,iCAEF,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CACEG,MAAO,CAAEtD,OAAQ,SACjB0C,GAAG,gBACHS,UAAU,sDAHZ,SAKE,sBAAIA,UAAU,WAAd,UACE,gCACE,sBAAKA,UAAU,2BACf,gBAAC,IAAD,CACEA,UAAU,4BACVH,GAAG,gBAFL,UAIE,gDACA,sBAAIG,UAAU,OAAd,kCACwB,IAAI,wBAC1B,yBAAQA,UAAU,eAAlB,0BAFF,OAIA,sBAAIA,UAAU,OAAd,uBACa,IAAI,wBACf,yBAAQA,UAAU,eAAlB,0BAFF,OAIA,sBAAIA,UAAU,OAAd,iCACuB,IAAI,wBACzB,yBAAQA,UAAU,eAAlB,0BAFF,aAMJ,gCACE,sBAAKA,UAAU,wBACf,gBAAC,IAAD,CACEA,UAAU,4BACVH,GAAG,gBAFL,UAIE,gDACA,sBAAIG,UAAU,OAAd,kCACwB,IAAI,wBAC1B,yBAAQA,UAAU,eAAlB,0BAFF,OAIA,sBAAIA,UAAU,OAAd,uBACa,IAAI,wBACf,yBAAQA,UAAU,eAAlB,0BAFF,OAIA,sBAAIA,UAAU,OAAd,iCACuB,IAAI,wBACzB,yBAAQA,UAAU,eAAlB,0BAFF,aAMJ,gCACE,sBAAKA,UAAU,0BACf,gBAAC,IAAD,CACEA,UAAU,4BACVH,GAAG,gBAFL,UAIG,gDACD,sBAAIG,UAAU,OAAd,kCACwB,IAAI,wBAC1B,yBAAQA,UAAU,eAAlB,0BAFF,OAIA,sBAAIA,UAAU,OAAd,uBACa,IAAI,wBACf,yBAAQA,UAAU,eAAlB,0BAFF,OAIA,sBAAIA,UAAU,OAAd,iCACuB,IAAI,wBACzB,yBAAQA,UAAU,eAAlB,0BAFF,aAMJ,gCACE,sBAAKA,UAAU,2BACf,gBAAC,IAAD,CACEA,UAAU,4BACVH,GAAG,gBAFL,UAIG,gDACD,sBAAIG,UAAU,OAAd,kCACwB,IAAI,wBAC1B,yBAAQA,UAAU,eAAlB,0BAFF,OAIA,sBAAIA,UAAU,OAAd,uBACa,IAAI,wBACf,yBAAQA,UAAU,eAAlB,0BAFF,OAIA,sBAAIA,UAAU,OAAd,iCACuB,IAAI,wBACzB,yBAAQA,UAAU,eAAlB,0BAFF,aAMJ,gCACE,sBAAKA,UAAU,2BACf,gBAAC,IAAD,CACEA,UAAU,4BACVH,GAAG,gBAFL,UAIG,gDACD,sBAAIG,UAAU,OAAd,kCACwB,IAAI,wBAC1B,yBAAQA,UAAU,eAAlB,0BAFF,OAIA,sBAAIA,UAAU,OAAd,uBACa,IAAI,wBACf,yBAAQA,UAAU,eAAlB,0BAFF,OAIA,sBAAIA,UAAU,OAAd,iCACuB,IAAI,wBACzB,yBAAQA,UAAU,eAAlB,0BAFF,aAMJ,gCACE,sBAAKA,UAAU,wBACf,gBAAC,IAAD,CACEA,UAAU,4BACVH,GAAG,gBAFL,UAIG,gDACD,sBAAIG,UAAU,OAAd,kCACwB,IAAI,wBAC1B,yBAAQA,UAAU,eAAlB,0BAFF,OAIA,sBAAIA,UAAU,OAAd,uBACa,IAAI,wBACf,yBAAQA,UAAU,eAAlB,0BAFF,OAIA,sBAAIA,UAAU,OAAd,iCACuB,IAAI,wBACzB,yBAAQA,UAAU,eAAlB,0BAFF,yBAWd,sBAAKA,UAAU,8BAAf,SACE,uBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,4BAAf,SACE,qBAAIA,UAAU,aAAd,8BAEF,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CACEG,MAAO,CAAEtD,OAAQ,SACjB0C,GAAG,iBACHS,UAAU,8DAHZ,SAKE,sBAAIA,UAAU,WAAd,UACE,gCACE,sBAAKA,UAAU,2BACf,gBAAC,IAAD,CACEA,UAAU,4BACVH,GAAG,gBAFL,UAIC,gDACC,sBAAIG,UAAU,OAAd,4DAEkC,IAChC,0BAAQA,UAAU,YAAlB,iCAAkD,wBAAlD,6BAGF,qBAAGA,UAAU,OAAb,wBACa,wBADb,kBAIA,0BAAQA,UAAU,eAAlB,6BACoB,wBADpB,kBAGQ,wBACT,0BAAQA,UAAU,eAAlB,4BACkB,wBADlB,SAGS,wBACT,0BAAQA,UAAU,YAAlB,4BACe,wBADf,SAIA,0BAAQA,UAAU,OAAlB,gBACG,wBADH,wCAGQ,wBACT,0BAAQA,UAAU,OAAlB,qBACQ,uBADR,wBAQF,gCACE,sBAAKA,UAAU,wBACf,gBAAC,IAAD,CACEA,UAAU,4BACVH,GAAG,gBAFL,UAIE,gDACA,sBAAIG,UAAU,OAAd,4DAEkC,IAChC,0BAAQA,UAAU,YAAlB,iCAAkD,wBAAlD,6BAGF,qBAAGA,UAAU,OAAb,wBACa,wBADb,kBAIA,0BAAQA,UAAU,eAAlB,6BACoB,wBADpB,kBAGQ,wBACT,0BAAQA,UAAU,eAAlB,4BACkB,wBADlB,SAGS,wBACT,0BAAQA,UAAU,YAAlB,4BACe,wBADf,SAIA,0BAAQA,UAAU,OAAlB,gBACG,wBADH,wCAGQ,wBACT,0BAAQA,UAAU,OAAlB,qBACQ,uBADR,wBAQF,gCACE,sBAAKA,UAAU,0BACf,gBAAC,IAAD,CACEA,UAAU,4BACVH,GAAG,gBAFL,UAIE,gDACA,sBAAIG,UAAU,OAAd,4DAEkC,IAChC,0BAAQA,UAAU,YAAlB,iCAAkD,wBAAlD,6BAGF,qBAAGA,UAAU,OAAb,wBACa,wBADb,kBAIA,0BAAQA,UAAU,eAAlB,6BACoB,wBADpB,kBAGQ,wBACT,0BAAQA,UAAU,eAAlB,4BACkB,wBADlB,SAGS,wBACT,0BAAQA,UAAU,YAAlB,4BACe,wBADf,SAIA,0BAAQA,UAAU,OAAlB,gBACG,wBADH,wCAGQ,wBACT,0BAAQA,UAAU,OAAlB,qBACQ,uBADR,wBAQF,gCACE,sBAAKA,UAAU,2BACf,gBAAC,IAAD,CACEA,UAAU,4BACVH,GAAG,gBAFL,UAIE,gDACA,sBAAIG,UAAU,OAAd,4DAEkC,IAChC,0BAAQA,UAAU,YAAlB,iCAAkD,wBAAlD,6BAGF,qBAAGA,UAAU,OAAb,wBACa,wBADb,kBAIA,0BAAQA,UAAU,eAAlB,6BACoB,wBADpB,kBAGQ,wBACT,0BAAQA,UAAU,eAAlB,4BACkB,wBADlB,SAGS,wBACT,0BAAQA,UAAU,YAAlB,4BACe,wBADf,SAIA,0BAAQA,UAAU,OAAlB,gBACG,wBADH,wCAGQ,wBACT,0BAAQA,UAAU,OAAlB,qBACQ,uBADR,wBAQF,gCACE,sBAAKA,UAAU,2BACf,gBAAC,IAAD,CACEA,UAAU,4BACVH,GAAG,gBAFL,UAIE,gDACA,sBAAIG,UAAU,OAAd,4DAEkC,IAChC,0BAAQA,UAAU,YAAlB,iCAAkD,wBAAlD,6BAGF,qBAAGA,UAAU,OAAb,wBACa,wBADb,kBAIA,0BAAQA,UAAU,eAAlB,6BACoB,wBADpB,kBAGQ,wBACT,0BAAQA,UAAU,eAAlB,4BACkB,wBADlB,SAGS,wBACT,0BAAQA,UAAU,YAAlB,4BACe,wBADf,SAIA,0BAAQA,UAAU,OAAlB,gBACG,wBADH,wCAGQ,wBACT,0BAAQA,UAAU,OAAlB,qBACQ,uBADR,wBAQF,gCACE,sBAAKA,UAAU,wBACf,gBAAC,IAAD,CACEA,UAAU,4BACVH,GAAG,gBAFL,UAIE,gDACA,sBAAIG,UAAU,OAAd,4DAEkC,IAChC,0BAAQA,UAAU,YAAlB,iCAAkD,wBAAlD,6BAGF,qBAAGA,UAAU,OAAb,wBACa,wBADb,kBAIA,0BAAQA,UAAU,eAAlB,6BACoB,wBADpB,kBAGQ,wBACT,0BAAQA,UAAU,eAAlB,4BACkB,wBADlB,SAGS,wBACT,0BAAQA,UAAU,YAAlB,4BACe,wBADf,SAIA,0BAAQA,UAAU,OAAlB,gBACG,wBADH,wCAGQ,wBACT,0BAAQA,UAAU,OAAlB,qBACQ,uBADR,2C,sDEldL4W,GAnRA,WACb,OAEQ,gBAAC5D,GAAA,EAAD,CAAMzS,QAAQ,QAAd,UAEA,gBAACyS,GAAA,EAAKC,OAAN,WACE,gBAACwE,GAAA,EAAD,WACI,eAACnW,GAAA,EAAD,CAAOgN,GAAG,IAAIpR,MAAM,OAAOwa,QAAM,EAAjC,2BAGE,wBACA,gBAACjF,GAAA,EAAD,CAAMkF,QAAM,EAAZ,UACF,gBAAClF,GAAA,EAAK6B,KAAN,oBAAiB,uBAAMtU,UAAU,YAAhB,SAA4B,4CAC7C,gBAACyS,GAAA,EAAK6B,KAAN,+BAA4B,uBAAMtU,UAAU,YAAhB,SAA4B,4CACxD,gBAACyS,GAAA,EAAK6B,KAAN,0BAAuB,uBAAMtU,UAAU,YAAhB,SAA4B,oCAAK,qCAAL,YACnD,gBAACyS,GAAA,EAAK6B,KAAN,4BAAyB,uBAAOtU,UAAU,YAAjB,SAA6B,6CACtD,gBAACyS,GAAA,EAAK6B,KAAN,qBAAkB,uBAAOtU,UAAU,YAAjB,SAA6B,6CAC/C,gBAACyS,GAAA,EAAK6B,KAAN,qBAAkB,uBAAOtU,UAAU,YAAjB,SAA6B,kDAInD,gBAACyX,GAAA,EAAD,WAEI,eAACnW,GAAA,EAAD,CAAOgN,GAAG,IAAIpR,MAAM,QAAQwa,QAAM,EAAlC,wBAGA,wBACA,eAACpW,GAAA,EAAD,CAAOgN,GAAG,IAAKpR,MAAM,QAASgD,KAAK,OAAOmO,UAAQ,EAAlD,yBAGA,eAAC/M,GAAA,EAAD,CAAOgN,GAAG,IAAKpR,MAAM,QAASgD,KAAK,OAAOmO,UAAQ,EAAlD,0BAGA,eAAC/M,GAAA,EAAD,CAAOgN,GAAG,IAAKpR,MAAM,QAASgD,KAAK,OAAOmO,UAAQ,EAAlD,uBAKJ,gBAACoJ,GAAA,EAAD,WACI,eAACnW,GAAA,EAAD,CAAOgN,GAAG,IAAIpR,MAAM,MAAMwa,QAAM,EAAhC,uBAGE,wBAAK,wBACL,gBAACpW,GAAA,EAAMsW,MAAP,CAAa1a,MAAM,OAAnB,UAEE,eAACoE,GAAA,EAAD,CAAOgN,GAAG,IAAKpO,KAAK,OAApB,kBACA,eAACoB,GAAA,EAAD,CAAOgN,GAAG,IAAKpO,KAAK,OAApB,4BAMV,gBAAC8S,GAAA,EAAKC,OAAN,CAAa1W,MAAO,EAApB,UACA,eAAC+E,GAAA,EAAD,CAAOgN,GAAG,IAAIpR,MAAM,QAAQwa,QAAM,EAAlC,SACQ,wDAEN,gBAACD,GAAA,EAAD,WACA,uBAAKzX,UAAU,kCAAf,UAEK,uBAAMA,UAAU,mBAAhB,4BAEF,wBAAOZ,KAAK,OAAOY,UAAU,oBAE9B,wBACA,uBAAKA,UAAU,kCAAf,UAEG,uBAAMA,UAAU,mBAAhB,wBAEA,2BAAUA,UAAU,oBAExB,wBACC,eAACsB,GAAA,EAAD,CAAOgN,GAAG,IAAIpR,MAAM,MAAMwa,QAAM,EAAhC,mCAGA,gBAAC,KAAD,CAAOxa,MAAM,MAAMya,QAAM,EAAzB,UACA,eAAC,KAAM3Q,OAAP,UACE,gBAAC,KAAMnE,IAAP,WACE,eAAC,KAAMgV,WAAP,yBACA,eAAC,KAAMA,WAAP,yBACA,eAAC,KAAMA,WAAP,uBACA,eAAC,KAAMA,WAAP,iCAIJ,eAAC,KAAM5U,KAAP,UACE,gBAAC,KAAMJ,IAAP,WACE,eAAC,KAAMiV,KAAP,UAAY,eAAC,KAAD,CAAO1Y,KAAK,OAAO2Y,OAAK,EAAEC,YAAY,qBAClD,eAAC,KAAMF,KAAP,UAAY,eAAC,KAAD,CAAO1Y,KAAK,OAAO2Y,OAAK,EAAEC,YAAY,qBAClD,eAAC,KAAMF,KAAP,UAAY,eAAC,KAAD,CAAO1Y,KAAK,OAAO2Y,OAAK,EAAEC,YAAY,qBAClD,eAAC,KAAMF,KAAP,UAAY,eAAC,KAAD,CAAO1Y,KAAK,OAAO2Y,OAAK,EAAEC,YAAY,0BAKtD,eAAC,KAAMC,OAAP,UACE,eAAC,KAAMpV,IAAP,UACE,eAAC,KAAMgV,WAAP,UAEA,gBAACvW,GAAA,EAAD,CAAOgN,GAAG,IAAIpR,MAAM,OAAOgD,KAAK,OAAhC,UACE,eAACsS,GAAA,EAAD,CAAMhT,KAAK,SADb,wBAQJ,wBACA,eAAC8B,GAAA,EAAD,CAAOgN,GAAG,IAAIpR,MAAM,OAAOwa,QAAM,EAAjC,gCAGA,gBAAC,KAAD,CAAOxa,MAAM,OAAOya,QAAM,EAA1B,UACA,eAAC,KAAM3Q,OAAP,UACE,gBAAC,KAAMnE,IAAP,WACE,eAAC,KAAMgV,WAAP,wBACA,eAAC,KAAMA,WAAP,qBACA,eAAC,KAAMA,WAAP,wBACA,eAAC,KAAMA,WAAP,SAIJ,eAAC,KAAM5U,KAAP,UACE,gBAAC,KAAMJ,IAAP,WACE,eAAC,KAAMiV,KAAP,UAAY,eAAC,KAAD,CAAO1Y,KAAK,OAAO2Y,OAAK,EAAEC,YAAY,qBAClD,eAAC,KAAMF,KAAP,UAAY,eAAC,KAAD,CAAO1Y,KAAK,OAAO2Y,OAAK,EAAEC,YAAY,qBAClD,eAAC,KAAMF,KAAP,UAAY,eAAC,KAAD,CAAO1Y,KAAK,OAAO2Y,OAAK,EAAEC,YAAY,qBAClD,eAAC,KAAMF,KAAP,SAKJ,eAAC,KAAMG,OAAP,UACE,eAAC,KAAMpV,IAAP,UACE,eAAC,KAAMgV,WAAP,UAEA,gBAACvW,GAAA,EAAD,CAAOgN,GAAG,IAAIpR,MAAM,OAAOgD,KAAK,OAAhC,UACE,eAACsS,GAAA,EAAD,CAAMhT,KAAK,SADb,wBAQJ,wBACA,eAAC8B,GAAA,EAAD,CAAOgN,GAAG,IAAIpR,MAAM,OAAOwa,QAAM,EAAjC,sBAGA,gBAAC,KAAD,CAAOxa,MAAM,OAAOya,QAAM,EAA1B,UACA,eAAC,KAAM3Q,OAAP,UACE,gBAAC,KAAMnE,IAAP,WACE,eAAC,KAAMgV,WAAP,4BACA,eAAC,KAAMA,WAAP,wBACA,eAAC,KAAMA,WAAP,uBACA,eAAC,KAAMA,WAAP,wBACA,eAAC,KAAMA,WAAP,4BAIJ,eAAC,KAAM5U,KAAP,UACE,gBAAC,KAAMJ,IAAP,WACE,eAAC,KAAMiV,KAAP,UAAY,eAAC,KAAD,CAAO1Y,KAAK,OAAO2Y,OAAK,EAAEC,YAAY,qBAClD,eAAC,KAAMF,KAAP,UAAY,eAAC,KAAD,CAAO1Y,KAAK,OAAO2Y,OAAK,EAAEC,YAAY,qBAClD,eAAC,KAAMF,KAAP,UAAY,eAAC,KAAD,CAAO1Y,KAAK,OAAO2Y,OAAK,EAAEC,YAAY,qBAClD,eAAC,KAAMF,KAAP,UAAY,eAAC,KAAD,CAAO1Y,KAAK,OAAO2Y,OAAK,EAAEC,YAAY,qBAClD,eAAC,KAAMF,KAAP,SAKJ,eAAC,KAAMG,OAAP,UACE,eAAC,KAAMpV,IAAP,UACE,eAAC,KAAMgV,WAAP,UAEA,gBAACvW,GAAA,EAAD,CAAOgN,GAAG,IAAIpR,MAAM,OAAOgD,KAAK,OAAhC,UACE,eAACsS,GAAA,EAAD,CAAMhT,KAAK,SADb,wBAQJ,wBACA,eAAC8B,GAAA,EAAD,CAAOgN,GAAG,IAAIpR,MAAM,SAASwa,QAAM,EAAnC,qCAGA,gBAAC,KAAD,CAAOxa,MAAM,SAASya,QAAM,EAA5B,UACA,eAAC,KAAM3Q,OAAP,UACE,gBAAC,KAAMnE,IAAP,WACE,eAAC,KAAMgV,WAAP,4BACA,eAAC,KAAMA,WAAP,wBACA,eAAC,KAAMA,WAAP,uBACA,eAAC,KAAMA,WAAP,wBACA,eAAC,KAAMA,WAAP,4BAIJ,eAAC,KAAM5U,KAAP,UACE,gBAAC,KAAMJ,IAAP,WACE,eAAC,KAAMiV,KAAP,UAAY,eAAC,KAAD,CAAO1Y,KAAK,OAAO2Y,OAAK,EAAEC,YAAY,qBAClD,eAAC,KAAMF,KAAP,UAAY,eAAC,KAAD,CAAO1Y,KAAK,OAAO2Y,OAAK,EAAEC,YAAY,qBAClD,eAAC,KAAMF,KAAP,UAAY,eAAC,KAAD,CAAO1Y,KAAK,OAAO2Y,OAAK,EAAEC,YAAY,qBAClD,eAAC,KAAMF,KAAP,UAAY,eAAC,KAAD,CAAO1Y,KAAK,OAAO2Y,OAAK,EAAEC,YAAY,qBAClD,eAAC,KAAMF,KAAP,SAKJ,eAAC,KAAMG,OAAP,UACE,eAAC,KAAMpV,IAAP,UACE,eAAC,KAAMgV,WAAP,UAEA,gBAACvW,GAAA,EAAD,CAAOgN,GAAG,IAAIpR,MAAM,OAAOgD,KAAK,OAAhC,UACE,eAACsS,GAAA,EAAD,CAAMhT,KAAK,SADb,wCAUR,eAACwT,GAAA,EAAKC,OAAN,UACE,gBAACwE,GAAA,EAAD,WACA,gBAAChF,GAAA,EAAD,WACM,eAACA,GAAA,EAAK6B,KAAN,UACA,gBAAC,KAAD,CAAQpI,MAAI,EAACgM,cAAc,QAAQhb,MAAM,OAAO6a,OAAK,EAArD,UACI,eAACvF,GAAA,EAAD,CAAMhT,KAAK,uBADf,oBAKA,eAACiT,GAAA,EAAK6B,KAAN,UACA,gBAAC,KAAD,CAAQpI,MAAI,EAACgM,cAAc,QAAQhb,MAAM,QAAQ6a,OAAK,EAAtD,UACI,eAACvF,GAAA,EAAD,CAAMhT,KAAK,QADf,oBAKA,eAACiT,GAAA,EAAK6B,KAAN,UACA,gBAAC,KAAD,CAAQpI,MAAI,EAACgM,cAAc,QAAQhb,MAAM,OAAO6a,OAAK,EAArD,UACI,eAACvF,GAAA,EAAD,CAAMhT,KAAK,uBADf,sBAMN,gBAAC,KAAD,WACA,eAAC,KAAK2Y,QAAN,UACE,2DAEF,eAAC,KAAKA,QAAN,UACE,gBAACC,GAAA,EAAD,WACE,eAACA,GAAA,EAAKC,MAAN,UACE,gBAACD,GAAA,EAAKD,QAAN,WACE,eAACC,GAAA,EAAK/Z,KAAN,CAAW6P,QAAQ,eACnB,eAACkK,GAAA,EAAKE,QAAN,qEAKJ,wBACA,eAACF,GAAA,EAAKC,MAAN,UACE,gBAACD,GAAA,EAAKD,QAAN,WACE,eAACC,GAAA,EAAK/Z,KAAN,CAAW6P,QAAQ,eACnB,eAACkK,GAAA,EAAKE,QAAN,8DCxKL5M,qBAnFA,SAAA3P,GAAK,MAAK,CACvBgB,KAAM,CACJR,MAAO,QAEToP,QAAS,CACPxO,SAAUpB,EAAM6P,WAAWC,QAAQ,KAErCC,iBAAkB,CAChB3O,SAAUpB,EAAM6P,WAAWC,QAAQ,IACnC3O,MAAOnB,EAAMgQ,QAAQC,KAAKC,WAE5BC,KAAM,CACJC,cAAe,SACftP,OAAQ,GACRN,MAAO,IAET6P,QAAS,CACP/P,WAAY,UAEdgQ,OAAQ,CACNC,UAAW,UAEbC,OAAQ,CACNC,WAAW,aAAD,OAAezQ,EAAMgQ,QAAQU,SACvCC,QAAQ,GAAD,OAAK3Q,EAAMG,QAAQyQ,KAAnB,cAAkD,EAArB5Q,EAAMG,QAAQyQ,KAA3C,OAETC,KAAM,CACJ1P,MAAOnB,EAAMgQ,QAAQc,QAAQC,KAC7BC,eAAgB,OAChB,UAAW,CACTA,eAAgB,iBAqDPrB,EA/Cf,SAAqB/Q,GACjB,IAAI4d,EAAU5U,cACd,EAAsBtG,oBAAS,GAA/B,mBAAOmb,EAAP,KAAYC,EAAZ,KACA,EAA0Cpb,oBAAS,GAAnD,mBAAOqb,EAAP,KAAsBvE,EAAtB,KACQzQ,EAAY/I,EAAZ+I,QACF5B,EAAayW,EAAQte,UAAYse,EAAQte,SAAS4H,MAAQ0W,EAAQte,SAAS4H,MAAMC,WAAa,GAEtG,OACE,sBAAK9B,UAAW0D,EAAQ3G,KAAxB,SACE,eAAC,KAAD,UACE,gBAAC4b,GAAA,EAAD,WACI,eAAC,GAAD,CAAmB7W,WAAYA,EAAY2W,OAAQA,IAEnD,eAAC,GAAD,CAAS3W,WAAYA,EAAY0W,IAAKA,EAAKrE,iBAAkBA,IAC7D,eAAC,IAAD,CAAMtU,GAAI,IAAV,SACA,eAACC,GAAA,EAAD,CACIC,QAAQ,YACR7C,MAAM,UACN8C,UAAU,kBAHd,SAOI,uBAAMG,MAAO,CAAEC,cAAe,cAA9B,sBAGN,wBAAK,wBAAK,yBACO,IAAhBsY,EAEK,eAACE,GAAD,IAKE,eAAC,GAAD,c,iHCzDZpV,GAAY1H,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF8b,SAAU,EACVC,SAAU,KAEdC,KAAM,CACFtX,gBAAiB1F,EAAMgQ,QAAQiN,WAAWC,SAE9CC,OAAQ,CACJ/c,QAAS,cAIXgd,GAASC,OAAaC,MAAM,CAC9BvV,mBAAoBsV,OAAW9R,WAC/BrI,eAAgBma,OAAa9R,WAC7B1G,UAAWwY,OAAa9R,WACxBgS,WAAYF,OAAaG,WACzBC,SAAUJ,OAAa9R,WACvBmS,IAAKL,OAAa9R,WAClBoS,iBAAkBN,OAAa9R,WAC/BqS,qBAAsBP,OAAa9R,WACnCsS,cAAeR,OAAa9R,WAC5BnJ,IAAKib,OAAW9R,WAChBrG,YAAamY,OAAa9R,WAC1BtG,IAAKoY,OACLS,QAAST,OAAa9R,WACtBwS,eAAgBV,OAAaG,WAC7BQ,MAAOX,OAAaG,WACpBpO,QAASiO,OAAaG,WACtBS,SAAUZ,OAAaG,WACvBU,UAAWb,OAAa9R,WACxB4S,QAASd,OAAa9R,WACtB6S,SAAUf,OAAaG,aA+9CZa,GA59CU,SAACzf,GACtB,IAwBIoH,EAxBJ,EAAyFsY,aAAQ,CAC7FC,SAAUC,aAAYpB,MADlBqB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,SAAUC,EAAjD,EAAiDA,aAA2B7V,EAA5E,EAA+D8V,UAAa9V,OAG5E,EAA0B1H,oBAAS,IAAIgB,MAAOyc,cAAcC,OAAO,EAAG,IAAIC,QAAQ,IAAK,MAAvF,mBAAO5c,EAAP,KACA,GADA,KACgCf,mBAAS,KAAzC,mBAAO4d,EAAP,KAAiBC,EAAjB,KACA,EAAmC7d,mBAAS,CAAC,OAAS,GAAI,cAAgB,KAA1E,mBAAO8d,EAAP,KACA,GADA,KAC4B9d,oBAAS,IAArC,mBAAOwH,EAAP,KACA,GADA,KACsCxH,oBAAS,IAA/C,mBAAO+d,EAAP,KAAoBC,EAApB,KACA,EAAwChe,oBAAS,GAAjD,mBAAOie,EAAP,KAAqBC,EAArB,KACA,EAAwCle,mBAAS,MAAjD,mBAAOme,EAAP,KAAqBC,EAArB,KACA,EAA6Bpe,mBAAS,IAAtC,mBAAOqe,EAAP,KAAgBC,EAAhB,KACA,EAAuDte,mBAAS,IAAhE,mBAAOue,EAAP,KAA6BC,EAA7B,KACA,EAA+Cxe,mBAAS,IAAxD,oBAAOye,GAAP,MAAyBC,GAAzB,MACA,GAAiD1e,mBAAS,IAA1D,qBAAO2e,GAAP,MAA0BC,GAA1B,MACA,GAAqD5e,mBAAS,IAA9D,qBAAO6e,GAAP,MAA4BC,GAA5B,MACA,GAAmE9e,mBAAS,IAA5E,qBAAO+e,GAAP,MAAmCC,GAAnC,MACA,GAA+Chf,mBAAS,IAAxD,qBAAOif,GAAP,MAAyBC,GAAzB,MACA,GAAqDlf,mBAAS,IAA9D,qBAAOmf,GAAP,MAA4BC,GAA5B,MACMC,GAAa/hB,EAAMV,UAAYU,EAAMV,SAAS4H,MAAQlH,EAAMV,SAAS4H,MAAM8a,KAAO,KAClFjZ,GAAUF,KACV+U,GAAU5U,cAGViZ,GADWC,cACchb,MAE/BE,EAAY6a,GAAgBA,GAAc7a,UAAY,KAEtD,IAMM+a,GAAkB,SAACC,GACrB,IAAMC,EAAed,GAAoBhd,MAAK,SAAAC,GAAG,OAAIA,EAAII,IAAMwd,KAC/D,OAAOC,EAAeA,EAAa7gB,QAAU,IAQ3C8gB,GAAaC,sBAAW,sBAAC,4DAAA1f,EAAA,0DACvBuE,EADuB,iCAEAtE,IAAMtD,IAAN,UAAauD,EAAb,mBAA+BqE,GAAa,CAAEpE,QAAS,CAAC,+BAA4B7D,MAFpF,UAEjB+D,EAFiB,OAGjBsf,EAAUtf,EAASC,KACnBmd,EAAWkC,EAAQC,QAAUD,EAAQC,QAAU,GACrDlC,EAAYD,EAASmC,SACfC,EAAcF,EAAQne,WACtBmM,EAAUgS,EAAQhS,QAClB0C,EAAesP,EAAQtP,aACvB5O,EAAiBoe,EAAYre,WAAWE,MAAK,SAAAC,GAAG,MAAgB,kBAAZA,EAAIC,QACxDiQ,EAAQxB,EAAaA,aAAa3O,MAAK,SAAAC,GAAG,MAAgB,SAAZA,EAAIC,QAClD2a,EAAQlM,EAAaA,aAAa3O,MAAK,SAAAC,GAAG,MAAgB,SAAZA,EAAIC,QAClDke,EAAWzP,EAAaA,aAAa3O,MAAK,SAAAC,GAAG,MAAgB,YAAZA,EAAIC,QACrDme,EAAUpS,GAAWA,EAAQA,SAAWA,EAAQA,QAAQxL,OAAS,EAAIwL,EAAQA,QAAQ,GAAK,KAC1FpK,EAASoc,EAAQpc,OACjB2Y,EAAmByD,EAAQzD,iBAC3B8D,EAAYL,EAAQK,UACpB5D,EAAgBuD,EAAQvD,cAC9Ba,EAAS,qBAAsB0C,EAAQrZ,oBACvC2W,EAAS,YAAa0C,EAAQvc,WAC9B6Z,EAAS,aAAc0C,EAAQM,WAC/BhD,EAAS,WAAY0C,EAAQtc,SAC7B4Z,EAAS,iBAAkBxb,EAAiBA,EAAeI,MAAQ,IACnEob,EAAS,gBAAiBb,EAAcra,IACxCkb,EAAS,mBAAoBf,EAAiBna,IAC9Ckb,EAAS,MAAO1Z,EAAOxB,IACvBkb,EAAS,uBAAwB+C,EAAUje,IAC3Ckb,EAAS,MAAOrZ,aAAO,IAAI/C,KAAK8e,EAAQlc,aAAc,gBAClDsc,EA5BmB,wBA6BnB9C,EAAS,YAAa8C,EAAQtD,WA7BX,UA8BQyD,GAAgCH,EAAQtD,WA9BhD,eA8Bb0D,EA9Ba,OA+BnBpB,GAAoBoB,GACpBlD,EAAS,UAAW8C,EAAQrD,SAhCT,UAiCWwD,GAAgCH,EAAQrD,SAjCnD,QAiCb0D,EAjCa,OAkCnBnB,GAAuBmB,GACvBnD,EAAS,WAAY8C,EAAQpD,UAC7BM,EAAS,UAAW8C,EAAQxP,MAC5B0M,EAAS,WAAY8C,EAAQM,KAAK,IArCf,QAuCvBpD,EAAS,UAAWpL,EAAQA,EAAMhQ,MAAQ,MAC1Cob,EAAS,QAASV,EAAQA,EAAM1a,MAAQ,MACxCob,EAAS,iBAAkB6C,EAAWA,EAASje,MAAQ,MAzChC,4CA2C5B,IAoDGye,GAAQ,uCAAG,WAAOhgB,GAAP,qBAAAN,EAAA,kEAEHugB,EAAc,CAChBC,QAAQ,EACR7S,QAAS,CACL,CACI,KAAQrN,EAAKqN,QACb,UAAarN,EAAKmc,UAClB,SAAYnc,EAAKqc,SACjB,KAAQ,CACJrc,EAAKkc,UAET,mBAAsB,EACtB,WAAc,GACd,QAAWlc,EAAKoc,UAGxBkD,QAASnC,EACTpN,aAAc,GACd5M,YAAaG,aAAO,IAAI/C,KAAKP,EAAKK,KAAM,cACxC8f,UAAU,EACVC,iBAAkB,KAClBtd,UAAW9C,EAAK8C,UAChBud,SAAUrgB,EAAK2b,IACfza,WAAY,CACR,CACI,WAAc,EACd,KAAQ,iBACR,MAASlB,EAAKmB,iBAGtBwe,UAAW3f,EAAKwb,WAChB8E,gBAAiBtgB,EAAK8b,cACtB/Y,QAAS/C,EAAK0b,SACd6E,YAAavgB,EAAK6b,qBAClB2E,mBAAoBxgB,EAAK4b,iBACzB5V,mBAAoB1C,aAAO,IAAI/C,KAAKP,EAAKgG,oBAAqB,cAC9Dya,uBAA4C,UAApBzgB,EAAKmD,aAG3BoO,EAAQ,CACV,KAAQ,QACR,MAASvR,EAAK+b,SAEd/b,EAAKic,QACCA,EAAQ,CACV,KAAQ,QACR,MAASjc,EAAKic,OAElBgE,EAAYlQ,aAAaiI,KAAKiE,IAE9Bjc,EAAKgc,iBACCA,EAAiB,CACnB,KAAQ,WACR,MAAShc,EAAKgc,gBAElBiE,EAAYlQ,aAAaiI,KAAKgE,IAElCiE,EAAYlQ,aAAaiI,KAAKzG,IAC1BtN,EA3DK,wBA4DLgc,EAAYxe,GAAKwC,EACjBoZ,EAAWqD,OAAOT,EAClB5C,EAAWsD,cAAc9Z,GA9DpB,UA+DkBlH,IAAMyK,KAAN,UAAcxK,EAAd,eAAoCyd,EAAY,CAAExd,QAAS,CAAC,+BAA4B7D,MA/D1G,8CAiELikB,EAAYxe,GAAKwC,EACjBoZ,EAAWqD,OAAOT,EAClB5C,EAAWsD,cAAc9Z,GAnEpB,UAoEkBlH,IAAMyK,KAAN,UAAcxK,EAAd,eAAoCyd,EAAY,CAAExd,QAAS,CAAC,+BAA4B7D,MApE1G,uBAsETqO,IAAM/K,QAAQ,0BACdmb,GAAQzC,KAAK,KAvEJ,kDAyETrW,QAAQC,IAAR,MAzES,0DAAH,sDAkGRgf,GAAcxB,sBAAW,sBAAC,4BAAA1f,EAAA,+EAEDC,IAAMtD,IAAN,UAAauD,EAAb,kCAAsD,CAAEC,QAAS,CAAC,+BAA4B7D,MAF7F,OAElB+D,EAFkB,OAGxB8d,EAAW9d,EAASC,MAHI,uGAO7B,IACG6gB,GAAoBzB,sBAAW,sBAAC,4BAAA1f,EAAA,+EAEPC,IAAMtD,IAAN,UAAauD,EAAb,0CAA8D,CAAEC,QAAS,CAAC,+BAA4B7D,MAF/F,OAExB+D,EAFwB,OAG9Bge,EAAwBhe,EAASC,MAHH,uGAOnC,IACG8gB,GAAgB1B,sBAAW,sBAAC,4BAAA1f,EAAA,+EAEHC,IAAMtD,IAAN,UAAauD,EAAb,qCAAyD,CAAEC,QAAS,CAAC,+BAA4B7D,MAF9F,OAEpB+D,EAFoB,OAG1Bke,GAAoBle,EAASC,MAHH,uGAO/B,IACG+gB,GAAiB3B,sBAAW,sBAAC,4BAAA1f,EAAA,+EAEJC,IAAMtD,IAAN,UAAauD,EAAb,sCAA0D,CAAEC,QAAS,CAAC,+BAA4B7D,MAF9F,OAErB+D,EAFqB,OAG3Boe,GAAqBpe,EAASC,MAHH,uGAOhC,IACGghB,GAAoB5B,sBAAW,sBAAC,4BAAA1f,EAAA,+EAETC,IAAMtD,IAAN,UAAauD,EAAb,wCAA4D,CAAEC,QAAS,CAAC,+BAA4B7D,MAF3F,OAE1B+D,EAF0B,OAGhCse,GAAuBte,EAASC,MAHA,uGAOnC,IACGihB,GAAsB7B,sBAAW,sBAAC,4BAAA1f,EAAA,sEACbC,IAAMtD,IAAN,UAAauD,EAAb,kDAAsE,CAAEC,QAAS,CAAC,+BAA4B7D,MADjG,OAC9B+D,EAD8B,OAEpCwe,GAA8Bxe,EAASC,MAFH,2CAGrC,IACG4f,GAA+B,uCAAG,WAAOsB,GAAP,eAAAxhB,EAAA,sEACbC,IAAMtD,IAAN,UAAauD,EAAb,wDAAoEshB,GAAY,CAAErhB,QAAS,CAAC,+BAA4B7D,MAD3G,cAC9B+D,EAD8B,yBAE7BA,EAASC,MAFoB,2CAAH,sDAI/BmhB,GAAe,uCAAG,WAAOvY,GAAP,eAAAlJ,EAAA,0DAChBkJ,EAAEC,OAAOtH,MADO,gCAEWqe,GAAgChX,EAAEC,OAAOtH,OAFpD,OAEVse,EAFU,OAGhBpB,GAAoBoB,GAHJ,sBAKhBpB,GAAoB,IALJ,2CAAH,sDAQf2C,GAAa,uCAAG,WAAOxY,GAAP,eAAAlJ,EAAA,0DACdkJ,EAAEC,OAAOtH,MADK,gCAEgBqe,GAAgChX,EAAEC,OAAOtH,OAFzD,OAERue,EAFQ,OAGdnB,GAAuBmB,GAHT,sBAKdnB,GAAuB,IALT,2CAAH,sDAwBb0C,GAA0B,SAACzY,GACP,UAAlBA,EAAEC,OAAOtH,MACTgc,GAAe,GACU,aAAlB3U,EAAEC,OAAOtH,OAChBgc,GAAe,IAevBrd,qBAAU,WACN0gB,KACAC,KACAC,KACAC,KACAC,KACAC,KACA9B,OACD,CAACyB,GAAaC,GAAmBC,GAAeC,GAAgBC,GAAmBC,GAAqB9B,KAE3G,IAAImC,GAAa,KACbC,GAAoB,KACpBC,GAAgB,KAChBC,GAAiB,KACjBC,GAAmB,KACnBC,GAA0B,KAC1BC,GAAY,KACZC,GAAe,KACfjE,GAAWA,EAAQ/b,OAAS,IAC5Byf,GAAa1D,EAAQhb,KAAI,SAACK,EAAQ0O,GAAT,OACrB,yBAAwBpQ,MAAO0B,EAAOxB,GAAtC,SAA2CwB,EAAO5E,SAArC4E,EAAOxB,QAGxBqc,GAAwBA,EAAqBjc,OAAS,IACtD0f,GAAoBzD,EAAqBlb,KAAI,SAACkf,EAAqBnQ,GAAtB,OACzC,yBAAqCpQ,MAAOugB,EAAoBrgB,GAAhE,SAAqEqgB,EAAoBzjB,SAA5EyjB,EAAoBrgB,QAGrCuc,IAAoBA,GAAiBnc,OAAS,IAC9C2f,GAAgBxD,GAAiBpb,KAAI,SAACmf,EAAiBpQ,GAAlB,OACjC,yBAAiCpQ,MAAOwgB,EAAgBtgB,GAAxD,SAA6DsgB,EAAgB1jB,SAAhE0jB,EAAgBtgB,QAGjCyc,IAAqBA,GAAkBrc,OAAS,IAChD4f,GAAiBvD,GAAkBtb,KAAI,SAACof,EAAkBrQ,GAAnB,OACnC,yBAAkCpQ,MAAOygB,EAAiBvgB,GAA1D,SAA+DugB,EAAiB3jB,SAAnE2jB,EAAiBvgB,QAGlC2c,IAAuBA,GAAoBvc,OAAS,IACpD6f,GAAmBtD,GAAoBxb,KAAI,SAACqf,EAAoBtQ,GAArB,OACvC,yBAAoCpQ,MAAO0gB,EAAmBxgB,GAA9D,SAAmEwgB,EAAmB5jB,SAAzE4jB,EAAmBxgB,QAGpC6c,IAA8BA,GAA2Bzc,OAAS,IAClE8f,GAA0BrD,GAA2B1b,KAAI,SAACsf,EAA2BvQ,GAA5B,OACrD,yBAA2CpQ,MAAO2gB,EAA0BzgB,GAA5E,SAAiFygB,EAA0BxgB,MAA9FwgB,EAA0BzgB,QAG3C+c,IAAoBA,GAAiB3c,OAAS,IAC9C+f,GAAYpD,GAAiB5b,KAAI,SAACuf,EAAiBxQ,GAAlB,OAC7B,yBAAiCpQ,MAAO4gB,EAAgB1gB,GAAxD,SAA6D0gB,EAAgBzgB,MAAhEygB,EAAgB1gB,QAGjCid,IAAuBA,GAAoB7c,OAAS,IACpDggB,GAAenD,GAAoB9b,KAAI,SAACwf,EAAoBzQ,GAArB,OACnC,yBAAoCpQ,MAAO6gB,EAAmB3gB,GAA9D,SAAmE2gB,EAAmB1gB,MAAzE0gB,EAAmB3gB,QASrB5E,EAAMmH,WALzB,IAMA,GAA4BzE,mBAAS,IAArC,qBAAOuG,GAAP,MACA,IADA,MACkCvG,mBAAS,CAACkC,GAAG,GAAIsE,SAAU,GAAGC,mBAAmB,GAAGC,aAAa,GAAIC,aAAa,GAAGC,uBAAuB,GAAGC,iBAAiB,GAAGC,iBAAiB,GAAGC,oBAAoB,GAAGC,kBAAkB,GAAGC,UAAU,GAAGC,WAAW,GAAGC,cAAc,GAAGC,aAAa,GAAGC,UAAU,MAA3S,qBAAOC,GAAP,MAAkBC,GAAlB,MAGA,GAAoCvH,mBAAS,IAA7C,qBAAO2H,GAAP,MAAmBC,GAAnB,MACA,GAA4C5H,mBAAS,IAArD,qBAAO6H,GAAP,MAAuBC,GAAvB,MACA,GAAkC9H,mBAAS,IAA3C,qBAAO+H,GAAP,MAAkBC,GAAlB,MACA,GAA0ChI,mBAAS,IAAnD,qBAAOiI,GAAP,MAAsBC,GAAtB,MACA,GAAgClI,mBAAS,IAAzC,qBAAOmI,GAAP,MAAiBC,GAAjB,MACA,GAAoBpI,mBAAS,IAA7B,qBAAOqI,GAAP,MAAWC,GAAX,MACA,GAA8CtI,mBAAS,IAAvD,qBAAOuI,GAAP,MAAwBC,GAAxB,MAEA,GAAoCxI,oBAAS,GAA7C,qBAAOyI,GAAP,MAAmBC,GAAnB,MAEA,GAAsC1I,oBAAS,GAA/C,qBAAO2I,GAAP,MAAoBC,GAApB,MAEAjI,qBAAU,WACNkI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,OACC,IAGH,IAAMN,GAAgB,WACfzI,IACItD,IADJ,UACWuD,EADX,uCAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEHoH,GAAcpH,EAASC,SAE1BC,OAAM,SAACd,QAMdkJ,GAAgB,WACd1I,IACCtD,IADD,UACQuD,EADR,2CAEI,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEHsH,GAAkBtH,EAASC,SAE9BC,OAAM,SAACd,QAMTmJ,GAAW,WACd3I,IACItD,IADJ,UACWuD,EADX,4CAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEHwH,GAAaxH,EAASC,SAEzBC,OAAM,SAACd,QAMPoJ,GAAmB,WACvB5I,IACItD,IADJ,UACWuD,EADX,8CAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEH0H,GAAiB1H,EAASC,SAE7BC,OAAM,SAACd,QAMPqJ,GAAU,WACd7I,IACItD,IADJ,UACWuD,EADX,qCAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEH4H,GAAY5H,EAASC,SAExBC,OAAM,SAACd,QAMPsJ,GAAI,WACR9I,IACItD,IADJ,UACWuD,EADX,mCAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEH8H,GAAM9H,EAASC,SAElBC,OAAM,SAACd,QAMPuJ,GAAiB,WACrB/I,IACItD,IADJ,UACWuD,EADX,4CAEO,CAAEC,QAAS,CAAC,+BAA4B7D,MAE3C8D,MAAK,SAACC,GAEHgI,GAAmBhI,EAASC,SAE/BC,OAAM,SAACd,QAKTwJ,GAAoB,SAAAC,GAEtB9B,GAAY,2BAAMD,IAAN,mBAAmB+B,EAAEC,OAAOnH,KAAOkH,EAAEC,OAAOtH,SACpC,iBAAjBqH,EAAEC,OAAOnH,OACY,OAAjBkH,EAAEC,OAAOtH,MACR0G,IAAc,GAEdA,IAAc,KAgB1B,OACI,uCACI,eAAC,IAAD,CAAgBoa,UAAW,IAAMC,iBAAe,IAChD,eAAC,KAAD,CAAMpgB,UAAW0D,GAAQhH,WAAzB,SACI,gBAAC,KAAD,WACI,eAAC,IAAD,CACImD,GAAI,CACA+B,SAAU,IACVC,MAAO,SAHf,SAKI,eAAC/B,GAAA,EAAD,CACIC,QAAQ,YACR7C,MAAM,UACN8C,UAAU,aACVC,UAAW,eAAC,KAAD,IAJf,SAMI,uBAAME,MAAO,CAAEC,cAAe,cAA9B,uBAGR,wBACA,wBACA,sBAAKJ,UAAU,sBAAf,SACI,gBAACqgB,GAAA,EAAD,CAAMvC,SAAUlD,EAAakD,IA1WjC,SAAC/Y,GACbtF,QAAQxC,MAAM8H,MAyWE,UACI,uBAAK/E,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,SACI,qBAAIA,UAAU,aAAd,SAAyC,OAAb0c,GAAoB,oBAAsB,4BAG1E,sBAAK1c,UAAU,YAAf,SACI,uBAAKA,UAAU,aAAf,UACI,uBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,CAAOC,IAAI,qBAAX,mCACA,oCACInH,UAAU,eACVZ,KAAK,OACLI,KAAK,qBACLD,GAAG,qBACHmI,IAAKtJ,GACDoc,EAAS,wBAEhBzV,EAAOjB,oBAAsB,6BAAIiB,EAAOjB,mBAAmB2H,eAIpE,sBAAKzL,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,CAAOC,IAAI,YAAX,+BACA,oCACInH,UAAU,eACVZ,KAAK,OACLI,KAAK,iBACLD,GAAG,kBACCib,EAAS,oBAEhBzV,EAAO9F,gBAAkB,6BAAI8F,EAAO9F,eAAewM,kBAKhE,uBAAKzL,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,CAAOC,IAAI,YAAX,0BACA,oCACInH,UAAU,eACVZ,KAAK,OACLI,KAAK,YACLD,GAAG,aACCib,EAAS,eAEhBzV,EAAOnE,WAAa,6BAAImE,EAAOnE,UAAU6K,eAIlD,sBAAKzL,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,oCACIlH,UAAU,eACVZ,KAAK,OACLI,KAAK,aACLD,GAAG,cACCib,EAAS,gBAEhBzV,EAAOuU,YAAc,6BAAIvU,EAAOuU,WAAW7N,eAIpD,sBAAKzL,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,oCACIlH,UAAU,eACVZ,KAAK,OACLI,KAAK,WACLD,GAAG,YACCib,EAAS,cAEhBzV,EAAOyU,UAAY,6BAAIzU,EAAOyU,SAAS/N,kBAKpD,uBAAKzL,UAAU,MAAf,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,kDACIlH,UAAU,eACVR,KAAK,MACLD,GAAG,OACCib,EAAS,QAJjB,cAMI,yBAAQnb,MAAO,KACd+f,OAEJra,EAAO0U,KAAO,6BAAI1U,EAAO0U,IAAIhO,eAItC,sBAAKzL,UAAU,uBAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,kCACA,kDACIlH,UAAU,eACVR,KAAK,mBACLD,GAAG,oBACCib,EAAS,qBAJjB,cAMI,yBAAQnb,MAAO,KACdkgB,OAEJxa,EAAOyU,UAAY,6BAAIzU,EAAOyU,SAAS/N,eAIhD,sBAAKzL,UAAU,uBAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,sCACA,kDACIlH,UAAU,eACVR,KAAK,uBACLD,GAAG,wBACCib,EAAS,yBAJjB,cAMI,yBAAQnb,MAAO,KACdigB,OAEJva,EAAO4U,sBAAwB,6BAAI5U,EAAO4U,qBAAqBlO,kBAK5E,uBAAKzL,UAAW,MAAhB,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,kDACIlH,UAAU,eACVR,KAAK,gBACLD,GAAG,iBACCib,EAAS,kBAJjB,cAMI,yBAAQnb,MAAO,KACdggB,OAEJta,EAAO6U,eAAiB,6BAAI7U,EAAO6U,cAAcnO,eAI1D,sBAAKzL,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,4BACA,sBAAKlH,UAAU,QAAf,SACI,mCACI,gDACIZ,KAAK,QACLC,MAAM,SACNG,KAAK,cACL8gB,gBAAc,GACV9F,EAAS,gBALjB,IAMInT,SAAU,SAACX,GAAD,OAAOyY,GAAwBzY,OAPjD,eAWJ,sBAAK1G,UAAU,QAAf,SACI,mCACI,gDACIZ,KAAK,QACLC,MAAM,YACNG,KAAK,eACDgb,EAAS,gBAJjB,IAKInT,SAAU,SAACX,GAAD,OAAOyY,GAAwBzY,OANjD,uBAaZ,sBAAK1G,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,mBACA,gDACIlH,UAAU,eACVZ,KAAK,OACLI,KAAK,MACLD,GAAG,MACHmI,IAAKtJ,GACDoc,EAAS,QANjB,IAOInT,SAAU,SAACX,GAAD,OAhdtC,SAACA,GACrB,GAAIA,EAAEC,OAAOtH,MAAO,CAChB,IAAMjB,EAAQ,IAAIC,KACZI,EAAY,IAAIJ,KAAKqI,EAAEC,OAAOtH,OAChCX,EAAUN,EAAMO,cAAgBF,EAAUE,cACxCC,EAAIR,EAAMS,WAAaJ,EAAUI,YACnCD,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YACjDJ,IAEJ+b,EAAS,MAAO/b,QAEhB+b,EAAS,MAAO,MAqc6C8F,CAAgB7Z,OAEpC3B,EAAO5G,KAAO,6BAAI4G,EAAO5G,IAAIsN,eAItC,sBAAKzL,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,kBACA,gDACIlH,UAAU,eACVZ,KAAK,SACLI,KAAK,MACLD,GAAG,OACCib,EAAS,QALjB,IAMIjG,SAAU6G,EACV/T,SAAU,SAACX,GAAD,OAzctC,SAACA,GACrB,IAAK0U,GAAe1U,EAAEC,OAAOtH,MAAO,CAChC,IAAMmhB,EAAc,IAAIniB,KACxBmiB,EAAYC,QAAQ,IACpBD,EAAYE,SAAS,GACrB,IACMviB,EADSgD,GAAOqf,EAAY1F,eACf6F,KAAuB,EAAlBja,EAAEC,OAAOtH,MAAa,SAC9Cob,EAAS,MAAOrZ,aAAO,IAAI/C,KAAKF,EAAIyiB,UAAW,gBAkccC,CAAgBna,uBAS7D,uBAAK1G,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,SACI,qBAAIA,UAAU,aAAd,+BAGJ,uBAAKA,UAAU,YAAf,UACI,uBAAKA,UAAW,MAAhB,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,gDACIlH,UAAU,eACVZ,KAAK,MACLI,KAAK,UACLD,GAAG,WACCib,EAAS,YALjB,IAMIxC,YAAY,qBAEfjT,EAAO8U,SAAW,6BAAI9U,EAAO8U,QAAQpO,eAI9C,sBAAKzL,UAAU,sBAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,gCACA,gDACIlH,UAAU,eACVZ,KAAK,MACLI,KAAK,iBACLD,GAAG,kBACCib,EAAS,mBALjB,IAMIxC,YAAY,qBAEfjT,EAAO+U,gBAAkB,6BAAI/U,EAAO+U,eAAerO,eAI5D,sBAAKzL,UAAU,sBAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,oCACIlH,UAAU,eACVZ,KAAK,QACLI,KAAK,QACLD,GAAG,SACCib,EAAS,WAEhBzV,EAAOgV,OAAS,6BAAIhV,EAAOgV,MAAMtO,kBAK9C,uBAAKzL,UAAU,MAAf,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,sBACA,kDACIlH,UAAU,eACVZ,KAAK,OACLI,KAAK,UACLD,GAAG,WACCib,EAAS,cALjB,IAMInT,SAAU,SAACX,GAAD,OAAOuY,GAAgBvY,IANrC,UAOI,yBAAQrH,MAAO,KACdogB,OAEJ1a,EAAOwY,SAAW,6BAAIxY,EAAOwY,QAAQ9R,eAI9C,sBAAKzL,UAAU,uBAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,kDACIlH,UAAU,eACVZ,KAAK,OACLI,KAAK,UACLD,GAAG,WACCib,EAAS,YALjB,IAMInT,SAAU,SAACX,GAAD,OAAOwY,GAAcxY,IANnC,UAOI,yBAAQrH,MAAO,KACdqgB,YAKb,sBAAK1f,UAAU,uBAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,oCACA,kDACIlH,UAAU,eACVZ,KAAK,OACLI,KAAK,WACLD,GAAG,YACCib,EAAS,aALjB,cAMI,yBAAQnb,MAAO,KACdsgB,eAMjB,uBAAK3f,UAAW,MAAhB,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,oCACIlH,UAAU,eACVZ,KAAK,OACLI,KAAK,UACLD,GAAG,WACCib,EAAS,aAEhBzV,EAAOoG,SAAW,6BAAIpG,EAAOoG,QAAQM,eAI9C,sBAAKzL,UAAU,uBAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,uBACA,oCACIlH,UAAU,eACVZ,KAAK,OACLI,KAAK,WACLD,GAAG,YACCib,EAAS,cAEhBzV,EAAOiV,UAAY,6BAAIjV,EAAOiV,SAASvO,wBAO5D,uBAAKzL,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,SACI,qBAAIA,UAAU,aAAd,0CAEJ,uBAAKA,UAAU,YAAf,UACI,uBAAKA,UAAU,MAAf,UAEQib,GAAYA,EAAStb,OAAS,GAC1B,sBAAKK,UAAU,sBAAf,SACI,yBAAOG,MAAO,CAAE5D,MAAO,QAAvB,UACI,iCACA,gCACI,oDACA,uCACA,wCACA,0CACA,+CAGJ,iCACC0e,EAASva,KAAI,SAACogB,EAAMrR,GACjB,OACI,gCACI,8BAAMqN,GAAgBgE,EAAK/D,kBAC3B,+BAz5B9CC,EAy5B6D8D,EAx5B3D9D,EAAanc,QAGZ,KAFCmc,EAAa/N,UAEK,KADlB+N,EAAaS,UAAYT,EAAaS,UAAY,OAu5BR,+BAh5BlC5P,EAg5B6DiT,EAAKjT,aA/4BrFA,EAAeA,EAAaxO,MAAQ,MAg5BiB,+BA94B5C8L,EA84B6D2V,EAAK3V,QA74B3EA,GAAWA,EAAQ0S,MAAQ1S,EAAQ0S,KAAKle,OAAS,EAAIwL,EAAQ0S,KAAK,GAAK,MA84BlB,gCACI,yBAAQze,KAAK,SACLY,UAAU,2CACViH,QAAS,SAACP,GAAD,OAjuB1D,SAAC8I,EAAUC,GAClCgL,EAAS,mBAAoBjL,EAASuN,gBACtCtC,EAAS,aAAcjL,EAASP,WAChCwL,EAAS,cAAejL,EAASiO,WACjChD,EAAS,YAAajL,EAAS3O,SAC/B4Z,EAAS,qBAAsBjL,EAAS3B,aAAe2B,EAAS3B,aAAaxO,MAAQ,IACrFob,EAAS,iBAAkBjL,EAASrE,SAAWqE,EAASrE,QAAQ0S,MAAQrO,EAASrE,QAAQ0S,KAAKle,OAAS,EAAI6P,EAASrE,QAAQ0S,KAAK,GAAK,IACtItC,GAAgB,GAChBE,EAAgBhM,GAytBwEsR,CAAmBD,EAAMrR,IAFjD,SAGI,eAAC,KAAD,CAAiBvD,KAAK,WAJ9B,WAOI,yBACI9M,KAAK,SACLY,UAAU,kCACViH,QAAS,SAACP,GAAD,OA9tBpD,SAAC+I,GAC1BuR,YAAW,WACP/F,EAAS/I,OAAOzC,EAAO,GACvByL,EAAYD,GACZM,GAAgB,GAChBA,GAAgB,KACjB,KAwtBiF0F,CAAqBxR,IAHzC,SAII,eAAC,KAAD,CAAiBvD,KAAK,iBAhBzB4U,EAAKrR,OA14BvD,IAACtE,EAHU0C,EAVZmP,YAk7BkB,sBAAKhd,UAAU,sBAAf,SAEQsb,GACI,sBAAKtb,UAAU,OAAf,SACI,uBAAKA,UAAU,YAAf,UACI,uBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,CAAOC,IAAI,mBAAX,iCACA,kDACInH,UAAU,eACVR,KAAK,mBACLD,GAAG,oBACCib,EAAS,qBAJjB,cAKI,yBAAQnb,MAAO,KACdmgB,OAEJza,EAAOmc,kBAAoB,6BAAInc,EAAOmc,iBAAiBzV,eAIhE,sBAAKzL,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,CAAOC,IAAI,aAAX,0BACA,oCACInH,UAAU,eACVZ,KAAK,OACLI,KAAK,aACLD,GAAG,cACCib,EAAS,gBAEhBzV,EAAOoc,YAAc,6BAAIpc,EAAOoc,WAAW1V,eAIpD,sBAAKzL,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,oCACIlH,UAAU,eACVZ,KAAK,OACLI,KAAK,cACLD,GAAG,eACCib,EAAS,iBAEhBzV,EAAOqc,aAAe,6BAAIrc,EAAOqc,YAAY3V,eAItD,sBAAKzL,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,oCACIlH,UAAU,eACVZ,KAAK,OACLI,KAAK,YACLD,GAAG,aACCib,EAAS,eAEhBzV,EAAOsc,WAAa,6BAAItc,EAAOsc,UAAU5V,kBAKtD,uBAAKzL,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,CAAOC,IAAI,qBAAX,0BACA,oCACInH,UAAU,eACVZ,KAAK,OACLI,KAAK,qBACLD,GAAG,sBACCib,EAAS,wBAEhBzV,EAAOuc,oBAAsB,6BAAIvc,EAAOuc,mBAAmB7V,eAIpE,sBAAKzL,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,CAAOC,IAAI,eAAX,mBACA,oCACInH,UAAU,eACVZ,KAAK,OACLI,KAAK,eACLD,GAAG,gBACCib,EAAS,kBAEhBzV,EAAOwc,cAAgB,6BAAIxc,EAAOwc,aAAa9V,eAIxD,sBAAKzL,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACI,eAAC,KAAD,CAAOC,IAAI,iBAAX,qBACA,oCACInH,UAAU,eACVZ,KAAK,OACLI,KAAK,iBACLD,GAAG,kBACCib,EAAS,oBAEhBzV,EAAOyc,gBAAkB,6BAAIzc,EAAOyc,eAAe/V,kBAKhE,uBAAKzL,UAAU,MAAf,UACI,sBAAKA,UAAU,GAAf,SACI,eAAC,KAAD,CACIZ,KAAK,SACLW,QAAQ,YACR7C,MAAM,UACN8C,UAAW0D,GAAQ5G,OACnBmK,QAt+BrC,SAACP,GAC5B,IAAMwa,EAAmBxG,EAAU,oBAC7ByG,EAAazG,EAAU,cACvB0G,EAAc1G,EAAU,eACxB2G,EAAY3G,EAAU,aACtB4G,EAAqB5G,EAAU,sBAE/B8G,GADe9G,EAAU,gBACRA,EAAU,mBACjC,GAAKwG,EAIL,GAAKC,EAIL,GAAKE,EAAL,CAKA,IAAMjE,EAAU,CACZ,QAAW,CACP,KAAQ,CACJoE,IAGR,aAAgB,CACZ,KAAQ,QACR,MAASF,GAEb,UAAaH,EACb,SAAYA,EAAa,IAAMC,EAAc,IAAMC,EACnD,eAAkBH,EAClB,QAAWG,EACX,UAAaD,GAEG,MAAhB5F,GACAP,EAAS/I,OAAOsJ,EAAc,GAC9BN,EAAYD,EAASwG,OAAOrE,KAE5BlC,EAAYD,EAASwG,OAAOrE,IAEhC7B,GAAgB,QA1BZZ,EAAS,YAAa,CAAGvb,KAAM,SAAUqM,QAAS,wBAA0B,CAAEiW,aAAa,SAJ3F/G,EAAS,aAAc,CAAGvb,KAAM,SAAUqM,QAAS,yBAA2B,CAAEiW,aAAa,SAJ7F/G,EAAS,mBAAoB,CAAGvb,KAAM,SAAUqM,QAAS,4BAA8B,CAAEiW,aAAa,KAw9B9C,mBAWJ,sBAAK1hB,UAAU,GAAf,SACI,eAAC,KAAD,CACIZ,KAAK,SACLW,QAAQ,YACR7C,MAAM,YACN8C,UAAW0D,GAAQ5G,OACnBmK,QAr8B/B,WACjCsU,GAAgB,IA+7B4C,mCAkBhC,sBAAKvb,UAAU,QACX,eAAC,KAAD,CACIZ,KAAK,SACLW,QAAQ,YACR7C,MAAM,UACN8C,UAAW0D,GAAQ5G,OACnBmD,UAAW,eAAC,KAAD,IACXgH,QAzgCd,WACtBsU,GAAgB,IAkgCgB,8CAcZ,uBAAKvb,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,SACI,qBAAIA,UAAU,aAAd,8BAGJ,uBAAKA,UAAU,YAAf,UACA,uBAAKA,UAAU,MAAf,UAEA,sBAAKA,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,WAAX,8BACA,eAACC,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,WACLD,GAAG,WACH8H,SAAUZ,GACVpH,MAAOsF,GAAUd,SACjByD,UAAQ,IAEQ,KAAnBvC,EAAOlB,SACJ,uBAAM7D,UAAW0D,GAAQzG,MAAzB,SAAiC8H,EAAOlB,WACxC,QAGR,sBAAK7D,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,qBAAX,mCACA,eAACC,GAAA,EAAD,CACAhI,KAAK,OACLI,KAAK,qBACLD,GAAG,qBACH8H,SAAUZ,GACVpH,MAAOsF,GAAUb,mBACjBwD,UAAQ,IAGsB,KAA7BvC,EAAOjB,mBACJ,uBAAM9D,UAAW0D,GAAQzG,MAAzB,SAAiC8H,EAAOjB,qBACxC,WAIZ,uBAAK9D,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,CAAOC,IAAI,eAAX,8BACA,gBAACC,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,eACLD,GAAG,eACH8H,SAAUZ,GACVpH,MAAOsF,GAAUZ,aACjBuD,UAAQ,EANZ,UAQA,yBAAQjI,MAAM,GAAd,eAEC2F,GAAWtE,KAAI,SAACrB,GAAD,OACZ,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,OAIC,KAAvBwF,EAAOhB,aACA,uBAAM/D,UAAW0D,GAAQzG,MAAzB,SAAiC8H,EAAOhB,eACxC,WAKR,sBAAK/D,UAAU,2BAAf,UACc,IAAb8F,GAEO,gBAACoB,GAAA,EAAD,WACA,eAAC,KAAD,4BACA,eAACE,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,eACLD,GAAG,eACH8H,SAAUZ,GACVpH,MAAOsF,GAAUX,aACjBsD,UAAQ,OAKhB,KAIJ,sBAAKtH,UAAU,2BAAf,SACA,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,yCACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,yBACLD,GAAG,yBACH8H,SAAUZ,GACVpH,MAAOsF,GAAUV,uBACjBqD,UAAQ,EANZ,UAQA,yBAAQjI,MAAM,GAAd,eAEC+F,GAAU1E,KAAI,SAACrB,GAAD,OACX,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,OAIW,KAAjCwF,EAAOd,uBACA,uBAAMjE,UAAW0D,GAAQzG,MAAzB,SAAiC8H,EAAOd,yBACxC,WAKR,sBAAKjE,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,2CACA,eAAC,kBAAD,CACIK,MAAM,EACN/H,KAAK,mBACLD,GAAG,mBACHF,MAAOsF,GAAU6C,QACjBH,SAAU,SAAAI,GAAM,OACZ7C,GAAa,2BAAKD,IAAN,IAAiBT,iBAAkB/C,GAAOsG,GAAQrG,OAAO,kBAGrEsG,IAAK,IAAIrJ,YAKrB,sBAAK2B,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,iCACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,mBACLD,GAAG,mBACHF,MAAOsF,GAAUR,iBACjBkD,SAAUZ,GACVa,UAAQ,EANZ,UAQK,yBAAQjI,MAAM,GAAd,eAEI6F,GAAexE,KAAI,SAACrB,GAAD,OAChB,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,UAKH,KAA3BwF,EAAOZ,iBACJ,uBAAMnE,UAAW0D,GAAQzG,MAAzB,SAAiC8H,EAAOZ,mBACxC,QAIR,sBAAKnE,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,iCACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,sBACLD,GAAG,sBACHF,MAAOsF,GAAUP,oBACjBiD,SAAUZ,GACVa,UAAQ,EANZ,UAQK,yBAAQjI,MAAM,GAAd,eAEIiG,GAAc5E,KAAI,SAACrB,GAAD,OACf,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,UAKA,KAA9BwF,EAAOX,oBACJ,uBAAMpE,UAAW0D,GAAQzG,MAAzB,SAAiC8H,EAAOX,sBACxC,QAIJ,sBAAKpE,UAAY,2BAAjB,SACA,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,gBAACE,GAAA,EAAD,CACIhI,KAAO,SACPI,KAAO,oBACPD,GAAK,oBACLF,MAASsF,GAAUN,kBACnBgD,SAAYZ,GACZa,UAAQ,EANZ,UAQI,yBACAjI,MAAQ,GADR,eAIIuG,GAAgBlF,KAAI,SAACrB,GAAD,OAChB,yBAEJA,MAASA,EAAME,GAFX,SAGCF,EAAMlD,SAFJkD,EAAME,eAYzB,sBAAKS,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,2BACA,eAAC,kBAAD,CACIK,MAAM,EACN/H,KAAK,YACLD,GAAG,YACHF,MAAOuE,GAAO4D,QACdH,SAAU,SAAAI,GAAM,OACZ7C,GAAa,2BAAKD,IAAN,IAAiBL,UAAWnD,GAAOsG,GAAQrG,OAAO,kBAG9DsG,IAAK,IAAIrJ,YAMrB,sBAAK2B,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,wBACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,aACLD,GAAG,aACHF,MAAOsF,GAAUJ,WACjB8C,SAAUZ,GACVa,UAAQ,EANZ,UAQK,yBAAQjI,MAAM,GAAd,eAEImG,GAAS9E,KAAI,SAACrB,GAAD,OACV,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,UAKT,KAArBwF,EAAOR,WACJ,uBAAMvE,UAAW0D,GAAQzG,MAAzB,SAAiC8H,EAAOR,aACxC,QAGR,sBAAKvE,UAAU,2BAAf,SACI,gBAACkH,GAAA,EAAD,WACA,eAAC,KAAD,8BACA,gBAACE,GAAA,EAAD,CACIhI,KAAK,SACLI,KAAK,gBACLD,GAAG,gBACHF,MAAOsF,GAAUH,cACjB6C,SAAUZ,GACVa,UAAQ,EANZ,UAQK,yBAAQjI,MAAM,GAAd,eAEIqG,GAAGhF,KAAI,SAACrB,GAAD,OACJ,yBAAuBA,MAAOA,EAAME,GAApC,SACKF,EAAMlD,SADEkD,EAAME,UAKN,KAAxBwF,EAAOP,cACJ,uBAAMxE,UAAW0D,GAAQzG,MAAzB,SAAiC8H,EAAOP,gBACxC,QAGR,sBAAKxE,UAAU,2BAAf,SAEI,uBAAKA,UAAU,mCAAf,UACI,wBACAZ,KAAK,WACLY,UAAU,mBAEVR,KAAK,eACLD,GAAG,eACH8H,SAn2Bd,SAAAX,GACfA,EAAEC,OAAOiB,QACR3B,IAAe,GAEfA,IAAe,MAk2Ba,wBACAjG,UAAU,mBACV6H,QAAQ,mBAFR,qCAQR,sBAAK7H,UAAU,2BAAf,UACmB,IAAdgG,GAEG,gBAACkB,GAAA,EAAD,WACA,eAAC,KAAD,yBACA,eAACE,GAAA,EAAD,CACIhI,KAAK,OACLI,KAAK,YACLD,GAAG,YACH8H,SAAUZ,GACVpH,MAAOsF,GAAUD,UACjB4C,UAAQ,OAKZ,cAQXzC,EAAS,eAACiD,GAAA,EAAD,IAAc,GAExB,wBAGQ,eAAC,KAAD,CACI1I,KAAK,SACLW,QAAQ,YACR7C,MAAM,UACN8C,UAAW0D,GAAQ5G,OACnBmD,UAAW,eAAC,KAAD,IALf,SAOM4E,EAGE,uBAAM1E,MAAO,CAAEC,cAAe,cAA9B,uBAFA,uBAAMD,MAAO,CAAEC,cAAe,cAA9B,oBAuBhB,eAAC,KAAD,CACIL,QAAQ,YACRC,UAAW0D,GAAQ5G,OACnBmD,UAAW,eAAC,KAAD,IACXgH,QArkCP,WACjBsR,GAAQzC,KAAK,MAgkCO,SAMI,uBAAM3V,MAAO,CAAEC,cAAe,cAA9B,oCCvhDjB,SAASuhB,KACtB,OACE,eAAC,IAAD,UACE,iCACA,eAAC,IAAD,IAGE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOC,KAAK,mBAAZ,SACE,eAACC,GAAD,MAEF,eAAC,IAAD,CAAOD,KAAK,oBAAZ,SACE,eAACE,GAAD,MAEF,eAAC,IAAD,CAAOF,KAAK,sBAGZ,eAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,eAAC,GAAD,cCnCZ,IAYeG,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBrkB,MAAK,YAAkD,IAA/CskB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,UCPVO,GAAY,MAEHC,GAAc,CAC1B,CACC5W,WAAY,UACZqL,QAAS,QACTwL,OAAQ,WACRC,SAAU,UACVC,YAAa,UACbC,UAAW,UACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBT,UAAWA,IAEZ,CACC3W,WAAY,UACZqL,QAAS,QACTwL,OAAQ,WACR5V,QAAS,UACT6V,SAAU,UACVC,YAAa,UACbC,UAAW,UACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBT,UAAWA,IAEX,CACA3W,WAAY,UACZqL,QAAS,QACTwL,OAAQ,WACRE,YAAa,WACbD,SAAU,UACVE,UAAW,WACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBnW,QAAS,WACT0V,UAAWA,IAEZ,CAEC3W,WAAY,UACZqL,QAAS,OACTwL,OAAQ,WACRC,SAAU,UACVC,YAAa,UACbC,UAAW,UACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBnW,QAAS,UACT0V,UAAWA,IAEZ,CAEC3W,WAAY,UACZqL,QAAS,QACTwL,OAAQ,WACRE,YAAa,WACbD,SAAU,UACVG,aAAc,OACdD,UAAW,UACXE,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBnW,QAAS,WACT0V,UAAWA,IAGZ,CAEC3W,WAAY,UACZqL,QAAS,QACTwL,OAAQ,aACRE,YAAa,UACbD,SAAU,UACVE,UAAW,UACXC,aAAc,SACdC,gBAAiB,SACjBC,eAAgB,QAChBC,gBAAiB,OACjBnW,QAAS,UACT0V,UAAWA,KCrFAU,GAAeC,0BA0RbC,GAxRc,SAACxoB,GAC7B,MAAwC0C,mBAAS,CAAEgC,MAAO,OAAQ8O,MAAO,SAAzE,mBAAOiV,EAAP,KAAqBC,EAArB,KACA,EAA8ChmB,mBAAS,CAAEgC,MAAO,QAAS8O,MAAO,UAAhF,mBAAOmV,EAAP,KAAwBC,EAAxB,KACG,EAA4ClmB,mBAAS,CAAEgC,MAAO,QAAS8O,MAAO,UAA9E,mBAAOqV,EAAP,KAAuBC,EAAvB,KACA,EAA0CpmB,mBAAS,CAAEgC,MAAO,WAAY8O,MAAO,aAA/E,mBAAOuV,EAAP,KAAsBC,EAAtB,KACH,EAAkCtmB,mBAAS,CAAEgC,MAAO,MAAO8O,MAAO,QAAlE,mBAAOoU,EAAP,KAAkBqB,EAAlB,KACA,EAAwCvmB,mBAAS,WAAjD,mBAAOwmB,EAAP,KAAqBC,EAArB,KACA,EAA8CzmB,mBAAS,WAAvD,mBAAO0mB,EAAP,KAAwBC,EAAxB,KACA,EAAoC3mB,mBAAS,WAA7C,mBAAO4mB,EAAP,KAAmBC,EAAnB,KACA,EAAwC7mB,mBAAS,WAAjD,mBAAO8mB,EAAP,KAAqBC,EAArB,KACA,EAAkC/mB,oBAAS,GAA3C,mBAAOgnB,EAAP,KAAkBC,EAAlB,KACA,EAAoCjnB,oBAAS,GAA7C,mBAAOknB,EAAP,KAAmBC,EAAnB,KACA,EAAoCnnB,mBAAS,CAAEgC,MAAO,QAAS8O,MAAO,UAAtE,mBAAO6K,EAAP,KAAmByL,EAAnB,KACA,EAAoDpnB,mBAAS,CAACgC,MAAO,aAAc8O,MAAO,eAA1F,mBAAOuW,EAAP,KAA2BC,GAA3B,KACSC,GAAOC,SAASC,cAAc,QACpC,GAAsCznB,mBAAS,GAA/C,qBAAO0nB,GAAP,MAAoBC,GAApB,MACA,GAAwC3nB,mBAAS,GAAjD,qBAAO4nB,GAAP,MAAqBC,GAArB,MA4DIC,GAAqB,SAAC3lB,GAC7BskB,EAAgBtkB,GACbolB,GAAKQ,aAAa,eAAgB5lB,IAE9B6lB,GAAwB,SAAC7lB,GAC7BwkB,EAAmBxkB,GACnBolB,GAAKQ,aAAa,oBAAqB5lB,IAEnC8lB,GAAmB,SAAC9lB,GACxB0kB,EAAc1kB,GACdolB,GAAKQ,aAAa,gBAAiB5lB,IAE/B+lB,GAAqB,SAAC/lB,GAC1B4kB,EAAgB5kB,GAChBolB,GAAKQ,aAAa,iBAAkB5lB,IAEhCgmB,GAAuB,SAAChmB,GAC5B+jB,EAAmB/jB,GACnBolB,GAAKQ,aAAa,wBAAyB5lB,EAAKH,QAE5ComB,GAAwB,SAACjmB,GAC7BokB,EAAapkB,GACbolB,GAAKQ,aAAa,YAAa5lB,EAAKH,OACpC,IAAIqmB,EAAOb,SAASC,cAAc,QAClCY,EAAKN,aAAa,MAAO5lB,EAAKH,OAC9BqmB,EAAK1lB,UAAYR,EAAKH,OAElBsmB,GAAsB,SAACnmB,GACR,eAAfA,EAAKH,OACoB,YAAvB+jB,EAAa/jB,OACfskB,EAAiBnkB,GACjBolB,GAAKQ,aAAa,cAAe5lB,EAAKH,OACtCgkB,EAAgB,CAAEhkB,MAAO,OAAQ8O,MAAO,SACxCyW,GAAKQ,aAAa,qBAAsB,UAM1CzB,EAAiBnkB,GACjBolB,GAAKQ,aAAa,cAAe5lB,EAAKH,SAGpCumB,GAAqB,SAACpmB,GACE,eAAxBkkB,EAAcrkB,OACG,YAAfG,EAAKH,MACPwmB,MAAM,yDAORxC,EAAgB7jB,GAChB8kB,EAA4B,eAAf9kB,EAAKH,MAAyB,WAAa,IACxDulB,GAAKQ,aAAa,qBAAsB5lB,EAAKH,SAI3CymB,GAAsB,SAACtmB,GAC3BikB,EAAkBjkB,GAClBolB,GAAKQ,aAAa,uBAAwB5lB,EAAKH,QAS3C0mB,GAAmB,SAACvmB,GACxBolB,GAAKQ,aAAa,qBAAsB5lB,EAAKH,OAC7ColB,EAAcjlB,IAGVwmB,GAA0B,SAACxmB,GAC/BmlB,GAAsBnlB,GACtBolB,GAAKQ,aAAa,iBAAkB5lB,EAAKH,OAC1B,UAAfG,EAAKH,OACHumB,GAAmB,CAAEvmB,MAAO,UAAW8O,MAAO,aA6ElD,OA7BAnQ,qBAAU,WACX,IAAM4mB,EAAOC,SAASC,cAAc,QACjCF,EAAKQ,aAAa,kBAAmB,WACrCR,EAAKQ,aAAa,qBAAsB,SACxCR,EAAKQ,aAAa,cAAe,YACjCR,EAAKQ,aAAa,eAAgB,WAClCR,EAAKQ,aAAa,oBAAqB,WACvCR,EAAKQ,aAAa,gBAAiB,WACnCR,EAAKQ,aAAa,qBAAsB,WACxCR,EAAKQ,aAAa,iBAAkB,WACpCR,EAAKQ,aAAa,eAAgB,WAClCR,EAAKQ,aAAa,wBAAyB,SAC3CR,EAAKQ,aAAa,uBAAwB,SAC1CR,EAAKQ,aAAa,iBAAkB,QACpCR,EAAKQ,aAAa,YAAa,OACjC,IAAIa,EAAe,WAClBjB,GAAehrB,OAAOksB,YACtBhB,GAAgBlrB,OAAOmsB,aACvBnsB,OAAOksB,YAAc,KAAOlsB,OAAOksB,WAAa,KAC9CtB,EAAKQ,aAAa,qBAAsB,QACxCprB,OAAOksB,YAAc,IACrBtB,EAAKQ,aAAa,qBAAsB,WACxCR,EAAKQ,aAAa,qBAAsB,SAIzC,OAFAa,IACAjsB,OAAOosB,iBAAiB,SAAUH,GAC3B,kBAAMjsB,OAAOqsB,oBAAoB,SAAUJ,MACjD,IAGD,eAAChD,GAAaqD,SAAd,CACEjnB,MAAO,CACLulB,QACA2B,cArNgB,CACpB,CAAElnB,MAAO,UAAW8O,MAAO,WAC3B,CAAE9O,MAAO,OAAQ8O,MAAO,QACxB,CAAE9O,MAAO,OAAQ8O,MAAO,QACxB,CAAE9O,MAAO,SAAU8O,MAAO,UAC1B,CAAE9O,MAAO,UAAW8O,MAAO,WAC3B,CAAE9O,MAAO,aAAc8O,MAAO,eAgN1BqY,aA1Ne,CACnB,CAAEnnB,MAAO,WAAY8O,MAAO,YAC5B,CAAE9O,MAAO,aAAc8O,MAAO,eAyN1BsY,iBA/MmB,CACvB,CAAEpnB,MAAO,QAAS8O,MAAO,SACzB,CAAE9O,MAAO,OAAQ8O,MAAO,SA8MpBmV,kBACAoD,gBAzMkB,CACtB,CAAErnB,MAAO,QAAS8O,MAAO,SACzB,CAAE9O,MAAO,SAAU8O,MAAO,WAwMtBwY,kBAtMoB,CACxB,CAAEtnB,MAAO,aAAc8O,MAAO,cAC9B,CAAE9O,MAAO,QAAS8O,MAAO,SACzB,CAAE9O,MAAO,OAAQ8O,MAAO,SAoMpByY,kBAjLoB,CACxB,CAAEvnB,MAAO,MAAO8O,MAAO,OACvB,CAAE9O,MAAO,MAAO8O,MAAO,QAgLnB0Y,WA9Ka,CACjB,CAAExnB,MAAO,UAAW8O,MAAO,WAC3B,CAAE9O,MAAO,SAAU8O,MAAO,UAC1B,CAAE9O,MAAO,QAAS8O,MAAO,SACzB,CAAE9O,MAAO,WAAY8O,MAAO,aAC5B,CAAE9O,MAAO,gBAAiB8O,MAAO,kBA0KnC0V,eACME,kBACNgB,eACAE,gBACME,sBACAE,yBACAO,sBACAxC,eACAoC,wBACAsB,iBA1NmB,CACvB,CAAEznB,MAAO,QAAS8O,MAAO,SACzB,CAAE9O,MAAO,SAAU8O,MAAO,WAyNtB2X,uBACAtC,iBACAmC,uBACAjC,gBACA+B,yBACAO,2BACAzD,YACAwE,OArNS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,YAuMI9C,aACAqB,oBACAC,sBACApB,eACAE,YACAE,aACAyC,eAhIiB,WACE,WAAvB5D,EAAa/jB,MACTmlB,GAAc,GACdA,GAAc,IA8HduB,oBACA/M,aACA0L,qBACNuC,aAlHqB,SAAClrB,EAAMwmB,GAE7B,IAAI2E,EAAU,GAGVC,EAAgB3E,GAAYzmB,GAEhC6oB,GAAKQ,aAAa,kBAAmB+B,EAAcvb,YAEnDsb,EAAQ7nB,MAAQ8nB,EAAclQ,QAC9B8O,GAAiBmB,GAEjBA,EAAQ7nB,MAAQ8nB,EAAc1E,OAC9BkD,GAAoBuB,GAGpB/B,GAAmBgC,EAActa,SAGjCwY,GAAsB8B,EAAcxE,aAGpC2C,GAAiB6B,EAAczE,UAE/BwE,EAAQ7nB,MAAQ8nB,EAActE,aAC9B+C,GAAmBsB,GAGnB3B,GAAmB4B,EAAcvE,WAEjCsE,EAAQ7nB,MAAQ8nB,EAAcrE,gBAC9B0C,GAAqB0B,GAErBA,EAAQ7nB,MAAQ8nB,EAAcpE,eAC9B+C,GAAoBoB,GAEpBA,EAAQ7nB,MAAQ8nB,EAAcnE,gBAC9BgD,GAAwBkB,GAGxBA,EAAQ7nB,MAAQkjB,EAChBkD,GAAsByB,KAkCnB,SA0CGvsB,EAAMysB,YC/QbC,IAAS/U,OACR,eAAC,IAAMgV,WAAP,UAEW,eAAC,KAAD,UACI,eAAC,IAAD,CAAeC,SAAS,IAAxB,SACI,eAAC,GAAD,UACI,eAAC5F,GAAD,YAMtBkD,SAAS2C,eAAe,SAE1BzF,M","file":"static/js/main.00ebe372.chunk.js","sourcesContent":["\r\nexport const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n//export const url =  'http://localhost:8282/api/v1/';\r\n//export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjU1Nzg1MTc1fQ.zn7xfcSoSqpLmtOM_39daZaETRZONXxoWHBUyaLz-G9rwEu_5d7HpzOc1IO1CmdLXc1KGL2Tg1DfRbUHGTd4XQ';","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\nconst patientObjList=[{\"id\":1,\"visitId\":1,\"active\":true,\"surname\":\"Adegbite\",\"firstName\":\"Elijah\",\"otherName\":\"\",\"gender\":{\"id\":3,\"display\":\"Transgender(Female to male)\"},\"deceased\":false,\"maritalStatus\":{\"id\":6,\"display\":\"Married\"},\"employmentStatus\":{\"id\":89,\"display\":\"Employed\"},\"education\":{\"id\":11,\"display\":\"Senior Secondary\"},\"organization\":null,\"dateOfBirth\":\"1978-06-14\",\"deceasedDateTime\":null,\"identifier\":{\"identifier\":[{\"type\":\"HospitalNumber\",\"value\":\"445t\",\"assignerId\":1}]},\"contact\":null,\"contactPoint\":{\"contactPoint\":[{\"type\":\"email\",\"value\":\"mathewadegbite@gmail.com\"},{\"type\":\"phone\",\"value\":\"09077772883\"}]},\"address\":{\"address\":[{\"city\":\"1 Governor Road Ikotun Lagos\",\"line\":[\"\"],\"stateId\":26,\"district\":\"557\",\"countryId\":1,\"postalCode\":\"\",\"organisationUnitId\":0}]},\"dateOfRegistration\":\"2022-06-04\",\"isDateOfBirthEstimated\":true}]\r\nconst Patients = (props) => {\r\n    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [patientObj, setpatientObj] = useState([])\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}hiv/patients`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    let p =[{id: 1, name : \"ade\"}, {id: 2, name:\"ade55\"}];\r\n    console.log(p[p.length - 1])\r\n\r\n  return (\r\n    <div>\r\n       <Card>\r\n         <CardBody>\r\n         <Link to={\"register-patient\"}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end\"\r\n                    startIcon={<FaUserPlus size=\"10\"/>}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n                </Button>\r\n                </Link>\r\n                <br/><br/>\r\n                <br/>\r\n        \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Find Patient \"\r\n              columns={[\r\n              // { title: \" ID\", field: \"Id\" },\r\n                {\r\n                  title: \"Patient Name\",\r\n                  field: \"name\",\r\n                },\r\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                { title: \"Gender\", field: \"gender\", filtering: false },\r\n                { title: \"Age\", field: \"age\", filtering: false },\r\n                //{ title: \"Enrollment Status\", field: \"v_status\", filtering: false },\r\n                //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n                { title: \"Current Status\", field: \"status\", filtering: false },\r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ patientList.map((row) => ({\r\n                  //Id: manager.id,\r\n                    name:row.firstName + \" \" + row.surname,\r\n                    hospital_number: getHospitalNumber(row.identifier),\r\n                    //address: row.address,\r\n                   //phone_number:  row.phone,\r\n                    gender:row.gender.display,\r\n                    age: (row.dateOfBirth === 0 ||\r\n                        row.dateOfBirth === undefined ||\r\n                        row.dateOfBirth === null ||\r\n                        row.dateOfBirth === \"\" )\r\n                          ? 0\r\n                          : calculate_age(moment(row.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n                    \r\n                    status: (<Label color=\"blue\" size=\"mini\">{row.currentStatus}</Label>),\r\n                 \r\n                    actions:\r\n            \r\n                    <div>\r\n                    <Menu>\r\n                        <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", }}>\r\n                          Actions <span aria-hidden>▾</span>\r\n                        </MenuButton>\r\n                            <MenuList style={{ color:\"#000000 !important\"}} >\r\n                                {row.currentStatus!== \"NOT ENROLLED\" ?\r\n                                    (\r\n                                        <>\r\n                                            <MenuItem style={{ color:\"#000 !important\"}}>\r\n                                                <Link\r\n                                                    to={{\r\n                                                        pathname: \"/patient-history\",\r\n                                                        state: { patientObj: row  }\r\n                                                    }}>\r\n                                                <MdDashboard size=\"15\" color=\"black\" />{\" \"}<span style={{color: '#000'}}>Patient Dashboard</span>                   \r\n                                                </Link>\r\n                                            </MenuItem>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    (\r\n                                        <>\r\n                                            <MenuItem style={{ color:\"#000 !important\"}}>\r\n                                                <Link\r\n                                                    to={{\r\n                                                        pathname: \"/register-patient\",\r\n                                                        state: { patientId : row.id }\r\n                                                    }}>\r\n                                                <TiArrowForward size=\"15\" color=\"black\" />{\" \"}<span style={{color: '#000'}}>Enroll Patient</span>                   \r\n                                                </Link>\r\n                                            </MenuItem>  \r\n                                        </>\r\n                                    )\r\n\r\n                                }\r\n                                                                    \r\n    \r\n                          </MenuList>\r\n                    </Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              //backgroundColor: \"#9F9FA5\",\r\n                              color: \"#000\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n           \r\n        </CardBody>\r\n       </Card>\r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport Dashboard from './Patient/PatientList'\r\nimport CheckedInPatients from './Patient/CheckedInPatients'\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>   \r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  {/* <Tab eventKey=\"checked-in\" title=\"Checked In Patients\">                   \r\n                    <CheckedInPatients />\r\n                  </Tab> */}\r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <Dashboard />\r\n                  </Tab>                    \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\n\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\n\r\nconst Patients = (props) => {\r\n\r\n    const [patientList, setPatientList] = useState([])\r\n    const [patientObj, setpatientObj] = useState([])\r\n\r\n    useEffect(() => {\r\n        patients()\r\n    }, []);\r\n    ///GET LIST OF Patients\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}patient/checked-in-by-service/hiv-code`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n\r\n                setPatientList(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    console.log(patientList)\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n\r\n\r\n                    <MaterialTable\r\n                        icons={tableIcons}\r\n                        title=\"Find Patient \"\r\n                        columns={[\r\n                            // { title: \" ID\", field: \"Id\" },\r\n                            {\r\n                                title: \"Patient Name\",\r\n                                field: \"name\",\r\n                            },\r\n                            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                            { title: \"Gender\", field: \"gender\", filtering: false },\r\n                            { title: \"Age\", field: \"age\", filtering: false },\r\n                            { title: \"Actions\", field: \"actions\", filtering: false },\r\n                        ]}\r\n                        data={ patientList.map((row) => ({\r\n\r\n                            name:row.firstName + \" \" + row.surname,\r\n                            hospital_number: getHospitalNumber(row.identifier),\r\n                            gender:row.gender.display,\r\n                            age: (row.dateOfBirth === 0 ||\r\n                                row.dateOfBirth === undefined ||\r\n                                row.dateOfBirth === null ||\r\n                                row.dateOfBirth === \"\" )\r\n                                ? 0\r\n                                : calculate_age(moment(row.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n\r\n                            actions:\r\n\r\n                                <div>\r\n                                    <Menu>\r\n                                        <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", }}>\r\n                                            Actions <span aria-hidden>▾</span>\r\n                                        </MenuButton>\r\n                                        <MenuList style={{ color:\"#000000 !important\"}} >\r\n\r\n                                            <MenuItem style={{ color:\"#000 !important\"}}>\r\n                                                <Link\r\n                                                    to={{\r\n                                                        pathname: \"/patient-history\",\r\n                                                        state: { patientObj: row  }\r\n                                                    }}>\r\n                                                    <MdDashboard size=\"15\" color=\"black\" />{\" \"}<span style={{color: '#000'}}>Patient Dashboard</span>\r\n                                                </Link>\r\n                                            </MenuItem>\r\n\r\n                                        </MenuList>\r\n                                    </Menu>\r\n                                </div>\r\n\r\n                        }))}\r\n\r\n                        options={{\r\n                            headerStyle: {\r\n                                //backgroundColor: \"#9F9FA5\",\r\n                                color: \"#000\",\r\n                            },\r\n                            searchFieldStyle: {\r\n                                width : '200%',\r\n                                margingLeft: '250px',\r\n                            },\r\n                            filtering: false,\r\n                            exportButton: false,\r\n                            searchFieldAlignment: 'left',\r\n                            pageSizeOptions:[10,20,100],\r\n                            pageSize:10,\r\n                            debounceInterval: 400\r\n                        }}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Enrollment = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrer:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [carePoints, setCarePoints] = useState([]);\r\n    const [sourceReferral, setSourceReferral] = useState([]);\r\n    const [hivStatus, setHivStatus] = useState([]);\r\n    const [enrollSetting, setEnrollSetting] = useState([]);\r\n    const [tbStatus, setTbStatus] = useState([]);\r\n    const [kP, setKP] = useState([]);\r\n    const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n    //set ro show the facility name field if is transfer in \r\n    const [transferIn, setTransferIn] = useState(false);\r\n    // display the OVC number if patient is enrolled into OVC \r\n    const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n\r\n    useEffect(() => {         \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n      }, []);\r\n\r\n      //Get list of CareEntryPoint\r\n      const CareEntryPoint =()=>{\r\n             axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });\r\n            \r\n      }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n    }\r\n     //Get list of HIV STATUS ENROLLMENT\r\n     const HivStatus =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setHivStatus(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n      //Get list of HIV STATUS ENROLLMENT\r\n      const EnrollmentSetting =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setEnrollSetting(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n      //Get list of HIV STATUS ENROLLMENT\r\n      const TBStatus =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setTbStatus(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n      //Get list of KP\r\n      const KP =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/KP_TYPE`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setKP(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n      //Get list of KP\r\n      const PregnancyStatus =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPregnancyStatus(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n    const handleInputChange = e => {\r\n        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n\r\n    }\r\n          \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }  \r\n    \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.personId= patientObj.id\r\n          patientObj.enrolled=true\r\n          delete objValues['tableData'];\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}hiv/enrollment`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.patientObj.enrolled=true\r\n                  props.PatientCurrentStatus()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"xl\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Initial Clinic Evaluation \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"uniqueId\"\r\n                                            id=\"uniqueId\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.uniqueId}\r\n                                            required\r\n                                        />\r\n                                        {errors.uniqueId !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.uniqueId}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateOfRegistration\"\r\n                                            id=\"dateOfRegistration\"\r\n                                            value={objValues.regDate}\r\n                                            onChange={value1 =>\r\n                                                setObjValues({ ...objValues, dateOfRegistration: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.dateOfRegistration !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"entryPointId\">Care Entry Point</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"entryPointId\"\r\n                                        id=\"entryPointId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.entryPointId}\r\n                                        required\r\n                                    >\r\n                                    <option value=\"\"> </option>\r\n                      \r\n                                    {carePoints.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                    {errors.entryPointId !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.entryPointId}</span>\r\n                                        ) : \"\" }\r\n                                    </Input>\r\n                                    </FormGroup>\r\n                                    \r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                    {transferIn===true ? \r\n                                        (\r\n                                            <FormGroup>\r\n                                            <Label >Facility Name</Label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"facilityName\"\r\n                                                id=\"facilityName\"\r\n                                                onChange={handleInputChange}\r\n                                                value={objValues.facilityName}\r\n                                                required\r\n                                            />\r\n                                            </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >HIV Status at Registration</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"statusAtRegistrationId\"\r\n                                        id=\"statusAtRegistrationId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.statusAtRegistrationId}\r\n                                        required\r\n                                    >\r\n                                    <option value=\"\"> </option>\r\n                      \r\n                                    {hivStatus.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                    {errors.statusAtRegistrationId !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                        ) : \"\" }\r\n                                    </Input>\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of Confirmed HIV Test *</Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateConfirmedHiv\"\r\n                                            id=\"dateConfirmedHiv\"\r\n                                            value={objValues.regDate}\r\n                                            onChange={value1 =>\r\n                                                setObjValues({ ...objValues, dateConfirmedHiv: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                           \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Source of Referral</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"sourceOfReferrer\"\r\n                                            id=\"sourceOfReferrer\"\r\n                                            value={objValues.sourceOfReferrer}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                             <option value=\"\"> </option>\r\n                      \r\n                                                {sourceReferral.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                        {errors.sourceOfReferrer !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.sourceOfReferrer}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Enrollment Setting</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"enrollmentSettingId\"\r\n                                            id=\"enrollmentSettingId\"\r\n                                            value={objValues.enrollmentSettingId}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                             <option value=\"\"> </option>\r\n                      \r\n                                                {enrollSetting.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                        {errors.enrollmentSettingId !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                {\r\n                                    patientObj.gender !== 1 ?\r\n                                        (\r\n                                        <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            onChange = {handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            < option\r\n                                            value = \"\" > </option>\r\n\r\n                                            {\r\n                                                pregnancyStatus.map((value) => (\r\n                                                    < option\r\n                                                key = {value.id}\r\n                                                value = {value.id} >\r\n                                                    {value.display}\r\n                                                    </option>\r\n                                            ))\r\n                                            }\r\n                                        </Input>\r\n                                        \r\n                                            {\r\n                                                errors.pregnancy_status !== \"\" ? (\r\n                                                    < span className = {classes.error} > {errors.pregnancy_status} </span>\r\n                                                    \r\n                                            ) :\r\n                                                \"\"\r\n                                            }\r\n                                      </FormGroup>  \r\n                                    </div>\r\n                                )\r\n                                :\r\n                                    \"\"\r\n                                }\r\n                                {\r\n                                    patientObj.gender !== 1 ?\r\n                                        (\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setObjValues({ ...objValues, dateOfLpm: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n\r\n                                                max={new Date()}\r\n                                        />\r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                    \"\"\r\n                                }\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >TB Status</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"tbStatusId\"\r\n                                            id=\"tbStatusId\"\r\n                                            value={objValues.tbStatusId}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                             <option value=\"\"> </option>\r\n                      \r\n                                                {tbStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                        {errors.tbStatusId !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >KP Target Group</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"targetGroupId\"\r\n                                            id=\"targetGroupId\"\r\n                                            value={objValues.targetGroupId}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                             <option value=\"\"> </option>\r\n                      \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                        {errors.targetGroupId !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        \r\n                                        <div className=\"form-check custom-checkbox ml-1 \">\r\n                                            <input\r\n                                            type=\"checkbox\"\r\n                                            className=\"form-check-input\"\r\n                                            \r\n                                            name=\"ovc_enrolled\"\r\n                                            id=\"ovc_enrolled\"\r\n                                            onChange={handleCheckBox}\r\n                                            //value={values.ovc_enrolled}\r\n                                            />\r\n                                            <label\r\n                                            className=\"form-check-label\"\r\n                                            htmlFor=\"basic_checkbox_1\"\r\n                                            >\r\n                                            Enrolled into OVC?\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        {ovcEnrolled===true ? \r\n                                            (\r\n                                            <FormGroup>\r\n                                            <Label >OVC Number</Label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"ovcNumber\"\r\n                                                id=\"ovcNumber\"\r\n                                                onChange={handleInputChange}\r\n                                                value={objValues.ovcNumber}\r\n                                                required\r\n                                            />\r\n                                            </FormGroup>\r\n                                            )\r\n                                            :\r\n                                            \"\"\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={props.toggle}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Enrollment;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst ArtCommencement = (props) => {\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [clinicalStage, setClinicalStage] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [tbStatus, setTbStatus] = useState([]);\r\n    const [regimenLine, setRegimenLine] = useState([]);\r\n    const [regimenType, setRegimenType] = useState([]);\r\n    const [pregancyStatus, setPregancyStatus] = useState([]);\r\n    const [functionalStatus, setFunctionalStatus] = useState([]);\r\n    const [objValues, setObjValues] = useState({\r\n                                                    personId:props.patientObj.id,\r\n                                                    visitDate: \"\",\r\n                                                    viralLoad: \"\",\r\n                                                    whoStagingId:\"\",\r\n                                                    clinicalStageId:\"\",\r\n                                                    cd4: \"\",\r\n                                                    cd4Percentage: \"\",\r\n                                                    isCommencement: true,\r\n                                                    functionalStatusId: \"\",\r\n                                                    clinicalNote: \"\",\r\n                                                    hivEnrollmentId: \"\",\r\n                                                    vitalSignDto:\"\",\r\n                                                    facilityId:1,\r\n                                                    regimenTypeId: 0,\r\n                                                    regimenId:0                                                   \r\n\r\n                                                });\r\n\r\n    const [vital, setVitalSignDto]= useState({\r\n                                                bodyWeight: \"\",\r\n                                                diastolic:\"\",\r\n                                                encounterDate: \"\",\r\n                                                facilityId: 1,\r\n                                                height: \"\",\r\n                                                personId: props.patientObj.id,\r\n                                                serviceTypeId: 1,\r\n                                                systolic:\"\" \r\n                                            })\r\n\r\n    useEffect(() => {\r\n        FunctionalStatus();\r\n        WhoStaging();\r\n        TBStatus();\r\n        PreganacyStatus();\r\n        RegimenLine();\r\n      }, []);\r\n      //Get list of WhoStaging\r\n      const WhoStaging =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setClinicalStage(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n        //Get list of RegimenLine\r\n        const RegimenLine =()=>{\r\n        axios\r\n           .get(`${baseUrl}hiv/regimen/types`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setRegimenLine(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n         //Get list of RegimenLine\r\n         const RegimenType =(id)=>{\r\n            axios\r\n               .get(`${baseUrl}hiv/regimen/types/${id}`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                   //console.log(response.data);\r\n                   setRegimenType(response.data);\r\n               })\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n            }\r\n        //Get list of PREGANACY_STATUS\r\n      const PreganacyStatus =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPregancyStatus(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n        ///GET LIST OF FUNCTIONAL%20_STATUS\r\n        async function FunctionalStatus() {\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setFunctionalStatus(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        // TB STATUS\r\n        const TBStatus =()=>{\r\n            axios\r\n               .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                   //console.log(response.data);\r\n                   setTbStatus(response.data);\r\n               })\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n         }\r\n\r\n        const handleInputChange = e => {\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n        const handleInputChangeVitalSignDto = e => {            \r\n            setVitalSignDto ({...vital,  [e.target.name]: e.target.value});\r\n        }\r\n        const handleSelecteRegimen = e => { \r\n            let regimenID=  e.target.value\r\n            setObjValues ({...objValues, regimenId:regimenID});\r\n            RegimenType(regimenID)           \r\n            //setVitalSignDto ({...vital,  [e.target.name]: e.target.value});\r\n        }\r\n        \r\n        const handleInputChange2 = e => {\r\n        let temp = { ...errors }\r\n        if(e.target.name === objValues.bodyWeight && e.target.value >3){\r\n            temp.name = objValues.bodyWeight ? \"\" : \"Body Weight cannot be greater than 200.\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {                  \r\n            e.preventDefault();                     \r\n            objValues.personId = props.patientObj.id\r\n            vital.encounterDate = objValues.visitDate\r\n            vital.personId=props.patientObj.id\r\n            objValues.vitalSignDto= vital\r\n            objValues.hivEnrollmentId= props.patientObj.enrollment.id\r\n            objValues.clinicalStageId = objValues.whoStagingId \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}hiv/art/commencement/`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.PatientCurrentStatus()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  if(error.apierror){\r\n                    toast.error(error.apierror.message);\r\n                  }else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n                  \r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"xl\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 ART Commencement \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"artDate\">ART Start Date  * </Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"visitDate\"\r\n                                            id=\"visitDate\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.visitDate}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"cd4\">CD4 at start of ART </Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"cd4\"\r\n                                            id=\"cd4\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.cd4}\r\n                                            required\r\n                                        />\r\n                                        \r\n                                        </FormGroup>\r\n                                    </div>\r\n                              \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"cd4Percentage\">CD4%</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"cd4Percentage\"\r\n                                        id=\"cd4Percentage\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.cd4Percentage}\r\n                                        required\r\n                                    />\r\n                                    \r\n                                    </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label >Original Regimen Line  </Label>\r\n                                    <Input\r\n                                            type=\"select\"\r\n                                            name=\"regimenId\"\r\n                                            id=\"regimenId\"\r\n                                            //value={objValues.regimenId}\r\n                                            onChange={handleSelecteRegimen}\r\n                                            required\r\n                                            >\r\n                                             <option value=\"Select\"> </option>\r\n                      \r\n                                                {regimenLine.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.description}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label >Original Regimen</Label>\r\n                                    <Input\r\n                                            type=\"select\"\r\n                                            name=\"regimenTypeId\"\r\n                                            id=\"regimenTypeId\"\r\n                                            value={objValues.regimenTypeId}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                             <option value=\"Select\"> </option>\r\n                      \r\n                                                {regimenType.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.description}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                    {/* {errors.last_name !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.last_name}</span>\r\n                                        ) : \"\" } */}\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Viral Load at Start of ART *</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"viralLoad\"\r\n                                            id=\"viralLoad\"\r\n                                            onChange={handleInputChange2}\r\n                                            value={objValues.viralLoad}\r\n                                            required\r\n                                        />\r\n                                            {values.viralLoad ===\"Invalid date\" ? (\r\n                                                <span className={classes.error}>{\"This field is required\"}</span>\r\n                                            ) : \"\" }\r\n                                            {errors.viralLoad !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.viralLoad}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >WHO Staging</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"whoStagingId\"\r\n                                            id=\"whoStagingId\"\r\n                                            value={objValues.whoStagingId}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                             <option value=\"Select\"> </option>\r\n                      \r\n                                                {clinicalStage.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                        \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Functional Status</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"functionalStatusId\"\r\n                                            id=\"functionalStatusId\"\r\n                                            value={objValues.functionalStatusId}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                             <option value=\"Select\"> </option>\r\n                      \r\n                                                {functionalStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >TB Status</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"tbStatusId\"\r\n                                            id=\"tbStatusId\"\r\n                                            value={objValues.tbStatusId}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                             <option value=\"Select\"> </option>\r\n                      \r\n                                                {tbStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Body Weight</Label>\r\n                                        <InputGroup> \r\n                                            <Input \r\n                                                type=\"number\"\r\n                                                name=\"bodyWeight\"\r\n                                                id=\"bodyWeight\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.bodyWeight} \r\n                                            />\r\n                                           \r\n                                            <InputGroupText>\r\n                                               kg\r\n                                            </InputGroupText>\r\n                                        </InputGroup>\r\n                                        {vital.bodyWeight > 200 ? (\r\n                                                <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                                            ) : \"\" \r\n                                        }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Height</Label>\r\n                                        <InputGroup> \r\n                                            <Input \r\n                                                type=\"number\"\r\n                                                name=\"height\"\r\n                                                id=\"height\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.height} \r\n                                            />\r\n                                            <InputGroupText>\r\n                                               m\r\n                                            </InputGroupText>\r\n                                        </InputGroup>\r\n                                        {vital.height > 3 ? (\r\n                                            <span className={classes.error}>{\"Height cannot be greater than 3.\"}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Blood Pressure</Label>\r\n                                        <InputGroup> \r\n                                            <Input \r\n                                                type=\"number\"\r\n                                                name=\"systolic\"\r\n                                                id=\"systolic\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.systolic} \r\n                                            />\r\n                                            <InputGroupText>\r\n                                                systolic(mmHg)\r\n                                            </InputGroupText>\r\n                                        </InputGroup>\r\n                                        {vital.systolic > 200 ? (\r\n                                                <span className={classes.error}>{\"Blood Pressure cannot be greater than 200.\"}</span>\r\n                                            ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Blood Pressure</Label>\r\n                                        \r\n                                        <InputGroup> \r\n                                            <Input \r\n                                                type=\"text\"\r\n                                                name=\"diastolic\"\r\n                                                id=\"diastolic\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.diastolic} \r\n                                            />\r\n                                            <InputGroupText>\r\n                                                diastolic(mmHg)\r\n                                            </InputGroupText>\r\n                                        </InputGroup>\r\n                                        {vital.diastolic > 200 ? (\r\n                                            <span className={classes.error}>{\"Blood Pressure cannot be greater than 200.\"}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Pregnancy Status</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.address}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"Select\"> </option>\r\n                      \r\n                                            {pregancyStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >LMP</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"LMPDate\"\r\n                                            id=\"LMPDate\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-8\">\r\n                                        <FormGroup>\r\n                                        <Label >Clinical Notes</Label>\r\n                                        <Input\r\n                                            type=\"textarea\"\r\n                                            name=\"clinicalNote\"\r\n                                            rows=\"40\" cols=\"50\"\r\n                                            id=\"clinicalNote\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.clinicalNote}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArtCommencement;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport Enrollment from './../Enrollment/EnrollmentForm';\r\nimport ArtCommencement from './../ArtCommencement/ArtCommencement';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObjs = props.patientObj ? props.patientObj : {}\r\n  const [patientObj, setpatientObj] = useState(patientObjs)\r\n  const [modal, setModal] = useState(false);\r\n  const [hivStatus, setHivStatus] = useState();\r\n  const toggle = () => setModal(!modal);\r\n  const [artModal, setArtModal] = useState(false);\r\n  const Arttoggle = () => setArtModal(!artModal);\r\n  useEffect(() => {\r\n    PatientCurrentStatus()\r\n  }, []);\r\n    ///GET LIST OF Patients\r\n    async function PatientCurrentStatus() {\r\n        axios\r\n            .get(`${baseUrl}hiv/status/patient-current/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n\r\n              setHivStatus(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n    const loadEnrollment =(row)=> {\r\n      setpatientObj({...patientObj, ...row});\r\n          setModal(!modal)\r\n  }\r\n  const loadArt =(row)=> {\r\n      setpatientObj({...patientObj, ...row});\r\n          setArtModal(!artModal)\r\n  }\r\n  \r\n  const CurrentStatus = ()=>{\r\n\r\n        return (  <Label color=\"blue\" size=\"mini\">{hivStatus}</Label>);\r\n}\r\nconst getHospitalNumber = (identifier) => {     \r\n  const identifiers = identifier;\r\n  const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n  return hospitalNumber ? hospitalNumber.value : '';\r\n};\r\nconst getPhoneNumber = (identifier) => {     \r\n  const identifiers = identifier;\r\n  const phoneNumber = identifiers.contactPoint.find(obj => obj.type == 'phone');       \r\n  return phoneNumber ? phoneNumber.value : '';\r\n};\r\nconst getAddress = (identifier) => {     \r\n  const identifiers = identifier;\r\n  const address = identifiers.address.find(obj => obj.city);      \r\n  return address ? address.city : '';\r\n};\r\n\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel defaultExpanded>\r\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                \r\n                <Row>\r\n                    \r\n                    <Col md={11}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                        <b style={{fontSize: \"25px\"}}>\r\n                        {patientObj.firstName + \" \" + patientObj.surname }\r\n                        </b>\r\n                        \r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b>{getHospitalNumber(patientObj.identifier) }</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b>{patientObj.dateOfBirth }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b>{calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b>{patientObj.gender.display }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b>{getPhoneNumber(patientObj.contactPoint)}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b>{getAddress(patientObj.address)} </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                    {/* {HIVStatus(patientObj)} */}\r\n                    {/* <span>\r\n                        {\" \"}\r\n                        <b>Status : </b>\r\n                      </span> */}\r\n                    </Col>\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n            \r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails className={classes.details}>\r\n                \r\n                    <Button\r\n                      color='red'\r\n                      content='BloodType'\r\n                      //icon='heart'\r\n                      label={{ basic: true, color: 'red', pointing: 'left', content: 'AB+' }}\r\n                    />\r\n                                  \r\n                    <Button\r\n                        basic\r\n                        color='blue'\r\n                        content='Height'\r\n                        icon='fork'\r\n                        label={{\r\n                            as: 'a',\r\n                            basic: true,\r\n                            color: 'blue',\r\n                            pointing: 'left',\r\n                            content: '74.5 in',\r\n                        }}\r\n                      />              \r\n                      <Button\r\n                        basic\r\n                        color='blue'\r\n                        content='Weight'\r\n                        icon='fork'\r\n                        label={{\r\n                            as: 'a',\r\n                            basic: true,\r\n                            color: 'blue',\r\n                            pointing: 'left',\r\n                            content: '74.5 in',\r\n                        }}\r\n                        />\r\n                               \r\n                <div className={classes.column}>\r\n                  <Button primary  floated='right' onClick={() => loadEnrollment(patientObj)}>Initial Clinic Evaluation</Button>\r\n                </div>\r\n               {patientObj.commenced!==true && (\r\n                <div className={classes.column} style={{paddingLeft:\"20px\"}}>\r\n                {\" \"}<Button secondary onClick={() => loadArt(patientObj)} >ART Commencement </Button>\r\n                </div>\r\n                )\r\n               }\r\n                    \r\n                {/* <div className={classes.column}>\r\n                   \r\n                    <div>\r\n                     \r\n                    </div>\r\n                    <div>\r\n                      \r\n                    </div>    \r\n                   \r\n                </div> */}\r\n                </ExpansionPanelDetails>\r\n                <Divider />\r\n                <ExpansionPanelActions expandIcon={<ExpandMoreIcon />}>\r\n                \r\n                </ExpansionPanelActions>\r\n            </ExpansionPanel>\r\n      <Enrollment toggle={toggle} showModal={modal} patientObj={patientObj} PatientCurrentStatus={PatientCurrentStatus}/>      \r\n      <ArtCommencement  toggle={Arttoggle} showModal={artModal} patientObj={patientObj} PatientCurrentStatus={PatientCurrentStatus}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Enrollment = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [transferStatus, setTransferStatus] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({patient_id: \"\",current_status:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n \r\n        const handleInputChange = e => {\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.patient_id= patientObj.id\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/patientstatus`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Transfer successful\");\r\n                  props.toggle()\r\n                  props.loadPatients()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Enhanced Adherence Counselling \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Date of 1st EAC Session </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Date of 1st EAC Completion </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                 \r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                 >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                                </MatButton>\r\n                          \r\n                                <MatButton\r\n                                    variant=\"contained\"\r\n                                    className={classes.button}\r\n                                    startIcon={<CancelIcon />}\r\n                                    onClick={props.toggle}\r\n                                >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Enrollment;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ArtCommencement = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [transferStatus, setTransferStatus] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({patient_id: \"\",current_status:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/patientstatus/current-status-codeset`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setTransferStatus(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.patient_id= patientObj.id\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/patientstatus`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Transfer successful\");\r\n                  props.toggle()\r\n                  props.loadPatients()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"xl\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Differentiated Care - <b>{patientObj.firstname + \" \" + patientObj.surname }</b>\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Date of Devolvement  * </Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"participant_id\"\r\n                                            id=\"participant_id\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.participant_id}\r\n                                            required\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Type of DMOC </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                              \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"first_name\">Type of Scripting</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"first_name\"\r\n                                        id=\"first_name\"\r\n                                        onChange={handleInputChange}\r\n                                        value={values.first_name}\r\n                                        required\r\n                                    />\r\n                                    {errors.first_name !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.first_name}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label >Viral Load Assessment done </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"mid_name\"\r\n                                        id=\"mid_name\"\r\n                                        onChange={handleInputChange}\r\n                                        value={values.mid_name}\r\n                                        required\r\n                                    />\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label >CD4 Count Assessment Done</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"last_name\"\r\n                                        id=\"last_name\"\r\n                                        onChange={handleInputChange}\r\n                                        value={values.last_name}\r\n                                        required\r\n                                    />\r\n                                    {errors.last_name !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.last_name}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Current Viral Load</Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                            {values.dob ===\"Invalid date\" ? (\r\n                                                <span className={classes.error}>{\"This field is required\"}</span>\r\n                                            ) : \"\" }\r\n                                            {errors.dob !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dob}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of Viral Load</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"gender\"\r\n                                            id=\"gender\"\r\n                                            value={values.gender}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\"> Please Select</option>\r\n                                            <option value=\"1\"> Male</option>\r\n                                            <option value=\"2\"> Female</option>\r\n                                        </Input>\r\n                                        {errors.gender !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.gender}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Current CD4</Label>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            name=\"phone\"\r\n                                            id=\"phone\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.phone}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of CD4</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Current Clinical Stage</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of Clinical Stage</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >ARV Regimen</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of Next ARV Refill</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of next Clinic/Lab re-eveluation</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        {/* <FormGroup>\r\n                                        <Label >LMP</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup> */}\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-12\">\r\n                                        <FormGroup>\r\n                                        <Input\r\n                                            type=\"checkbox\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                            className=\"ms-3\"\r\n                                        />\r\n                                        <Label >Click to fill form if patient discontinued DEMOC</Label>\r\n                                        \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Discontinued</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Reason for discontinued</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"address\"\r\n                                            id=\"address\"\r\n                                            onChange={handleInputChange}\r\n                                            value={values.address}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArtCommencement;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ClientStatusUpdate = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [transferStatus, setTransferStatus] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({patient_id: \"\",current_status:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n \r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.patient_id= patientObj.id\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/patientstatus`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Transfer successful\");\r\n                  props.toggle()\r\n                  props.loadPatients()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n            <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n            <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Client Status Update \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n             </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >New Status</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"gender\"\r\n                                            id=\"gender\"\r\n                                            value={values.gender}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\"> Please Select</option>\r\n                                            <option value=\"1\"> Male</option>\r\n                                            <option value=\"2\"> Female</option>\r\n                                        </Input>\r\n                                        {errors.gender !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.gender}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Date of New Status </Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Tracking Outcome</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"gender\"\r\n                                            id=\"gender\"\r\n                                            value={values.gender}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\"> Please Select</option>\r\n                                            <option value=\"1\"> Male</option>\r\n                                            <option value=\"2\"> Female</option>\r\n                                        </Input>\r\n                                        {errors.gender !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.gender}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"participant_id\">Date of Tracked</Label>\r\n                                        <DateTimePicker\r\n                                            time={false}\r\n                                            name=\"dateRegistration\"\r\n                                            id=\"dateRegistration\"\r\n                                            value={values.regDate}\r\n                                            onChange={value1 =>\r\n                                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                            }\r\n                                            \r\n                                                max={new Date()}\r\n                                        />\r\n                                        {errors.participant_id !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.participant_id}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                 \r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                 >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                                </MatButton>\r\n                          \r\n                                <MatButton\r\n                                    variant=\"contained\"\r\n                                    className={classes.button}\r\n                                    startIcon={<CancelIcon />}\r\n                                    onClick={props.toggle}\r\n                                >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                            </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClientStatusUpdate;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Row } from \"react-bootstrap\";\r\nimport {  Modal, Button, Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, InputGroupText, InputGroup, Col , CardBody, Card } from \"reactstrap\";\r\nimport { Tab, Grid,} from 'semantic-ui-react'\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport axios from \"axios\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Select from \"react-select\";\r\n\r\nconst useStyles = makeStyles(theme => ({ \r\n    button: {\r\n      margin: theme.spacing(1)\r\n    },\r\n    error: {\r\n      color: \"#f85032\",\r\n      fontSize: \"11px\",\r\n  },\r\n  success: {\r\n      color: \"#4BB543 \",\r\n      fontSize: \"11px\",\r\n  },\r\n}))\r\nlet adherenceLevelObj= []\r\n\r\nconst ClinicFollowUp = (props) => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [functionalStatus, setFunctionalStatus] = useState([]);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  const [adrObj, setAdrObj] = useState({adr:\"\", adrOnsetDate:\"\"});\r\n  const [adrList, setAdrList] = useState([]);\r\n  const [infection, setInfection] = useState({illnessInfection:\"\", ondateInfection:\"\"});\r\n  const [infectionList, setInfectionList] = useState([]);\r\n  const [TBForms, setTBForms] = useState(false)\r\n  const [regimenDrugs, setRegimenDrug] = useState([])\r\n  const [objValues, setObjValues] = useState({\r\n                                                adherenceLevel: \"\",\r\n                                                adheres: {},\r\n                                                adrScreened: \"\",\r\n                                                adverseDrugReactions: {},\r\n                                                artStatusId: 0,\r\n                                                cd4: \"\",\r\n                                                cd4Percentage: 0,\r\n                                                clinicalNote: \"\",\r\n                                                clinicalStageId: 0,\r\n                                                facilityId: 0,\r\n                                                functionalStatusId: 0,\r\n                                                hivEnrollmentId: 0,\r\n                                                nextAppointment: \"\",\r\n                                                lmpDate:\"\",\r\n                                                oiScreened: \"\",\r\n                                                opportunisticInfections: {},\r\n                                                personId: 0,\r\n                                                stiIds: \"\",\r\n                                                stiTreated: \"\",\r\n                                                uuid: \"\",\r\n                                                visitDate: \"\",\r\n                                                \r\n                                                whoStagingId: 0\r\n                                              });\r\n  const [vital, setVitalSignDto]= useState({\r\n                                            bodyWeight: \"\",\r\n                                            diastolic:\"\",\r\n                                            encounterDate: \"\",\r\n                                            facilityId: 1,\r\n                                            height: \"\",\r\n                                            personId: props.patientObj.id,\r\n                                            serviceTypeId: 1,\r\n                                            systolic:\"\" \r\n                                            })\r\n  useEffect(() => {\r\n    FunctionalStatus();\r\n    WhoStaging();\r\n    AdherenceLevel();\r\n    TBStatus();\r\n    PrepSideEffect();\r\n  }, []);\r\n\r\n    //Get list of WhoStaging\r\n    const WhoStaging =()=>{\r\n    axios\r\n       .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n           //console.log(response.data);\r\n           setClinicalStage(response.data);\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n    }\r\n     //Get list of WhoStaging\r\n    const PrepSideEffect =()=>{\r\n    axios\r\n       .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n           //console.log(response.data);\r\n           setPrepSideEffect(response.data);\r\n           adherenceLevelObj=response.data\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n    }\r\n   ///GET LIST OF FUNCTIONAL%20_STATUS\r\n   // TB STATUS\r\n    const TBStatus =()=>{\r\n    axios\r\n       .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n           //console.log(response.data);\r\n           setTbStatus(response.data);\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n    }\r\n\r\n   async function FunctionalStatus() {\r\n    axios\r\n        .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setFunctionalStatus(response.data);\r\n            //setValues(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        });        \r\n    }\r\n    ///Level of Adherence\r\n   async function AdherenceLevel () {\r\n    axios\r\n        .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {           \r\n          setAdherenceLevel(response.data);\r\n          \r\n        })\r\n        .catch((error) => {    \r\n        });        \r\n    }\r\n    //Get li\r\n    const handleInputChange = e => {\r\n    setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    if(e.target.name ===\"whoStagingId\" ){\r\n      if(e.target.value===\"NO\"){\r\n          setTBForms(true)\r\n      }else{\r\n          setTBForms(false)\r\n      }\r\n    }\r\n  }\r\n  const handleInputChangeVitalSignDto = e => {            \r\n    setVitalSignDto ({...vital,  [e.target.name]: e.target.value});\r\n  }\r\n  const handAdrleInputChange = e => {\r\n    setAdrObj ({...adrObj,  [e.target.name]: e.target.value});\r\n  }\r\n  const handleInfectionInputChange = e => {\r\n    setInfection ({...infection,  [e.target.name]: e.target.value});\r\n  }\r\n  const addADR = e => { \r\n    setAdrList([...adrList, adrObj])\r\n  }\r\n  /* Remove ADR  function **/\r\n  const removeRelativeLocation = index => {       \r\n      adrList.splice(index, 1);\r\n      setAdrList([...adrList]);\r\n     \r\n  };\r\n  const addInfection = e => { \r\n    setInfectionList([...infectionList, infection])\r\n  }\r\n  /* Remove ADR  function **/\r\n  const removeInfection = index => {       \r\n  infectionList.splice(index, 1);\r\n  setInfectionList([...infectionList]);\r\n     \r\n  };\r\n\r\n  const panes = [\r\n  { menuItem: 'VISIT', render: () => \r\n    <Tab.Pane>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"form-group mb-3 col-md-6\">\r\n            <FormGroup>\r\n            <Label >Date of Visit </Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"encounterDate\"\r\n                id=\"encounterDate\"\r\n                value={vital.encounterDate}\r\n                onChange={handleInputChangeVitalSignDto}\r\n                required\r\n                > \r\n            </Input>\r\n          \r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-6\"></div>\r\n        <div className=\"form-group mb-3 col-md-6\">\r\n            <FormGroup>\r\n            <Label >Body Weight</Label>\r\n            \r\n            <InputGroup>\r\n            <InputGroupText>\r\n                kg\r\n            </InputGroupText> \r\n                <Input \r\n                    type=\"number\"\r\n                    name=\"bodyWeight\"\r\n                    id=\"bodyWeight\"\r\n                    onChange={handleInputChangeVitalSignDto}\r\n                    value={vital.bodyWeight} \r\n                />   \r\n            </InputGroup>\r\n            {vital.bodyWeight > 200 ? (\r\n                    <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        \r\n        <div className=\"form-group mb-3 col-md-6\">\r\n            <FormGroup>\r\n            <Label >Height</Label>\r\n            <InputGroup>\r\n            <InputGroupText>\r\n                m\r\n            </InputGroupText> \r\n                <Input \r\n                    type=\"number\"\r\n                    name=\"height\"\r\n                    id=\"height\"\r\n                    onChange={handleInputChangeVitalSignDto}\r\n                    value={vital.height} \r\n                />\r\n                \r\n            </InputGroup>\r\n            {vital.height > 3 ? (\r\n                    <span className={classes.error}>{\"Height cannot be greater than 3.\"}</span>\r\n                ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-6\">\r\n            <FormGroup>\r\n            <Label >Blood Pressure</Label>\r\n            <InputGroup> \r\n            <InputGroupText>\r\n                systolic(mmHg)\r\n            </InputGroupText>\r\n                <Input \r\n                    type=\"number\"\r\n                    name=\"systolic\"\r\n                    id=\"systolic\"\r\n                    onChange={handleInputChangeVitalSignDto}\r\n                    value={vital.systolic} \r\n                />\r\n                \r\n            </InputGroup>\r\n            {vital.systolic > 200 ? (\r\n                    <span className={classes.error}>{\"Blood Pressure cannot be greater than 200.\"}</span>\r\n                ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-6\">\r\n            <FormGroup>\r\n            <Label >Blood Pressure</Label>\r\n            \r\n            <InputGroup> \r\n            <InputGroupText>\r\n                  diastolic(mmHg)\r\n              </InputGroupText>\r\n                <Input \r\n                    type=\"text\"\r\n                    name=\"diastolic\"\r\n                    id=\"diastolic\"\r\n                    onChange={handleInputChangeVitalSignDto}\r\n                    value={vital.diastolic} \r\n                />\r\n                \r\n            </InputGroup>\r\n            {vital.diastolic > 200 ? (\r\n                    <span className={classes.error}>{\"Blood Pressure cannot be greater than 200.\"}</span>\r\n                ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n    \r\n    </div>\r\n    </Tab.Pane> \r\n  },\r\n  { menuItem: 'CONSULTATION', render: () => \r\n    <Tab.Pane>\r\n\r\n        <div className=\"row\">\r\n          \r\n          <div className=\"form-group mb-3 col-md-6\">\r\n          <FormGroup>\r\n              <Label >WHO Staging</Label>\r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"whoStagingId\"\r\n                  id=\"whoStagingId\"\r\n                  value={objValues.whoStagingId}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                      {clinicalStage.map((value) => (\r\n                          <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                          </option>\r\n                      ))}\r\n              </Input>\r\n              \r\n            </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-6\">\r\n          <FormGroup>\r\n            <Label >Functional Status</Label>\r\n            <Input\r\n                type=\"select\"\r\n                name=\"functionalStatusId\"\r\n                id=\"functionalStatusId\"\r\n                value={objValues.functionalStatusId}\r\n                onChange={handleInputChange}\r\n                required\r\n                >\r\n                  <option value=\"\"> </option>\r\n\r\n                    {functionalStatus.map((value) => (\r\n                        <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                        </option>\r\n                    ))}\r\n            </Input>\r\n          </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-6\">\r\n          <FormGroup>\r\n            <Label >Level of Adherence</Label>\r\n            <Input\r\n                type=\"select\"\r\n                name=\"adherenceLevel\"\r\n                id=\"adherenceLevel\"\r\n                value={objValues.adherenceLevel}\r\n                onChange={handleInputChange}\r\n                required\r\n                >\r\n                  <option value=\"\"> </option>\r\n\r\n                    {adherenceLevel.map((value) => (\r\n                        <option key={value.id} value={value.id}>\r\n                            {value.display}\r\n                        </option>\r\n                    ))}\r\n            </Input>\r\n          </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-6\"></div>\r\n          <div className=\"form-group mb-3 col-md-8\">\r\n              <FormGroup>\r\n              <Label >Clinical Notes</Label>\r\n              <Input\r\n                  type=\"textarea\"\r\n                  name=\"clinicalNote\"\r\n                  rows=\"40\" cols=\"50\"\r\n                  id=\"clinicalNote\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.clinicalNote}\r\n                  required\r\n              />\r\n              </FormGroup>\r\n          </div>\r\n        </div>\r\n      \r\n    </Tab.Pane> \r\n  },\r\n  { menuItem: 'TB SCREENING', render: () => \r\n    <Tab.Pane>\r\n\r\n        <div className=\"row\">\r\n          \r\n          <div className=\"form-group mb-3 col-md-6\">\r\n          <FormGroup>\r\n              <Label >Patient on Anti TB Drugs?</Label>\r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"whoStagingId\"\r\n                  id=\"whoStagingId\"\r\n                  value={objValues.whoStagingId}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n                    <option value=\"YES\"> YES</option>\r\n                    <option value=\"NO\">NO </option>\r\n\r\n              </Input>\r\n              \r\n            </FormGroup>\r\n          </div>\r\n          {TBForms===true ? (\r\n            <>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label >Patient Currently on IPT?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"functionalStatusId\"\r\n                    id=\"functionalStatusId\"\r\n                    value={objValues.functionalStatusId}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                        <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Couching?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Night Sweat?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Fever</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Countact with TB Case?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Lethergy</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                    <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={objValues.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> </option>\r\n\r\n                        {tbStatus.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n          </>\r\n          )\r\n          :\r\n          \"\"\r\n          }\r\n        </div>\r\n      \r\n    </Tab.Pane> \r\n  },\r\n  { menuItem: 'OPPORTUNISTIC INFECTION', render: () => \r\n    <Tab.Pane>\r\n      <div className=\"row\">\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n            <FormGroup>\r\n            <Label >Onset Date </Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"ondateInfection\"\r\n                id=\"ondateInfection\"\r\n                value={infection.ondateInfection}\r\n                onChange={handleInfectionInputChange}\r\n                required\r\n                > \r\n            </Input>\r\n          \r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Illness</Label>\r\n            <Input\r\n                type=\"text\"\r\n                name=\"illnessInfection\"\r\n                id=\"illnessInfection\"\r\n                value={infection.illnessInfection}\r\n                onChange={handleInfectionInputChange}\r\n                required\r\n                > \r\n            </Input>\r\n          \r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-2\">\r\n        <LabelSui as='a' color='black'  onClick={addInfection}  size='tiny' style={{ marginTop:35}}>\r\n            <Icon name='plus' /> Add\r\n        </LabelSui>\r\n        </div>\r\n        {infectionList.length >0 \r\n          ?\r\n            <List>\r\n            <Table  striped responsive>\r\n                  <thead >\r\n                      <tr>\r\n                          <th>Illness</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {infectionList.map((relative, index) => (\r\n\r\n                  <InfectionList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeInfection={removeInfection}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n                </List>\r\n                :\r\n                \"\"\r\n            } \r\n    </div>\r\n\r\n    </Tab.Pane> \r\n  },\r\n  { menuItem: 'ADR', render: () => \r\n    <Tab.Pane>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n            <FormGroup>\r\n            <Label >ADR </Label>\r\n            <Input\r\n                type=\"select\"\r\n                name=\"adr\"\r\n                id=\"adr\"\r\n                value={adrObj.adr}\r\n                onChange={handAdrleInputChange}\r\n                required\r\n                >\r\n                  <option value=\"\"> </option>\r\n\r\n                    {prepSideEffect.map((value) => (\r\n                        <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                        </option>\r\n                    ))}\r\n            </Input>\r\n          \r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Onset Date</Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"adrOnsetDate\"\r\n                id=\"adrOnsetDate\"\r\n                value={adrObj.adrOnsetDate}\r\n                onChange={handAdrleInputChange}\r\n                required\r\n                > \r\n            </Input>\r\n          \r\n            </FormGroup>\r\n        </div>\r\n        \r\n        <div className=\"form-group mb-3 col-md-2\">\r\n        <LabelSui as='a' color='black'  onClick={addADR}  size='tiny' style={{ marginTop:35}}>\r\n            <Icon name='plus' /> Add\r\n        </LabelSui>\r\n        </div>\r\n\r\n        {adrList.length >0 \r\n          ?\r\n            <List>\r\n            <Table  striped responsive>\r\n                  <thead >\r\n                      <tr>\r\n                          <th>ADR</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {adrList.map((relative, index) => (\r\n\r\n                  <RelativeList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeRelativeLocation={removeRelativeLocation}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n                </List>\r\n                :\r\n                \"\"\r\n            }       \r\n              </div>\r\n\r\n    </Tab.Pane> \r\n  },\r\n  { menuItem: 'LABORATORY', render: () => \r\n  <Tab.Pane>\r\n    <div className=\"row\">\r\n    <Row>\r\n            <Col md={6} className=\"form-group mb-3\">\r\n                <FormGroup>\r\n                    <Label for=\"encounterDate\">Encounter Date & Time*</Label>\r\n                    <Input\r\n                      type=\"datetime-local\"\r\n                    />\r\n                </FormGroup>\r\n            </Col>\r\n            <Col md={6} className=\"form-group mb-3\">\r\n                <FormGroup>\r\n                    <Label for=\"testGroup\">Select Test Order*</Label>\r\n                    <Select\r\n                        required\r\n                        isMulti={false}\r\n                      />\r\n                </FormGroup>\r\n            </Col>\r\n            <Col md={6} className=\"form-group mb-3\">\r\n                <FormGroup>\r\n                    <Label for=\"testGroup\">Select Test*</Label>\r\n\r\n                    <Select\r\n                        required\r\n                        isMulti={false}\r\n                      />\r\n                </FormGroup>\r\n            </Col>\r\n            <Col md={6} className=\"form-group mb-3\">\r\n                <FormGroup>\r\n                    <Label for=\"priority\">Select Priority*</Label>\r\n                    <Select\r\n                        required\r\n                        isMulti={false}\r\n                      />\r\n                </FormGroup>\r\n            </Col>\r\n\r\n                <Col md={6} className=\"form-group mb-3\">\r\n                    <FormGroup>\r\n                        <Label for=\"vlIndication\">VL Indication*</Label>\r\n                        <Select\r\n                        required\r\n                        isMulti={false}\r\n                      />\r\n                    </FormGroup>\r\n                </Col>\r\n\r\n            <Col md={6} className=\"form-group mb-3\">\r\n                <FormGroup>\r\n                    <Label for=\"sampleOrderedBy\">Test Ordered By*</Label>\r\n                    <Input\r\n                        required\r\n                        name=\"sampleOrderedBy\"\r\n                        id=\"sampleOrderedBy\"\r\n                        \r\n                    />\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Col md={12}>                  \r\n                  <LabelSui as='a' color='black'  className=\"float-end\" onClick={addInfection}  size='tiny' style={{ marginTop:20}}>\r\n                    <Icon name='plus' /> Add Test\r\n                </LabelSui>\r\n                  \r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  </Tab.Pane> \r\n},\r\n{ menuItem: 'PHARMACY', render: () => \r\n  <Tab.Pane>\r\n      <div className=\"row\">\r\n                            \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"artDate\">Encounter Date * </Label>\r\n                                <Input\r\n                                    type=\"datetime-local\"\r\n                                    name=\"visitDate\"\r\n                                    id=\"visitDate\"\r\n                                    // onChange={handleInputChange}\r\n                                    // value={objValues.visitDate}\r\n                                    required\r\n                                />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\"></div>\r\n                        \r\n                            <div className=\"form-group mb-3 col-md-4\"></div>\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                                <FormGroup>\r\n                                <Label >Select Regimen *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"drugName\"\r\n                                    id=\"drugName\"\r\n                                    // value={objValues.drugName}\r\n                                    // onChange={handleSelectedRegimen}\r\n                                    \r\n                                    >\r\n                                    <option value=\"Select\"> </option>\r\n                                    {/*                 \r\n                                        {regimens.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.name}\r\n                                            </option>\r\n                                        ))} */}\r\n                                </Input>\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            {regimenDrugs.length >0 ? \r\n                                (\r\n                                    <>\r\n                                        <Card>\r\n                                        <CardBody>\r\n                                        <h4>Enter Drugs Information </h4>\r\n                                        <div className=\"row\">\r\n                                        {regimenDrugs.map((drugsInfo) => (\r\n                                            <>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Drug </Label>\r\n                                        <Input\r\n                                                type=\"text\"\r\n                                                // name={drugsInfo.name}\r\n                                                // id={drugsInfo.name}\r\n                                                // value={drugsInfo.name}\r\n                                                // onChange={handleInputChangeOtherDetails}\r\n                                                // required\r\n                                                ></Input>\r\n                                        </FormGroup>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >\tDosage Strength - {drugsInfo.abbrev}</Label>\r\n                                        <Input\r\n                                                type=\"number\"\r\n                                                // name={drugsInfo.code}\r\n                                                // id={drugsInfo.code}\r\n                                                // value=\"\"\r\n                                                // onChange={handleInputChangeOtherDetails}\r\n                                                required\r\n                                                >\r\n                                                \r\n                                            </Input>\r\n                                        \r\n                                        </FormGroup>\r\n                                        </div>\r\n                                    \r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                            <FormGroup>\r\n                                            <Label >Dosage Unit *</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                // name={drugsInfo.code}\r\n                                                // id={drugsInfo.code}\r\n                                                // onChange={handleInputChangeOtherDetails}\r\n                                                // value=\"\"\r\n                                                required\r\n                                            >\r\n                                                <option value=\"Select\"> </option>\r\n                        \r\n                                                    {/* {dosageUnit.map((value) => (\r\n                                                        <option key={value.id} value={value.id}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))} */}\r\n                                            </Input>\r\n                                            \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        </>\r\n                                        ))\r\n                                        }\r\n                                        </div>\r\n                                        </CardBody>\r\n                                        </Card>\r\n                                        <br/>\r\n                                    </>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Dose Frequency</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"dosageFrequency\"\r\n                                    id=\"dosageFrequency\"\r\n                                    // value={objValues.dosageFrequency}\r\n                                    // onChange={handleInputChange}\r\n                                    required\r\n                                    >\r\n                                    \r\n                                </Input>\r\n                                {/* {errors.dosageFrequency !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dosageFrequency}</span>\r\n                                ) : \"\" } */}\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Start Date </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"startDate\"\r\n                                    id=\"startDate\"\r\n                                    // value={objValues.startDate}\r\n                                    // onChange={handleInputChange}\r\n                                    required\r\n                                    >\r\n                                        \r\n                                </Input>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Duration </Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"duration\"\r\n                                    id=\"duration\"\r\n                                    // value={objValues.duration}\r\n                                    // onChange={handleInputChange}\r\n                                    required\r\n                                    >\r\n                                    \r\n                                </Input>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Duration Unit </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"durationUnit\"\r\n                                        id=\"durationUnit\"\r\n                                        // onChange={handleInputChange}\r\n                                        // value={objValues.durationUnit} \r\n                                    />\r\n                                    \r\n                                    \r\n                                </InputGroup>\r\n                                {/* {objValues.bodyWeight > 200 ? (\r\n                                        <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                                    ) : \"\" } */}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Col md={12}>                  \r\n                                  <LabelSui as='a' color='black'  className=\"float-end\" onClick={addInfection}  size='tiny' style={{ marginTop:20}}>\r\n                                    <Icon name='plus' /> Add Drug\r\n                                </LabelSui>\r\n                                  \r\n                            </Col>\r\n\r\n                        </div>\r\n  </Tab.Pane> \r\n},\r\n]\r\n\r\n/**** Submit Button Processing  */\r\nconst handleSubmit = (e) => {        \r\n    e.preventDefault();         \r\n    console.log(objValues)\r\n}\r\n\r\n  return (\r\n    <Fragment>\r\n       <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"xl\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Clinic Follow Up Visit\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n             </Modal.Header>\r\n                <Modal.Body>       \r\n                  <Row>\r\n                  <form>\r\n                    <Tab panes={panes} />\r\n                  </form>\r\n                    <Grid>\r\n                      <Grid.Column width={4}>\r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        onClick={handleSubmit}\r\n                        //onClick={handleSubmit}\r\n                    >\r\n                      Save\r\n                    </MatButton>\r\n                    </Grid.Column>\r\n                    </Grid>\r\n                  </Row>\r\n                </Modal.Body>\r\n          </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nfunction RelativeList({\r\n  relative,\r\n  index,\r\n  removeRelativeLocation,\r\n}) {\r\n\r\n\r\n  return (\r\n          <tr>\r\n              <th>{relative.adr}</th>\r\n              <th>{relative.adrOnsetDate}</th>\r\n              <th></th>\r\n              <th >\r\n                  <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeRelativeLocation(index)}>\r\n                      <DeleteIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                  \r\n              </th>\r\n          </tr> \r\n  );\r\n}\r\n\r\nfunction InfectionList({\r\n  relative,\r\n  index,\r\n  removeInfection,\r\n}) {\r\n\r\n \r\n  return (\r\n          <tr>\r\n\r\n              <th>{relative.illnessInfection}</th>\r\n              <th>{relative.ondateInfection}</th>\r\n              <th></th>\r\n              <th >\r\n                  <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeInfection(index)}>\r\n                      <DeleteIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                  \r\n              </th>\r\n          </tr> \r\n  );\r\n}\r\nexport default ClinicFollowUp;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst CervicalCancer = (props) => {\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [clinicalStage, setClinicalStage] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [tbStatus, setTbStatus] = useState([]);\r\n    const [regimenLine, setRegimenLine] = useState([]);\r\n    const [regimenType, setRegimenType] = useState([]);\r\n    const [pregancyStatus, setPregancyStatus] = useState([]);\r\n    const [functionalStatus, setFunctionalStatus] = useState([]);\r\n    const [objValues, setObjValues] = useState({\r\n                                                    personId:props.patientObj.id,\r\n                                                    visitDate: \"\",\r\n                                                    viralLoad: \"\",\r\n                                                    whoStagingId:\"\",\r\n                                                    clinicalStageId:\"\",\r\n                                                    cd4: \"\",\r\n                                                    cd4Percentage: \"\",\r\n                                                    isCommencement: true,\r\n                                                    functionalStatusId: \"\",\r\n                                                    clinicalNote: \"\",\r\n                                                    hivEnrollmentId: \"\",\r\n                                                    vitalSignDto:\"\",\r\n                                                    facilityId:1,\r\n                                                    regimenTypeId: 0,\r\n                                                    regimenId:0                                                   \r\n\r\n                                                });\r\n\r\n    const [vital, setVitalSignDto]= useState({\r\n                                                bodyWeight: \"\",\r\n                                                diastolic:\"\",\r\n                                                encounterDate: \"\",\r\n                                                facilityId: 1,\r\n                                                height: \"\",\r\n                                                personId: props.patientObj.id,\r\n                                                serviceTypeId: 1,\r\n                                                systolic:\"\" \r\n                                            })\r\n\r\n    useEffect(() => {\r\n        FunctionalStatus();\r\n        WhoStaging();\r\n        TBStatus();\r\n        PreganacyStatus();\r\n        RegimenLine();\r\n      }, []);\r\n      //Get list of WhoStaging\r\n      const WhoStaging =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setClinicalStage(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n        //Get list of RegimenLine\r\n        const RegimenLine =()=>{\r\n        axios\r\n           .get(`${baseUrl}hiv/regimen/types`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setRegimenLine(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n         //Get list of RegimenLine\r\n         const RegimenType =(id)=>{\r\n            axios\r\n               .get(`${baseUrl}hiv/regimen/types/${id}`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                   //console.log(response.data);\r\n                   setRegimenType(response.data);\r\n               })\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n            }\r\n        //Get list of PREGANACY_STATUS\r\n      const PreganacyStatus =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPregancyStatus(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n        ///GET LIST OF FUNCTIONAL%20_STATUS\r\n        async function FunctionalStatus() {\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setFunctionalStatus(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        // TB STATUS\r\n        const TBStatus =()=>{\r\n            axios\r\n               .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                   //console.log(response.data);\r\n                   setTbStatus(response.data);\r\n               })\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n         }\r\n\r\n        const handleInputChange = e => {\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n        const handleInputChangeVitalSignDto = e => {            \r\n            setVitalSignDto ({...vital,  [e.target.name]: e.target.value});\r\n        }\r\n        const handleSelecteRegimen = e => { \r\n            let regimenID=  e.target.value\r\n            setObjValues ({...objValues, regimenId:regimenID});\r\n            RegimenType(regimenID)           \r\n            //setVitalSignDto ({...vital,  [e.target.name]: e.target.value});\r\n        }\r\n        \r\n        const handleInputChange2 = e => {\r\n        let temp = { ...errors }\r\n        if(e.target.name === objValues.bodyWeight && e.target.value >3){\r\n            temp.name = objValues.bodyWeight ? \"\" : \"Body Weight cannot be greater than 200.\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {                  \r\n            e.preventDefault();                     \r\n            objValues.personId = props.patientObj.id\r\n            vital.encounterDate = objValues.visitDate\r\n            vital.personId=props.patientObj.id\r\n            objValues.vitalSignDto= vital\r\n            objValues.hivEnrollmentId= props.patientObj.enrollment.id\r\n            objValues.clinicalStageId = objValues.whoStagingId \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}hiv/art/commencement/`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.PatientCurrentStatus()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  if(error.apierror){\r\n                    toast.error(error.apierror.message);\r\n                  }else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n                  \r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Cervical Cancer \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"artDate\">Date of Screening * </Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"visitDate\"\r\n                                            id=\"visitDate\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.visitDate}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Screen Type</Label>\r\n                                    <Input\r\n                                            type=\"select\"\r\n                                            name=\"regimenId\"\r\n                                            id=\"regimenId\"\r\n                                            //value={objValues.regimenId}\r\n                                            onChange={handleSelecteRegimen}\r\n                                            required\r\n                                            >\r\n                                             <option value=\"Select\"> </option>\r\n                      \r\n                                                {regimenLine.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.description}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Screening Method</Label>\r\n                                    <Input\r\n                                            type=\"select\"\r\n                                            name=\"regimenTypeId\"\r\n                                            id=\"regimenTypeId\"\r\n                                            value={objValues.regimenTypeId}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                             <option value=\"Select\"> </option>\r\n                      \r\n                                                {regimenType.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.description}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                    {/* {errors.last_name !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.last_name}</span>\r\n                                        ) : \"\" } */}\r\n                                    </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Screening Result *</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"whoStagingId\"\r\n                                            id=\"whoStagingId\"\r\n                                            value={objValues.whoStagingId}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                             <option value=\"Select\"> </option>\r\n                      \r\n                                                {clinicalStage.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                        \r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CervicalCancer;\r\n","import React, { useState } from \"react\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport EnhancedAdherenceCounseling from './../EnhancedAdherenceCounseling/EnhancedAdherenceCounseling'\r\nimport DifferentiatedCare from './../DifferentiatedCare/DifferentiatedCare';\r\nimport StatusUpdate from './../ClientStatusUpdate/ClientStatusUpdate';\r\nimport ClinicFollowUp from './../ClinicFollowUpVisit/ClinicFollowUp';\r\nimport CervicalCancer from './../CervicalCancer/Index'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [ancModal, setAncModal] = useState(false);\r\n    const Anctoggle = () => setAncModal(!ancModal);\r\n    const [careModal, setCareModal] = useState(false);\r\n    const Caretoggle = () => setCareModal(!careModal);\r\n    const [clientStatusUpdateModal, setClientStatusUpdateModal] = useState(false);\r\n    const ClientStatusUpdatetoggle = () => setClientStatusUpdateModal(!clientStatusUpdateModal);\r\n    const [clinicFollowUpModal, setClinicFollowUpModal] = useState(false);\r\n    const ClinicFollowUptoggle = () => setClinicFollowUpModal(!clinicFollowUpModal);\r\n    const [cervicalCancerModal, setCervicalCancerModal] = useState(false);\r\n    const CervicalCancerToggle = () => setCervicalCancerModal(!cervicalCancerModal)\r\n\r\n    const loadAnc =(row)=> {\r\n        setpatientObj({...patientObj, ...row});\r\n            setAncModal(!ancModal)\r\n    }\r\n    const loadCare =(row)=> {\r\n        setpatientObj({...patientObj, ...row});\r\n            setCareModal(!careModal)\r\n    }\r\n    const loadStatusUpdate =(row)=> {\r\n        setpatientObj({...patientObj, ...row});\r\n        setClientStatusUpdateModal(!clientStatusUpdateModal)\r\n    }\r\n    const loadClinicFolowUp = (row) =>{\r\n        setpatientObj({...patientObj, ...row});\r\n        setClinicFollowUpModal(!clinicFollowUpModal)\r\n    }\r\n    const loadCervicalCancer = (row) =>{\r\n        setpatientObj({...patientObj, ...row});\r\n        setCervicalCancerModal(!cervicalCancerModal)\r\n    }\r\n    const onClickConsultation = (row) =>{        \r\n        props.setActiveContent(true)\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {patientObj.commenced!==true ?\r\n                (\r\n                <Menu size=\"mini\" color={\"grey\"} inverted >\r\n                    <Menu.Item onClick={() => onClickHome()} style={{color:\"black\"}} disabled> Home</Menu.Item>\r\n                    <Menu.Item onClick={() => loadClinicFolowUp(patientObj)} style={{color:\"black\"}} disabled>  Clinic Follow Up </Menu.Item>\r\n                    <Menu.Item onClick={() => loadAnc(patientObj)} color={\"black\"} disabled> Enhanced Adherence Counselling</Menu.Item>\r\n                    <Menu.Item onClick={() => loadStatusUpdate(patientObj)} disabled>Clint Status Update</Menu.Item>\r\n                    <Menu.Item disabled>PMTCT</Menu.Item>\r\n                    <Menu.Item disabled>HEI</Menu.Item>\r\n                    <Menu.Item disabled>Cervical Cancer</Menu.Item>\r\n                    <Menu.Item disabled>PREP</Menu.Item>\r\n                    \r\n                </Menu>\r\n               )\r\n               :\r\n               (\r\n                <Menu size=\"mini\" color={\"black\"} inverted>\r\n                    <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>\r\n                    {/* <Menu.Item onClick={() => onClickConsultation()} > Clinic Visit</Menu.Item> */}\r\n                    <Menu.Item onClick={() => loadClinicFolowUp(patientObj)}>  Clinic Follow Up Visit</Menu.Item>\r\n                    <Menu.Item onClick={() => loadAnc(patientObj)}> Enhanced Adherence Counselling</Menu.Item>\r\n                    <Menu.Item onClick={() => loadStatusUpdate(patientObj)}>Clint Status Update</Menu.Item>\r\n                    <Dropdown text=\"PMTCT\"   labeled simple    className='icon link item'>\r\n                    <Dropdown.Menu style={{backgroundColor:\"#000\"}}>\r\n                        <Dropdown.Item>\r\n                            <Link to={{pathname: \"/admin-program-manager-home\"}} >\r\n                            Labour and Delivery\r\n                            </Link>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item>\r\n                            <Link to={{pathname: \"/admin-program-manager-home\"}} >\r\n                            ANC and DNC\r\n                            </Link>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item>\r\n                            <Link to={{pathname: \"/admin-program-manager-home\"}} >\r\n                            ANC Enrolment\r\n                            </Link>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item>\r\n                            <Link to={{pathname: \"/admin-program-manager-home\"}} >\r\n                             Child Clinic Visit Follow Up\r\n                            </Link>\r\n                        </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown text=\"PREP\"   labeled simple    className='icon link item'>\r\n                    <Dropdown.Menu style={{backgroundColor:\"#000\"}}>\r\n                        <Dropdown.Item>\r\n                            <Link to={{pathname: \"/admin-program-manager-home\"}} >\r\n                            Prep Enrollment\r\n                            </Link>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item>\r\n                            <Link to={{pathname: \"/admin-program-manager-home\"}} >\r\n                            Prep Form\r\n                            </Link>\r\n                        </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Menu.Item>HEI</Menu.Item>\r\n                    <Menu.Item onClick={() => loadCervicalCancer(patientObj)}>Cervical Cancer</Menu.Item>\r\n                    <Menu.Item></Menu.Item>\r\n                    \r\n                </Menu>\r\n               )\r\n           }\r\n            <ClinicFollowUp toggle={ClinicFollowUptoggle} showModal={clinicFollowUpModal} patientObj={patientObj}/>\r\n            <EnhancedAdherenceCounseling  toggle={Anctoggle} showModal={ancModal} patientObj={patientObj} /> \r\n            <DifferentiatedCare toggle={Caretoggle} showModal={careModal} patientObj={patientObj} />\r\n            <StatusUpdate toggle={ClientStatusUpdatetoggle} showModal={clientStatusUpdateModal} patientObj={patientObj} />\r\n            <CervicalCancer toggle={CervicalCancerToggle} showModal={cervicalCancerModal} patientObj={patientObj} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport \"chartjs-plugin-streaming\";\r\nvar createReactClass = require(\"create-react-class\");\r\n\r\nconst data = {\r\n\tlabels: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\r\n  datasets: [\r\n    {\r\n      label: \"My First dataset\",\r\n\t\tbackgroundColor: \"rgba(58,223,174,1)\",\r\n\t\tstrokeColor: \"rgba(58,223,174,1)\",\r\n\t\tpointColor: \"rgba(0,0,0,0)\",\r\n\t\tpointStrokeColor: \"rgba(58,223,174,1)\",\r\n\t\tpointHighlightFill: \"rgba(58,223,174,1)\",\r\n\t\tpointHighlightStroke: \"rgba(58,223,174,1)\",\r\n\t\tdata: [65, 59, 80, 81, 56, 55, 40, 65, 59, 80, 81, 56, 55, 40],\r\n    },\r\n  ],\r\n};\r\n\r\nconst options = {\r\n  tooltips: {\r\n    enabled: false,\r\n  },\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        display: false,\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        display: false,\r\n        type: \"realtime\",\r\n        realtime: {\r\n          onRefresh: function () {\r\n            data.datasets[0].data.push({\r\n              x: Date.now(),\r\n              y: Math.random() * 100,\r\n            });\r\n          },\r\n          delay: 1000,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  title: {\r\n    display: false,\r\n  },\r\n  plugins: {\r\n    streaming: {\r\n      // per-chart option\r\n      frameRate: 0, // chart is drawn 30 times every second\r\n    },\r\n  },\r\n};\r\n\r\nexport default createReactClass({\r\n  displayName: \"ActiveUser\",\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Bar data={data} options={options} height={150} />\r\n      </div>\r\n    );\r\n  },\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nclass FeeCollection extends Component {\r\n  render() {\r\n    const data = {\r\n      labels: [7, 6, 8, 7, 3, 8, 3, 3, 6, 5, 9, 2, 8],\r\n      datasets: [\r\n        {\r\n          label: \"My First dataset\",\r\n          data: [7, 6, 8, 7, 3, 8, 3, 3, 6, 5, 9, 2, 8],\r\n          backgroundColor: \"#fa707e\",\r\n          borderColor: \"#f77f8b\",\r\n          borderWidth: 3,\r\n          strokeColor: \"#F77F8B\",\r\n          capBezierPoints: !0,\r\n          pointColor: \"#fff\",\r\n          pointBorderColor: \"#fff\",\r\n          pointBackgroundColor: \"#F77F8B\",\r\n          pointBorderWidth: 3,\r\n          pointRadius: 0,\r\n          pointHoverBackgroundColor: \"#FFF\",\r\n          pointHoverBorderColor: \"#F77F8B\",\r\n          pointHoverRadius: 0,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const options = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      tooltips: {\r\n        enabled: false,\r\n      },\r\n      legend: {\r\n        display: false,\r\n        labels: {\r\n          usePointStyle: false,\r\n        },\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            display: false,\r\n            gridLines: {\r\n              display: false,\r\n              drawBorder: false,\r\n            },\r\n            scaleLabel: {\r\n              display: false,\r\n              labelString: \"Month\",\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            display: false,\r\n            gridLines: {\r\n              display: false,\r\n              drawBorder: false,\r\n            },\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: \"Value\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      elements: {\r\n        line: {\r\n          tension: 0,\r\n        },\r\n        point: {\r\n          radius: 0,\r\n          borderWidth: 0,\r\n        },\r\n      },\r\n      title: {\r\n        display: false,\r\n      },\r\n    };\r\n    return (\r\n      <div style={{ height: 140 }}>\r\n        <Line data={data} options={options} height={140} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeeCollection;\r\n","import React, { Component } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nclass NewStudent extends Component {\r\n  render() {\r\n    const data = {\r\n      labels: [33, 22, 68, 54, 8, 30, 74, 7, 36, 5, 41, 19, 43],\r\n      datasets: [\r\n        {\r\n          label: \"My First dataset\",\r\n          data: [33, 22, 68, 54, 8, 30, 74, 7, 36, 5, 41, 19, 43],\r\n          borderColor: \"#FFCE78\",\r\n          borderWidth: \"0\",\r\n          backgroundColor: \"#FFCE78\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    const options = {\r\n      legend: false,\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            display: false,\r\n            ticks: {\r\n              beginAtZero: true,\r\n              display: false,\r\n              max: 100,\r\n              min: 0,\r\n              stepSize: 10,\r\n            },\r\n            gridLines: {\r\n              display: false,\r\n              drawBorder: false,\r\n            },\r\n          },\r\n        ],\r\n        xAxes: [\r\n          {\r\n            display: false,\r\n            barPercentage: 0.6,\r\n            gridLines: {\r\n              display: false,\r\n              drawBorder: false,\r\n            },\r\n            ticks: {\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div style={{ height: 150 }}>\r\n        <Bar data={data} height={150} options={options} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewStudent;\r\n","import React, { PureComponent } from \"react\";\r\nimport { BarChart, Bar, ResponsiveContainer } from \"recharts\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Page A\",\r\n    uv: 3000,\r\n    pv: 2400,\r\n    amt: 2400,\r\n  },\r\n  {\r\n    name: \"Page B\",\r\n    uv: -3000,\r\n    pv: 1398,\r\n    amt: 2210,\r\n  },\r\n  {\r\n    name: \"Page C\",\r\n    uv: -2000,\r\n    pv: -2500,\r\n    amt: 2290,\r\n  },\r\n  {\r\n    name: \"Page D\",\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 2000,\r\n  },\r\n  {\r\n    name: \"Page E\",\r\n    uv: -1890,\r\n    pv: 4800,\r\n    amt: 2181,\r\n  },\r\n  {\r\n    name: \"Page F\",\r\n    uv: 2390,\r\n    pv: -2400,\r\n    amt: 2500,\r\n  },\r\n  {\r\n    name: \"Page G\",\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 2100,\r\n  },\r\n];\r\n\r\nexport default class TotalCourse extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          height: \"150px\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <ResponsiveContainer width={\"100%\"} height={\"100%\"}>\r\n          <BarChart\r\n            data={data}\r\n            margin={{\r\n              top: 5,\r\n              right: 0,\r\n              left: 0,\r\n              bottom: 5,\r\n            }}\r\n          >\r\n            <Bar dataKey=\"pv\" fill=\"#5bcfc5\" />\r\n            <Bar dataKey=\"uv\" fill=\"#209F84\" />\r\n            <Bar dataKey=\"amt\" fill=\"#3693ff\" />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from \"react\";\r\n// BS\r\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\n// images\r\n\r\nimport ActiveUser from \"./Ventic/WidgetBasic/ActiveUser\";\r\n\r\nimport FeeCollection from \"./Ventic/WidgetBasic/FeeCollection\";\r\n\r\nimport NewStudent from \"./Ventic/WidgetBasic/NewStudent\";\r\n\r\nimport TotalCourse from \"./Ventic/WidgetBasic/TotalCourse\";\r\nimport TotalStudent from \"./Ventic/WidgetBasic/TotalStudent\";\r\n\r\nimport VisitorActivity from \"./Ventic/WidgetBasic/VisitorActivity\";\r\n;\r\n// Page titie\r\n\r\n\r\nconst Widget = () => {\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n     \r\n      <div className=\"row\">\r\n      <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\">\r\n              <h4 className=\"card-title\">Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <ul className=\"timeline\">\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2\">\r\n                        <img  alt=\"\" width=\"50\"  />\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">Bometric Enrollment</h5>\r\n                        <small className=\"d-block\">\r\n                          29 July 2022 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\"primary light\"\r\n                          className=\" i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2 media-info\">RA</div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">Phamarcy Refill</h5>\r\n                        <small className=\"d-block\">\r\n                          29 July 2022 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\" light\"\r\n                          className=\"i-false p-0 btn-info sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2 media-success\">\r\n                        <i className=\"fa fa-home\"></i>\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">Lab Test Order</h5>\r\n                        <small className=\"d-block\">\r\n                          29 July 2022 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\" light\"\r\n                          className=\" i-false p-0 btn-success sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2\">\r\n                        <img  alt=\"\" width=\"50\"  />\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">Dr sultads Send you Photo</h5>\r\n                        <small className=\"d-block\">\r\n                          29 July 2020 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\"primary light\"\r\n                          className=\" i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2 media-danger\">RA</div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">Clinic Visit</h5>\r\n                        <small className=\"d-block\">\r\n                          29 July 2020 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          type=\"button\"\r\n                          className=\"btn btn-danger light sharp   i-false p-0 sharp \"\r\n                          data-toggle=\"dropdown\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2 media-primary\">\r\n                        <i className=\"fa fa-home\"></i>\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">Clinic Visit</h5>\r\n                        <small className=\"d-block\">\r\n                          29 July 2020 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\"primary light\"\r\n                          className=\" i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header border-0 pb-0\">\r\n              <h4 className=\"card-title\">Viral Load Detail</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_TimeLine\"\r\n                className=\"widget-timeline dz-scroll height370 ps ps--active-y\"\r\n              >\r\n                <ul className=\"timeline\">\r\n                  <li>\r\n                    <div className=\"timeline-badge primary\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                      <span>10 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Sample Collected{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Assay{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Result Received{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge info\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                      <span>10 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Sample Collected{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Assay{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Result Received{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge danger\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                       <span>10 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Sample Collected{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Assay{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Result Received{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge success\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                       <span>10 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Sample Collected{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Assay{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Result Received{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge warning\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                       <span>10 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Sample Collected{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Assay{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Result Received{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge dark\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                       <span>10 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Sample Collected{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Assay{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Result Received{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header border-0 pb-0\">\r\n              <h4 className=\"card-title\">Refill Summary</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_TimeLine1\"\r\n                className=\"widget-timeline dz-scroll style-1 height370 ps ps--active-y\"\r\n              >\r\n                <ul className=\"timeline\">\r\n                  <li>\r\n                    <div className=\"timeline-badge primary\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                     <span>20 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                      Current Regimen\r\n                        TDF(300mg)+3TC(300mg)+DTG(50mg){\" \"}\r\n                        <strong className=\"text-info\">Current Regimen Line<br/>\r\n                        ART First Line Adult</strong>\r\n                      </h6>\r\n                      <p className=\"mb-0\">\r\n                        Refill Date<br/>\r\n                        08 Jan, 2022\r\n                      </p>\r\n                      <strong className=\"text-warning\">\r\n                          Next Appointment<br/>\r\n                        05 Jul, 2022\r\n                     </strong><br/>\r\n                     <strong className=\"text-primary\">\r\n                        Refill Duration<br/>\r\n                        180\r\n                     </strong><br/>\r\n                     <strong className=\"text-teal\">\r\n                     Refill Duration<br/>\r\n                        180\r\n                     </strong>\r\n                     <strong className=\"mb-0\">\r\n                     IPT<br/>\r\n                    Isoniazid Preventive Therapy (IPT)\r\n                    </strong><br/>\r\n                    <strong className=\"mb-0\">\r\n                    IPT Date<b/>\r\n                    08 Jan, 2022\r\n                    </strong>\r\n                    \r\n\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge info\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                      <span>20 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                      Current Regimen\r\n                        TDF(300mg)+3TC(300mg)+DTG(50mg){\" \"}\r\n                        <strong className=\"text-info\">Current Regimen Line<br/>\r\n                        ART First Line Adult</strong>\r\n                      </h6>\r\n                      <p className=\"mb-0\">\r\n                        Refill Date<br/>\r\n                        08 Jan, 2022\r\n                      </p>\r\n                      <strong className=\"text-warning\">\r\n                          Next Appointment<br/>\r\n                        05 Jul, 2022\r\n                     </strong><br/>\r\n                     <strong className=\"text-primary\">\r\n                        Refill Duration<br/>\r\n                        180\r\n                     </strong><br/>\r\n                     <strong className=\"text-teal\">\r\n                     Refill Duration<br/>\r\n                        180\r\n                     </strong>\r\n                     <strong className=\"mb-0\">\r\n                     IPT<br/>\r\n                    Isoniazid Preventive Therapy (IPT)\r\n                    </strong><br/>\r\n                    <strong className=\"mb-0\">\r\n                    IPT Date<b/>\r\n                    08 Jan, 2022\r\n                    </strong>\r\n                    \r\n\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge danger\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                      <span>20 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                      Current Regimen\r\n                        TDF(300mg)+3TC(300mg)+DTG(50mg){\" \"}\r\n                        <strong className=\"text-info\">Current Regimen Line<br/>\r\n                        ART First Line Adult</strong>\r\n                      </h6>\r\n                      <p className=\"mb-0\">\r\n                        Refill Date<br/>\r\n                        08 Jan, 2022\r\n                      </p>\r\n                      <strong className=\"text-warning\">\r\n                          Next Appointment<br/>\r\n                        05 Jul, 2022\r\n                     </strong><br/>\r\n                     <strong className=\"text-primary\">\r\n                        Refill Duration<br/>\r\n                        180\r\n                     </strong><br/>\r\n                     <strong className=\"text-teal\">\r\n                     Refill Duration<br/>\r\n                        180\r\n                     </strong>\r\n                     <strong className=\"mb-0\">\r\n                     IPT<br/>\r\n                    Isoniazid Preventive Therapy (IPT)\r\n                    </strong><br/>\r\n                    <strong className=\"mb-0\">\r\n                    IPT Date<b/>\r\n                    08 Jan, 2022\r\n                    </strong>\r\n                    \r\n\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge success\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                      <span>20 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                      Current Regimen\r\n                        TDF(300mg)+3TC(300mg)+DTG(50mg){\" \"}\r\n                        <strong className=\"text-info\">Current Regimen Line<br/>\r\n                        ART First Line Adult</strong>\r\n                      </h6>\r\n                      <p className=\"mb-0\">\r\n                        Refill Date<br/>\r\n                        08 Jan, 2022\r\n                      </p>\r\n                      <strong className=\"text-warning\">\r\n                          Next Appointment<br/>\r\n                        05 Jul, 2022\r\n                     </strong><br/>\r\n                     <strong className=\"text-primary\">\r\n                        Refill Duration<br/>\r\n                        180\r\n                     </strong><br/>\r\n                     <strong className=\"text-teal\">\r\n                     Refill Duration<br/>\r\n                        180\r\n                     </strong>\r\n                     <strong className=\"mb-0\">\r\n                     IPT<br/>\r\n                    Isoniazid Preventive Therapy (IPT)\r\n                    </strong><br/>\r\n                    <strong className=\"mb-0\">\r\n                    IPT Date<b/>\r\n                    08 Jan, 2022\r\n                    </strong>\r\n                    \r\n\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge warning\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                      <span>20 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                      Current Regimen\r\n                        TDF(300mg)+3TC(300mg)+DTG(50mg){\" \"}\r\n                        <strong className=\"text-info\">Current Regimen Line<br/>\r\n                        ART First Line Adult</strong>\r\n                      </h6>\r\n                      <p className=\"mb-0\">\r\n                        Refill Date<br/>\r\n                        08 Jan, 2022\r\n                      </p>\r\n                      <strong className=\"text-warning\">\r\n                          Next Appointment<br/>\r\n                        05 Jul, 2022\r\n                     </strong><br/>\r\n                     <strong className=\"text-primary\">\r\n                        Refill Duration<br/>\r\n                        180\r\n                     </strong><br/>\r\n                     <strong className=\"text-teal\">\r\n                     Refill Duration<br/>\r\n                        180\r\n                     </strong>\r\n                     <strong className=\"mb-0\">\r\n                     IPT<br/>\r\n                    Isoniazid Preventive Therapy (IPT)\r\n                    </strong><br/>\r\n                    <strong className=\"mb-0\">\r\n                    IPT Date<b/>\r\n                    08 Jan, 2022\r\n                    </strong>\r\n                    \r\n\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge dark\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                      <span>20 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                      Current Regimen\r\n                        TDF(300mg)+3TC(300mg)+DTG(50mg){\" \"}\r\n                        <strong className=\"text-info\">Current Regimen Line<br/>\r\n                        ART First Line Adult</strong>\r\n                      </h6>\r\n                      <p className=\"mb-0\">\r\n                        Refill Date<br/>\r\n                        08 Jan, 2022\r\n                      </p>\r\n                      <strong className=\"text-warning\">\r\n                          Next Appointment<br/>\r\n                        05 Jul, 2022\r\n                     </strong><br/>\r\n                     <strong className=\"text-primary\">\r\n                        Refill Duration<br/>\r\n                        180\r\n                     </strong><br/>\r\n                     <strong className=\"text-teal\">\r\n                     Refill Duration<br/>\r\n                        180\r\n                     </strong>\r\n                     <strong className=\"mb-0\">\r\n                     IPT<br/>\r\n                    Isoniazid Preventive Therapy (IPT)\r\n                    </strong><br/>\r\n                    <strong className=\"mb-0\">\r\n                    IPT Date<b/>\r\n                    08 Jan, 2022\r\n                    </strong>\r\n                    \r\n\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n       \r\n        {/* <div className=\"col-xl-4 col-xxl-6 col-lg-6\">\r\n          <div className=\"card border-0 pb-0\">\r\n            <div className=\"card-header border-0 pb-0\">\r\n              <h4 className=\"card-title\">Notifications 2</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo2\"\r\n                className=\"widget-media dz-scroll height370 ps ps--active-y\"\r\n              >\r\n                <ul className=\"timeline\">\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2\">\r\n                        <img  alt=\"\" width=\"50\"  />\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">Dr sultads Send you Photo</h5>\r\n                        <small className=\"d-block\">\r\n                          29 July 2020 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\"primary light\"\r\n                          className=\" i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2 media-info\">KG</div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">\r\n                          Resport created successfully{\" \"}\r\n                          <span className=\"badge badge-warning\">Warning</span>\r\n                        </h5>\r\n                        <small className=\"d-block\">\r\n                          29 July 2020 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\" light\"\r\n                          className=\" btn-info i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2 media-success\">\r\n                        <i className=\"fa fa-home\"></i>\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">Reminder : Treatment Time!</h5>\r\n                        <small className=\"d-block\">\r\n                          29 July 2020 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\" light\"\r\n                          className=\" btn-success i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2\">\r\n                        <img  alt=\"\" width=\"50\"  />\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">\r\n                          Dr sultads Send you Photo{\" \"}\r\n                          <span className=\"badge light badge-danger\">\r\n                            Danger\r\n                          </span>\r\n                        </h5>\r\n                        <small className=\"d-block\">\r\n                          29 July 2020 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\"primary light\"\r\n                          className=\" i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2 media-danger\">KG</div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">\r\n                          Resport created successfully{\" \"}\r\n                          <span className=\"badge light badge-success\">\r\n                            Success\r\n                          </span>\r\n                        </h5>\r\n                        <small className=\"d-block\">\r\n                          29 July 2020 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\" light\"\r\n                          className=\"btn-danger i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2 media-primary\">\r\n                        <i className=\"fa fa-home\"></i>\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">\r\n                          Reminder : Treatment Time!{\" \"}\r\n                          <span className=\"badge light badge-success\">\r\n                            Success\r\n                          </span>\r\n                        </h5>\r\n                        <small className=\"d-block\">\r\n                          29 July 2020 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\"primary light\"\r\n                          className=\" i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-4 col-xxl-6 col-lg-6\">\r\n          <div className=\"card border-0 pb-0\">\r\n            <div className=\"card-header border-0 pb-0\">\r\n              <h4 className=\"card-title\">Message</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo3\"\r\n                className=\"widget-media dz-scroll height370 ps ps--active-y\"\r\n              >\r\n                <ul className=\"timeline\">\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2\">\r\n                        <img  alt=\"\" width=\"50\"  />\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">\r\n                          Alfie Mason{\" \"}\r\n                          <small className=\"text-muted\">29 July 2020</small>\r\n                        </h5>\r\n                        <p className=\"mb-1\">\r\n                          I shared this on my fb wall a few months back..\r\n                        </p>\r\n                        <Link\r\n                          to=\"/widget-basic\"\r\n                          className=\"btn btn-primary btn-xxs shadow\"\r\n                        >\r\n                          Reply\r\n                        </Link>\r\n                        <Link\r\n                          to=\"/widget-basic\"\r\n                          className=\"btn btn-outline-danger btn-xxs ms-1\"\r\n                        >\r\n                          Delete\r\n                        </Link>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\"primary light\"\r\n                          className=\" i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2 media-info\">KG</div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">\r\n                          Jacob Tucker{\" \"}\r\n                          <small className=\"text-muted\">29 July 2020</small>\r\n                        </h5>\r\n                        <p className=\"mb-1\">\r\n                          I shared this on my fb wall a few months back..\r\n                        </p>\r\n                        <Link\r\n                          to=\"/widget-basic\"\r\n                          className=\"btn btn-primary btn-xxs shadow\"\r\n                        >\r\n                          Reply\r\n                        </Link>\r\n                        <Link\r\n                          to=\"/widget-basic\"\r\n                          className=\"btn btn-outline-danger btn-xxs ms-1\"\r\n                        >\r\n                          Delete\r\n                        </Link>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\" light\"\r\n                          className=\"btn-info i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2 media-success\">\r\n                        <img  alt=\"\" width=\"50\"  />\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">\r\n                          Jack Ronan{\" \"}\r\n                          <small className=\"text-muted\">29 July 2020</small>\r\n                        </h5>\r\n                        <p className=\"mb-1\">\r\n                          I shared this on my fb wall a few months back..\r\n                        </p>\r\n                        <Link\r\n                          to=\"/widget-basic\"\r\n                          className=\"btn btn-primary btn-xxs shadow\"\r\n                        >\r\n                          Reply\r\n                        </Link>\r\n                        <Link\r\n                          to=\"/widget-basic\"\r\n                          className=\"btn btn-outline-danger btn-xxs ms-1\"\r\n                        >\r\n                          Delete\r\n                        </Link>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\" light\"\r\n                          className=\"btn-success i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2\">\r\n                        <img  alt=\"\" width=\"50\"  />\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">\r\n                          Noah Baldon{\" \"}\r\n                          <small className=\"text-muted\">29 July 2020</small>\r\n                        </h5>\r\n                        <p className=\"mb-1\">\r\n                          I shared this on my fb wall a few months back..\r\n                        </p>\r\n                        <Link\r\n                          to=\"/widget-basic\"\r\n                          className=\"btn btn-primary btn-xxs shadow\"\r\n                        >\r\n                          Reply\r\n                        </Link>\r\n                        <Link\r\n                          to=\"/widget-basic\"\r\n                          className=\"btn btn-outline-danger btn-xxs ms-1\"\r\n                        >\r\n                          Delete\r\n                        </Link>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\"primary light\"\r\n                          className=\" i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2 media-danger\">PU</div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">\r\n                          Thomas Grady{\" \"}\r\n                          <small className=\"text-muted\">02:26 PM</small>\r\n                        </h5>\r\n                        <p className=\"mb-1\">\r\n                          I shared this on my fb wall a few months back..\r\n                        </p>\r\n                        <Link\r\n                          to=\"/widget-basic\"\r\n                          className=\"btn btn-primary btn-xxs shadow\"\r\n                        >\r\n                          Reply\r\n                        </Link>\r\n                        <Link\r\n                          to=\"/widget-basic\"\r\n                          className=\"btn btn-outline-danger btn-xxs ms-1\"\r\n                        >\r\n                          Delete\r\n                        </Link>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\" light\"\r\n                          className=\"btn-danger i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"media me-2 media-primary\">\r\n                        <img  alt=\"\" width=\"50\" />\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-1\">\r\n                          Oscar Weston{\" \"}\r\n                          <small className=\"text-muted\">29 July 2020</small>\r\n                        </h5>\r\n                        <p className=\"mb-1\">\r\n                          I shared this on my fb wall a few months back..\r\n                        </p>\r\n                        <Link\r\n                          to=\"/widget-basic\"\r\n                          className=\"btn btn-primary btn-xxs shadow\"\r\n                        >\r\n                          Reply\r\n                        </Link>\r\n                        <Link\r\n                          to=\"/widget-basic\"\r\n                          className=\"btn btn-outline-danger btn-xxs ms-1\"\r\n                        >\r\n                          Delete\r\n                        </Link>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\"primary light\"\r\n                          className=\" i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-4 col-xxl-6 col-lg-6\">\r\n          <div className=\"card border-0 pb-0\">\r\n            <div className=\"card-header border-0 pb-0\">\r\n              <h4 className=\"card-title\">To Do List</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo4\"\r\n                className=\"widget-media dz-scroll height370 ps ps--active-y\"\r\n              >\r\n                <ul className=\"timeline\">\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"form-check custom-checkbox checkbox-success check-lg me-3\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input\"\r\n                          id=\"customCheckBox1\"\r\n                          required=\"\"\r\n                        />\r\n                        <label\r\n                          className=\"form-check-label\"\r\n                          htmlFor=\"customCheckBox1\"\r\n                        ></label>\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-0\">Get up</h5>\r\n                        <small className=\"text-muted\">\r\n                          29 July 2020 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\"primary light\"\r\n                          className=\" i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"form-check custom-checkbox checkbox-warning check-lg me-3\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input\"\r\n                          id=\"customCheckBox2\"\r\n                          required=\"\"\r\n                        />\r\n                        <label\r\n                          className=\"form-check-label\"\r\n                          htmlFor=\"customCheckBox2\"\r\n                        ></label>\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-0\">Stand up</h5>\r\n                        <small className=\"text-muted\">\r\n                          29 July 2020 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\"primary light\"\r\n                          className=\" i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"form-check custom-checkbox checkbox-primary check-lg me-3\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input\"\r\n                          id=\"customCheckBox3\"\r\n                          required=\"\"\r\n                        />\r\n                        <label\r\n                          className=\"form-check-label\"\r\n                          htmlFor=\"customCheckBox3\"\r\n                        ></label>\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-0\">Don't give up the fight.</h5>\r\n                        <small className=\"text-muted\">\r\n                          29 July 2020 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\" light\"\r\n                          className=\"btn-info i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"form-check custom-checkbox checkbox-info check-lg me-3\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input\"\r\n                          id=\"customCheckBox4\"\r\n                          required=\"\"\r\n                        />\r\n                        <label\r\n                          className=\"form-check-label\"\r\n                          htmlFor=\"customCheckBox4\"\r\n                        ></label>\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-0\">Do something else</h5>\r\n                        <small className=\"text-muted\">\r\n                          29 July 2020 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\" light\"\r\n                          className=\"btn-danger i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"form-check custom-checkbox checkbox-success check-lg me-3\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input\"\r\n                          id=\"customCheckBox5\"\r\n                          required=\"\"\r\n                        />\r\n                        <label\r\n                          className=\"form-check-label\"\r\n                          htmlFor=\"customCheckBox5\"\r\n                        ></label>\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-0\">Get up</h5>\r\n                        <small className=\"text-muted\">\r\n                          29 July 2020 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\" light\"\r\n                          className=\"btn-success i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-panel\">\r\n                      <div className=\"form-check custom-checkbox checkbox-warning check-lg me-3\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input\"\r\n                          id=\"customCheckBox6\"\r\n                          required=\"\"\r\n                        />\r\n                        <label\r\n                          className=\"form-check-label\"\r\n                          htmlFor=\"customCheckBox6\"\r\n                        ></label>\r\n                      </div>\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mb-0\">Stand up</h5>\r\n                        <small className=\"text-muted\">\r\n                          29 July 2020 - 02:26 PM\r\n                        </small>\r\n                      </div>\r\n                      <Dropdown className=\"dropdown\">\r\n                        <Dropdown.Toggle\r\n                          variant=\"primary light\"\r\n                          className=\" i-false p-0 sharp\"\r\n                        >\r\n                          <svg\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Edit\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item\r\n                            className=\"dropdown-item\"\r\n                            to=\"/widget-basic\"\r\n                          >\r\n                            Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-primary text-primary\">\r\n                  <svg\r\n                    id=\"icon-customers\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    className=\"feather feather-user\"\r\n                  >\r\n                    <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n                    <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n                  </svg>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">Patient</p>\r\n                  <h4 className=\"mb-0\">3280</h4>\r\n                  <span className=\"badge badge-primary\">+3.5%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-warning text-warning\">\r\n                  <svg\r\n                    id=\"icon-orders\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    className=\"feather feather-file-text\"\r\n                  >\r\n                    <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\r\n                    <polyline points=\"14 2 14 8 20 8\"></polyline>\r\n                    <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\r\n                    <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\r\n                    <polyline points=\"10 9 9 9 8 9\"></polyline>\r\n                  </svg>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">Bills</p>\r\n                  <h4 className=\"mb-0\">2570</h4>\r\n                  <span className=\"badge badge-warning\">+3.5%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body  p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-danger text-danger\">\r\n                  <svg\r\n                    id=\"icon-revenue\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    className=\"feather feather-dollar-sign\"\r\n                  >\r\n                    <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"23\"></line>\r\n                    <path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"></path>\r\n                  </svg>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">Revenue</p>\r\n                  <h4 className=\"mb-0\">364.50K</h4>\r\n                  <span className=\"badge badge-danger\">-3.5%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-success text-success\">\r\n                  <svg\r\n                    id=\"icon-database-widget\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    className=\"feather feather-database\"\r\n                  >\r\n                    <ellipse cx=\"12\" cy=\"5\" rx=\"9\" ry=\"3\"></ellipse>\r\n                    <path d=\"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3\"></path>\r\n                    <path d=\"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5\"></path>\r\n                  </svg>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">Patient</p>\r\n                  <h4 className=\"mb-0\">364.50K</h4>\r\n                  <span className=\"badge badge-success\">-3.5%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card bg-danger\">\r\n            <div className=\"card-body  p-4\">\r\n              <div className=\"media\">\r\n                <span className=\"me-3\">\r\n                  <i className=\"flaticon-381-calendar-1\"></i>\r\n                </span>\r\n                <div className=\"media-body text-white text-end\">\r\n                  <p className=\"mb-1\">Appointment</p>\r\n                  <h3 className=\"text-white\">76</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card bg-success\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media\">\r\n                <span className=\"me-3\">\r\n                  <i className=\"flaticon-381-diamond\"></i>\r\n                </span>\r\n                <div className=\"media-body text-white text-end\">\r\n                  <p className=\"mb-1\">Earning</p>\r\n                  <h3 className=\"text-white\">$56K</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card bg-info\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media\">\r\n                <span className=\"me-3\">\r\n                  <i className=\"flaticon-381-heart\"></i>\r\n                </span>\r\n                <div className=\"media-body text-white text-end\">\r\n                  <p className=\"mb-1\">Total Patient</p>\r\n                  <h3 className=\"text-white\">783K</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card bg-primary\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media\">\r\n                <span className=\"me-3\">\r\n                  <i className=\"flaticon-381-user-7\"></i>\r\n                </span>\r\n                <div className=\"media-body text-white text-end\">\r\n                  <p className=\"mb-1\">Chef</p>\r\n                  <h3 className=\"text-white\">$76</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card bg-primary\">\r\n            <div className=\"card-body  p-4\">\r\n              <div className=\"media\">\r\n                <span className=\"me-3\">\r\n                  <i className=\"la la-users\"></i>\r\n                </span>\r\n                <div className=\"media-body text-white\">\r\n                  <p className=\"mb-1\">Total Students</p>\r\n                  <h3 className=\"text-white\">3280</h3>\r\n                  <div className=\"progress mb-2 bg-secondary\">\r\n                    <div\r\n                      className=\"progress-bar progress-animated bg-light\"\r\n                      style={{ width: \"80%\" }}\r\n                    ></div>\r\n                  </div>\r\n                  <small>80% Increase in 20 Days</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card bg-warning\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media\">\r\n                <span className=\"me-3\">\r\n                  <i className=\"la la-user\"></i>\r\n                </span>\r\n                <div className=\"media-body text-white\">\r\n                  <p className=\"mb-1\">New Students</p>\r\n                  <h3 className=\"text-white\">245</h3>\r\n                  <div className=\"progress mb-2 bg-primary\">\r\n                    <div\r\n                      className=\"progress-bar progress-animated bg-light\"\r\n                      style={{ width: \"50%\" }}\r\n                    ></div>\r\n                  </div>\r\n                  <small>50% Increase in 25 Days</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card bg-secondary\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media\">\r\n                <span className=\"me-3\">\r\n                  <i className=\"la la-graduation-cap\"></i>\r\n                </span>\r\n                <div className=\"media-body text-white\">\r\n                  <p className=\"mb-1\">Total Course</p>\r\n                  <h3 className=\"text-white\">28</h3>\r\n                  <div className=\"progress mb-2 bg-primary\">\r\n                    <div\r\n                      className=\"progress-bar progress-animated bg-light\"\r\n                      style={{ width: \"76%\" }}\r\n                    ></div>\r\n                  </div>\r\n                  <small>76% Increase in 20 Days</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card bg-danger \">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media\">\r\n                <span className=\"me-3\">\r\n                  <i className=\"la la-dollar\"></i>\r\n                </span>\r\n                <div className=\"media-body text-white\">\r\n                  <p className=\"mb-1\">Fees Collect</p>\r\n                  <h3 className=\"text-white\">250$</h3>\r\n                  <div className=\"progress mb-2 bg-secondary\">\r\n                    <div\r\n                      className=\"progress-bar progress-animated bg-light\"\r\n                      style={{ width: \"30%\" }}\r\n                    ></div>\r\n                  </div>\r\n                  <small>30% Increase in 30 Days</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-xl-3 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <h4 className=\"card-title\">Total Students</h4>\r\n              <h3>3280</h3>\r\n              <div className=\"progress mb-2\">\r\n                <div\r\n                  className=\"progress-bar progress-animated bg-primary\"\r\n                  style={{ width: \"80%\" }}\r\n                ></div>\r\n              </div>\r\n              <small>80% Increase in 20 Days</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <h4 className=\"card-title\">New Students</h4>\r\n              <h3>245</h3>\r\n              <div className=\"progress mb-2\">\r\n                <div\r\n                  className=\"progress-bar progress-animated bg-warning\"\r\n                  style={{ width: \"50%\" }}\r\n                ></div>\r\n              </div>\r\n              <small>50% Increase in 25 Days</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <h4 className=\"card-title\">Total Course</h4>\r\n              <h3>28</h3>\r\n              <div className=\"progress mb-2\">\r\n                <div\r\n                  className=\"progress-bar progress-animated bg-red\"\r\n                  style={{ width: \"76%\" }}\r\n                ></div>\r\n              </div>\r\n              <small>76% Increase in 20 Days</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <h4 className=\"card-title\">Fees Collection</h4>\r\n              <h3>25160$</h3>\r\n              <div className=\"progress mb-2\">\r\n                <div\r\n                  className=\"progress-bar progress-animated bg-success\"\r\n                  style={{ width: \"30%\" }}\r\n                ></div>\r\n              </div>\r\n\r\n              <small>30% Increase in 30 Days</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-xl-12 col-lg-12 col-sm-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-3 col-lg-6 col-sm-6\">\r\n              <div className=\"widget-stat card bg-primary\">\r\n                <div className=\"card-header border-0 pb-0\">\r\n                  <h3 className=\"card-title text-white\">Total Students</h3>\r\n                  <h5 className=\"text-white mb-0\">\r\n                    <i className=\"fa fa-caret-up\"></i> 422\r\n                  </h5>\r\n                </div>\r\n                <div className=\"card-body text-center\">\r\n                  <div className=\"ico-sparkline\">\r\n                    <TotalStudent />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-lg-6 col-sm-6\">\r\n              <div className=\"widget-stat card bg-warning overflow-hidden\">\r\n                <div className=\"card-header border-0 \">\r\n                  <h3 className=\"card-title text-white\">New Students</h3>\r\n                  <h5 className=\"text-white mb-0\">\r\n                    <i className=\"fa fa-caret-up\"></i> 357\r\n                  </h5>\r\n                </div>\r\n                <div className=\"card-body text-center p-0\">\r\n                  <div className=\"ico-sparkline\">\r\n                    <NewStudent />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-lg-6 col-sm-6\">\r\n              <div className=\"widget-stat card bg-secondary\">\r\n                <div className=\"card-header pb-3 border-0 pb-0\">\r\n                  <h3 className=\"card-title text-white\">Total Course</h3>\r\n                  <h5 className=\"text-white mb-0\">\r\n                    <i className=\"fa fa-caret-up\"></i> 547\r\n                  </h5>\r\n                </div>\r\n                <div className=\"card-body p-0\">\r\n                  <div className=\"px-4\">\r\n                    <TotalCourse />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-lg-6 col-sm-6\">\r\n              <div className=\"widget-stat card bg-danger overflow-hidden\">\r\n                <div className=\"card-header pb-3 border-0 pb-0\">\r\n                  <h3 className=\"card-title text-white\">Fees Collection</h3>\r\n                  <h5 className=\"text-white mb-0\">\r\n                    <i className=\"fa fa-caret-up\"></i> 3280$\r\n                  </h5>\r\n                </div>\r\n                <div className=\"card-body p-0\">\r\n                  <FeeCollection />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-4 col-lg-12 col-sm-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header border-0 pb-0\">\r\n              <h2 className=\"card-title\">about me</h2>\r\n            </div>\r\n            <div className=\"card-body pb-0\">\r\n              <p>\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry.\r\n              </p>\r\n              <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item d-flex px-0 justify-content-between\">\r\n                  <strong>Gender</strong>\r\n                  <span className=\"mb-0\">Male</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex px-0 justify-content-between\">\r\n                  <strong>Education</strong>\r\n                  <span className=\"mb-0\">PHD</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex px-0 justify-content-between\">\r\n                  <strong>Designation</strong>\r\n                  <span className=\"mb-0\">Se. Professor</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex px-0 justify-content-between\">\r\n                  <strong>Operation Done</strong>\r\n                  <span className=\"mb-0\">120</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"card-footer pt-0 pb-0 text-center\">\r\n              <div className=\"row\">\r\n                <div className=\"col-4 pt-3 pb-3 border-right\">\r\n                  <h3 className=\"mb-1 text-primary\">150</h3>\r\n                  <span>Projects</span>\r\n                </div>\r\n                <div className=\"col-4 pt-3 pb-3 border-right\">\r\n                  <h3 className=\"mb-1 text-primary\">140</h3>\r\n                  <span>Uploads</span>\r\n                </div>\r\n                <div className=\"col-4 pt-3 pb-3\">\r\n                  <h3 className=\"mb-1 text-primary\">45</h3>\r\n                  <span>Tasks</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-xl-8 col-xxl-8 col-lg-12 col-sm-12\">\r\n          <div id=\"user-activity\" className=\"card\">\r\n            <Tab.Container defaultActiveKey=\"day\">\r\n              <div className=\"card-header border-0 pb-0 d-sm-flex d-block\">\r\n                <h4 className=\"card-title\">Visitor Activity</h4>\r\n                <div className=\"card-action mb-sm-0 my-2\">\r\n                  <Nav className=\"nav nav-tabs\" role=\"tablist\">\r\n                    <Nav.Item className=\"nav-item\">\r\n                      <Nav.Link\r\n                        className=\"nav-link \"\r\n                        data-toggle=\"tab\"\r\n                        to=\"/widget-basic\"\r\n                        role=\"tab\"\r\n                        eventKey=\"day\"\r\n                      >\r\n                        Day\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item className=\"nav-item\">\r\n                      <Nav.Link\r\n                        className=\"nav-link\"\r\n                        data-toggle=\"tab\"\r\n                        to=\"/widget-basic\"\r\n                        role=\"tab\"\r\n                        eventKey=\"month\"\r\n                      >\r\n                        Month\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item className=\"nav-item\">\r\n                      <Nav.Link\r\n                        className=\"nav-link\"\r\n                        data-toggle=\"tab\"\r\n                        to=\"/widget-basic\"\r\n                        role=\"tab\"\r\n                        eventKey=\"year\"\r\n                      >\r\n                        Year\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <Tab.Content className=\"tab-content\" id=\"myTabContent\">\r\n                  <Tab.Pane eventKey=\"day\" id=\"user\" role=\"tabpanel\">\r\n                    <VisitorActivity dataActive={0} />\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"month\" id=\"user\" role=\"tabpanel\">\r\n                    <VisitorActivity dataActive={1} />\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"year\" id=\"user\" role=\"tabpanel\">\r\n                    <VisitorActivity dataActive={2} />\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </div>\r\n            </Tab.Container>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"card overflow-hidden\">\r\n            <div className=\"card-body\">\r\n              <div className=\"text-center\">\r\n                <div className=\"profile-photo\">\r\n                  <img\r\n                   \r\n                    width=\"100\"\r\n                    className=\"img-fluid rounded-circle\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <h3 className=\"mt-4 mb-1\">Deangelo Sena</h3>\r\n                <p className=\"text-muted\">Senior Manager</p>\r\n                <Link\r\n                  className=\"btn btn-outline-primary btn-rounded mt-3 px-5\"\r\n                  to=\"/widget-basic\"\r\n                >\r\n                  Folllow\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card-footer pt-0 pb-0 text-center\">\r\n              <div className=\"row\">\r\n                <div className=\"col-4 pt-3 pb-3 border-right\">\r\n                  <h3 className=\"mb-1\">150</h3>\r\n                  <span>Follower</span>\r\n                </div>\r\n                <div className=\"col-4 pt-3 pb-3 border-right\">\r\n                  <h3 className=\"mb-1\">140</h3>\r\n                  <span>Place Stay</span>\r\n                </div>\r\n                <div className=\"col-4 pt-3 pb-3\">\r\n                  <h3 className=\"mb-1\">45</h3>\r\n                  <span>Reviews</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"card active_users\">\r\n            <div className=\"card-header bg-secondary border-0 d-block pb-0\">\r\n              <h4 className=\"card-title text-white\">Active Users</h4>\r\n              <ActiveUser />\r\n            </div>\r\n            <div className=\"card-body pt-0\">\r\n              <div className=\"list-group-flush mt-4\">\r\n                <div className=\"list-group-item bg-transparent d-flex justify-content-between px-0 py-1 font-weight-semi-bold border-top-0\">\r\n                  <p className=\"mb-0\">Top Active Pages</p>\r\n                  <p className=\"mb-0\">Active Users</p>\r\n                </div>\r\n                <div className=\"list-group-item bg-transparent d-flex justify-content-between px-0 py-1\">\r\n                  <p className=\"mb-0\">/bootstrap-themes/</p>\r\n                  <p className=\"mb-0\">3</p>\r\n                </div>\r\n                <div className=\"list-group-item bg-transparent d-flex justify-content-between px-0 py-1\">\r\n                  <p className=\"mb-0\">/tags/html5/</p>\r\n                  <p className=\"mb-0\">3</p>\r\n                </div>\r\n                <div className=\"list-group-item bg-transparent d-xxl-flex justify-content-between px-0 py-1 d-none\">\r\n                  <p className=\"mb-0\">/</p>\r\n                  <p className=\"mb-0\">2</p>\r\n                </div>\r\n                <div className=\"list-group-item bg-transparent d-xxl-flex justify-content-between px-0 py-1 d-none\">\r\n                  <p className=\"mb-0\">/preview/falcon/dashboard/</p>\r\n                  <p className=\"mb-0\">2</p>\r\n                </div>\r\n                <div className=\"list-group-item bg-transparent d-flex justify-content-between px-0 py-1\">\r\n                  <p className=\"mb-0\">/100-best-themes...all-time/</p>\r\n                  <p className=\"mb-0\">1</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-xl-4 col-lg-12 col-sm-12\">\r\n          <div className=\"card overflow-hidden\">\r\n            <div\r\n              className=\"text-center p-3 overlay-box \"\r\n              style={{ backgroundImage: `` }}\r\n            >\r\n              <div className=\"profile-photo\">\r\n                <img\r\n                  \r\n                  \r\n                  width=\"100\"\r\n                  className=\"m-auto img-fluid rounded-circle d-block\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <h3 className=\"mt-3 mb-1 text-white\">Deangelo Sena</h3>\r\n              <p className=\"text-white mb-0\">Senior Manager</p>\r\n            </div>\r\n            <ul className=\"list-group list-group-flush\">\r\n              <li className=\"list-group-item d-flex justify-content-between\">\r\n                <span className=\"mb-0\">Patient Gender</span>{\" \"}\r\n                <strong className=\"text-muted\">Female </strong>\r\n              </li>\r\n              <li className=\"list-group-item d-flex justify-content-between\">\r\n                <span className=\"mb-0\">Years Old</span>{\" \"}\r\n                <strong className=\"text-muted\">Age: 24 </strong>\r\n              </li>\r\n\t\t\t  <li className=\"list-group-item d-flex justify-content-between\">\r\n                <span className=\"mb-0\">Patient Height</span>{\" \"}\r\n                <strong className=\"text-muted\">1.5 M </strong>\r\n              </li>\r\n            </ul>\r\n            <div className=\"card-footer border-0 mt-0\">\r\n              <button className=\"btn btn-primary btn-lg btn-block\">\r\n                <i className=\"fa fa-bell-o\"></i> Reminder Alarm\r\n              </button>\r\n            </div>\r\n          </div>\r\n       \r\n\r\n */}\r\n </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","import React, { Component } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nclass VisitorActivity extends Component {\r\n  render() {\r\n    var activityData = [\r\n      [35, 18, 15, 35, 40, 20, 30, 25, 22, 20, 45, 35],\r\n\r\n      [50, 35, 10, 45, 40, 50, 60, 80, 10, 50, 34, 35],\r\n\r\n      [20, 35, 60, 45, 40, 70, 30, 80, 65, 70, 60, 20],\r\n\r\n      [25, 88, 25, 50, 70, 70, 60, 70, 50, 60, 50, 70],\r\n    ];\r\n    const data = {\r\n      labels: [ \"01\", \"02\", \"03\", \"04\",\"05\", \"06\",\"07\", \"08\",\"09\",\"10\",\"11\",\"12\",],\r\n      datasets: [\r\n        {\r\n          label: \"My First dataset\",\r\n          data: activityData[this.props.dataActive],\r\n          borderColor: \"rgba(14, 138, 116, 1)\",\r\n          borderWidth: \"0\",\r\n          backgroundColor: \"#0E8A74\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    const options = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n\r\n      legend: {\r\n        display: false,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              color: \"rgba(89, 59, 219,0.1)\",\r\n              drawBorder: true,\r\n            },\r\n            ticks: {\r\n              fontColor: \"#999\",\r\n            },\r\n          },\r\n        ],\r\n        xAxes: [\r\n          {\r\n            gridLines: {\r\n              display: false,\r\n              zeroLineColor: \"transparent\",\r\n            },\r\n            ticks: {\r\n              stepSize: 5,\r\n              fontColor: \"#999\",\r\n              fontFamily: \"Nunito, sans-serif\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        titleFontColor: \"#888\",\r\n        bodyFontColor: \"#555\",\r\n        titleFontSize: 12,\r\n        bodyFontSize: 15,\r\n        backgroundColor: \"rgba(256,256,256,0.95)\",\r\n        displayColors: true,\r\n        xPadding: 10,\r\n        yPadding: 7,\r\n        borderColor: \"rgba(220, 220, 220, 0.9)\",\r\n        borderWidth: 2,\r\n        caretSize: 6,\r\n        caretPadding: 10,\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div style={{ minHeight: \"290px\" }}>\r\n        <Bar\r\n          data={data}\r\n          width={this.props.width ? this.props.width : 433}\r\n          height={this.props.height ? this.props.height : 251}\r\n          options={options}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VisitorActivity;\r\n","import React from \"react\";\r\nimport { Grid, Segment, Label, Icon, List,Button, Card, Feed, Input } from 'semantic-ui-react'\r\n// Page titie\r\nimport {  Checkbox, Table } from 'semantic-ui-react'\r\n\r\n\r\nconst Widget = () => {\r\n  return (\r\n\r\n          <Grid columns='equal'>\r\n            \r\n          <Grid.Column>\r\n            <Segment>\r\n                <Label as='a' color='blue' ribbon>\r\n                  Recent Vitals\r\n                </Label>\r\n                  <br/>\r\n                  <List celled >\r\n                <List.Item>Pulse <span className=\"float-end\"><b>45mpb</b></span></List.Item>\r\n                <List.Item>Respiratory Rate <span className=\"float-end\"><b>41mpb</b></span></List.Item>\r\n                <List.Item>Temperature <span className=\"float-end\"><b>32<sub>0</sub>C</b></span></List.Item>\r\n                <List.Item>Blood Presure <span  className=\"float-end\"><b>332/30</b></span></List.Item>\r\n                <List.Item>Height <span  className=\"float-end\"><b>31.89m</b></span></List.Item>\r\n                <List.Item>Weight <span  className=\"float-end\"><b>376kg</b></span></List.Item>\r\n                </List>\r\n\r\n            </Segment>\r\n            <Segment>\r\n               \r\n                <Label as='a' color='black' ribbon>\r\n                  Conditions\r\n                </Label>\r\n                <br/>\r\n                <Label as='a'  color='white'  size=\"mini\" pointing>\r\n                  Laser Fever\r\n                </Label>\r\n                <Label as='a'  color='white'  size=\"mini\" pointing>\r\n                  Typoid Fever\r\n                </Label>\r\n                <Label as='a'  color='white'  size=\"mini\" pointing>\r\n                 Asthma\r\n                </Label>\r\n\r\n            </Segment>\r\n            <Segment>\r\n                <Label as='a' color='red' ribbon>\r\n                  Allergies\r\n                </Label>\r\n                  <br/><br/>\r\n                  <Label.Group color='blue'>\r\n                  \r\n                    <Label as='a'  size=\"mini\">dust</Label>\r\n                    <Label as='a'  size=\"mini\">smoke</Label>\r\n\r\n                  </Label.Group>\r\n\r\n            </Segment>\r\n          </Grid.Column>\r\n          <Grid.Column width={9}>\r\n          <Label as='a' color='black' ribbon>\r\n                  <b>Physical Examination</b>\r\n              </Label>\r\n            <Segment>\r\n            <div className=\"input-group input-group-sm mb-3\">\r\n                 \r\n                 <span className=\"input-group-text\">Encounter Date</span>\r\n              \r\n               <input type=\"date\" className=\"form-control\" />\r\n             </div>\r\n              <br/>\r\n              <div className=\"input-group input-group-sm mb-3\">\r\n                 \r\n                 <span className=\"input-group-text\">Visit Note</span>\r\n              \r\n                 <textarea className=\"form-control\"></textarea>\r\n             </div>\r\n             <br/>\r\n              <Label as='a' color='red' ribbon>\r\n                Presenting Complaints\r\n              </Label>\r\n              <Table color=\"red\" celled>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Complaints</Table.HeaderCell>\r\n                  <Table.HeaderCell>Onset Date</Table.HeaderCell>\r\n                  <Table.HeaderCell>Severity</Table.HeaderCell>\r\n                  <Table.HeaderCell>Date Resolved</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              <Table.Body>\r\n                <Table.Row>\r\n                  <Table.Cell><Input type=\"text\" fluid  placeholder='Encounter Date' /></Table.Cell>\r\n                  <Table.Cell><Input type=\"text\" fluid  placeholder='Encounter Date' /></Table.Cell>\r\n                  <Table.Cell><Input type=\"date\" fluid  placeholder='Encounter Date' /></Table.Cell>\r\n                  <Table.Cell><Input type=\"date\" fluid  placeholder='Encounter Date' /></Table.Cell>\r\n                </Table.Row>\r\n               \r\n              </Table.Body>\r\n\r\n              <Table.Footer>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>\r\n                  \r\n                  <Label as='a' color=\"blue\" size=\"tiny\">\r\n                    <Icon name='plus' /> Add More\r\n                  </Label>\r\n                  </Table.HeaderCell>\r\n                  \r\n                </Table.Row>\r\n              </Table.Footer>\r\n              </Table>\r\n              <br/>\r\n              <Label as='a' color='pink' ribbon>\r\n                Clinical Diagnosis\r\n              </Label>\r\n              <Table color=\"pink\" celled>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Condition</Table.HeaderCell>\r\n                  <Table.HeaderCell>\tOrder</Table.HeaderCell>\r\n                  <Table.HeaderCell>Certainty</Table.HeaderCell>\r\n                  <Table.HeaderCell></Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              <Table.Body>\r\n                <Table.Row>\r\n                  <Table.Cell><Input type=\"text\" fluid  placeholder='Encounter Date' /></Table.Cell>\r\n                  <Table.Cell><Input type=\"text\" fluid  placeholder='Encounter Date' /></Table.Cell>\r\n                  <Table.Cell><Input type=\"date\" fluid  placeholder='Encounter Date' /></Table.Cell>\r\n                  <Table.Cell></Table.Cell>\r\n                </Table.Row>\r\n               \r\n              </Table.Body>\r\n\r\n              <Table.Footer>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>\r\n                  \r\n                  <Label as='a' color=\"blue\" size=\"tiny\">\r\n                    <Icon name='plus' /> Add More\r\n                  </Label>\r\n                  </Table.HeaderCell>\r\n                  \r\n                </Table.Row>\r\n              </Table.Footer>\r\n              </Table>\r\n              <br/>\r\n              <Label as='a' color='teal' ribbon>\r\n                Lab Test \r\n              </Label>\r\n              <Table color=\"teal\" celled>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Lab Test Date</Table.HeaderCell>\r\n                  <Table.HeaderCell>Lab\tOrder</Table.HeaderCell>\r\n                  <Table.HeaderCell>Lab Test</Table.HeaderCell>\r\n                  <Table.HeaderCell>Piriority</Table.HeaderCell>\r\n                  <Table.HeaderCell>Order By</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              <Table.Body>\r\n                <Table.Row>\r\n                  <Table.Cell><Input type=\"text\" fluid  placeholder='Encounter Date' /></Table.Cell>\r\n                  <Table.Cell><Input type=\"text\" fluid  placeholder='Encounter Date' /></Table.Cell>\r\n                  <Table.Cell><Input type=\"date\" fluid  placeholder='Encounter Date' /></Table.Cell>\r\n                  <Table.Cell><Input type=\"date\" fluid  placeholder='Encounter Date' /></Table.Cell>\r\n                  <Table.Cell></Table.Cell>\r\n                </Table.Row>\r\n               \r\n              </Table.Body>\r\n\r\n              <Table.Footer>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>\r\n                  \r\n                  <Label as='a' color=\"blue\" size=\"tiny\">\r\n                    <Icon name='plus' /> Add Test\r\n                  </Label>\r\n                  </Table.HeaderCell>\r\n                  \r\n                </Table.Row>\r\n              </Table.Footer>\r\n              </Table>\r\n              <br/>\r\n              <Label as='a' color='purple' ribbon>\r\n                Medication Prescription \r\n              </Label>\r\n              <Table color=\"purple\" celled>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Lab Test Date</Table.HeaderCell>\r\n                  <Table.HeaderCell>Lab\tOrder</Table.HeaderCell>\r\n                  <Table.HeaderCell>Lab Test</Table.HeaderCell>\r\n                  <Table.HeaderCell>Piriority</Table.HeaderCell>\r\n                  <Table.HeaderCell>Order By</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              <Table.Body>\r\n                <Table.Row>\r\n                  <Table.Cell><Input type=\"text\" fluid  placeholder='Encounter Date' /></Table.Cell>\r\n                  <Table.Cell><Input type=\"text\" fluid  placeholder='Encounter Date' /></Table.Cell>\r\n                  <Table.Cell><Input type=\"date\" fluid  placeholder='Encounter Date' /></Table.Cell>\r\n                  <Table.Cell><Input type=\"date\" fluid  placeholder='Encounter Date' /></Table.Cell>\r\n                  <Table.Cell></Table.Cell>\r\n                </Table.Row>\r\n               \r\n              </Table.Body>\r\n\r\n              <Table.Footer>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>\r\n                  \r\n                  <Label as='a' color=\"blue\" size=\"tiny\">\r\n                    <Icon name='plus' /> Add New Drug Order\r\n                  </Label>\r\n                  </Table.HeaderCell>\r\n                  \r\n                </Table.Row>\r\n              </Table.Footer>\r\n              </Table>\r\n            </Segment>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Segment>\r\n            <List>\r\n                  <List.Item>\r\n                  <Button icon labelPosition='right' color='teal' fluid>\r\n                      <Icon name='external alternate' />\r\n                        Post Patient\r\n                    </Button>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                  <Button icon labelPosition='right' color='green' fluid>\r\n                      <Icon name='eye' />\r\n                        View History\r\n                    </Button>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                  <Button icon labelPosition='right' color='blue' fluid>\r\n                      <Icon name='calendar alternate' />\r\n                        Appointment \r\n                    </Button>\r\n                  </List.Item>\r\n            </List>\r\n            <Card>\r\n            <Card.Content>\r\n              <b>Previous Clinical Notes</b>\r\n            </Card.Content>\r\n            <Card.Content>\r\n              <Feed>\r\n                <Feed.Event>\r\n                  <Feed.Content>\r\n                    <Feed.Date content='20-03-2022' />\r\n                    <Feed.Summary>\r\n                      The malaria is plus 3 and and need more attention\r\n                    </Feed.Summary>\r\n                  </Feed.Content>\r\n                </Feed.Event>\r\n                <hr/>\r\n                <Feed.Event>\r\n                  <Feed.Content>\r\n                    <Feed.Date content='20-05-2022' />\r\n                    <Feed.Summary>\r\n                      Blood presure is too high\r\n                    </Feed.Summary>\r\n                  </Feed.Content>\r\n                </Feed.Event>\r\n              </Feed>\r\n            </Card.Content>\r\n          </Card>\r\n\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n    );\r\n  };\r\n\r\nexport default Widget;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport Consultation from './../Consultation/Home'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState(false);\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} />\r\n            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <Link to={\"/\"} >\r\n            <ButtonMui\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                //startIcon={<FaUserPlus size=\"10\"/>}\r\n\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n            </ButtonMui>\r\n          </Link>\r\n          <br/><br/><br/>\r\n          {activeContent===false ?\r\n              ( \r\n                <RecentHistory />\r\n                )\r\n                    :\r\n\r\n                (\r\n                  <Consultation />\r\n                )\r\n                    \r\n                }\r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Form, FormGroup, Label, Spinner,Input} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl} from \"./../../../api\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// library.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n}));\r\n\r\nconst schema = yup.object().shape({\r\n    dateOfRegistration: yup.date().required(),\r\n    hospitalNumber: yup.string().required(),\r\n    firstName: yup.string().required(),\r\n    middleName: yup.string().nullable(),\r\n    lastName: yup.string().required(),\r\n    sex: yup.number().required(),\r\n    employmentStatus: yup.number().required(),\r\n    highestQualification: yup.number().required(),\r\n    maritalStatus: yup.number().required(),\r\n    dob: yup.date().required(),\r\n    dateOfBirth: yup.string().required(),\r\n    age: yup.number(),\r\n    pnumber: yup.string().required(),\r\n    altPhonenumber: yup.string().nullable(),\r\n    email: yup.string().nullable(),\r\n    address: yup.string().nullable(),\r\n    landmark: yup.string().nullable(),\r\n    countryId: yup.number().required(),\r\n    stateId: yup.number().required(),\r\n    district: yup.number().nullable(),\r\n});\r\n\r\nconst UserRegistration = (props) => {\r\n    const { register, setValue, getValues, setError, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [stateUnitOptions, setStateUnitOptions]= useState([]);\r\n    const [districtUnitOptions, setDistrictUnitOptions]= useState([]);\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const location = useLocation();\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n    ///console.log(patientId)\r\n    const getNames = (relationship) => {\r\n        const surname = relationship.surname;\r\n        const firstName = relationship.firstname;\r\n        const otherName = relationship.otherName ? relationship.otherName : '';\r\n        return surname + ', ' + firstName + ' ' + otherName;\r\n    }\r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const getPhoneContactPoint = (contactPoint) => {\r\n        return contactPoint ? contactPoint.value : '';\r\n    };\r\n    const getAddress = (address) => {\r\n        return address && address.line && address.line.length > 0 ? address.line[0] : '';\r\n    };\r\n    const getPatient = useCallback(async () => {\r\n        if (patientId) {\r\n            const response = await axios.get(`${baseUrl}patient/${patientId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            const patient = response.data;\r\n            const contacts = patient.contact ? patient.contact : [];\r\n            setContacts(contacts.contact);\r\n            const identifiers = patient.identifier;\r\n            const address = patient.address;\r\n            const contactPoint = patient.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            const gender = patient.gender;\r\n            const employmentStatus = patient.employmentStatus;\r\n            const education = patient.education;\r\n            const maritalStatus = patient.maritalStatus;\r\n            setValue('dateOfRegistration', patient.dateOfRegistration);\r\n            setValue('firstName', patient.firstName);\r\n            setValue('middleName', patient.otherName);\r\n            setValue('lastName', patient.surname);\r\n            setValue('hospitalNumber', hospitalNumber ? hospitalNumber.value : '');\r\n            setValue('maritalStatus', maritalStatus.id);\r\n            setValue('employmentStatus', employmentStatus.id);\r\n            setValue('sex', gender.id);\r\n            setValue('highestQualification', education.id);\r\n            setValue('dob', format(new Date(patient.dateOfBirth), 'yyyy-MM-dd'));\r\n            if (country) {\r\n                setValue('countryId', country.countryId);\r\n                const stateOptions = await loadOrganisationUnitsByParentId(country.countryId);\r\n                setStateUnitOptions(stateOptions);\r\n                setValue('stateId', country.stateId);\r\n                const districtOptions = await loadOrganisationUnitsByParentId(country.stateId);\r\n                setDistrictUnitOptions(districtOptions);\r\n                setValue('district', country.district);\r\n                setValue('address', country.city);\r\n                setValue('landmark', country.line[0]);\r\n            }\r\n            setValue('pnumber', phone ? phone.value : null);\r\n            setValue('email', email ? email.value : null);\r\n            setValue('altPhonenumber', altphone ? altphone.value : null);\r\n        }\r\n    }, []);\r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    const handleSaveRelationship = (e) => {\r\n        const relationshipType = getValues(\"relationshipType\");\r\n        const cfirstName = getValues(\"cfirstName\");\r\n        const cmiddleName = getValues(\"cmiddleName\");\r\n        const clastName = getValues(\"clastName\");\r\n        const contactPhoneNumber = getValues(\"contactPhoneNumber\");\r\n        const contactEmail = getValues(\"contactEmail\");\r\n        const contactAddress = getValues(\"contactAddress\");\r\n        if (!relationshipType) {\r\n            setError(\"relationshipType\", {  type: 'custom', message: 'Relationship is required' }, { shouldFocus: true });\r\n            return;\r\n        }\r\n        if (!cfirstName) {\r\n            setError(\"cfirstName\", {  type: 'custom', message: 'FirstName is required' }, { shouldFocus: true });\r\n            return;\r\n        }\r\n        if (!clastName) {\r\n            setError(\"clastName\", {  type: 'custom', message: 'LastName is required' }, { shouldFocus: true });\r\n            return;\r\n        }\r\n\r\n        const contact = {\r\n            \"address\": {\r\n                \"line\": [\r\n                    contactAddress\r\n                ],\r\n            },\r\n            \"contactPoint\": {\r\n                \"type\": \"phone\",\r\n                \"value\": contactPhoneNumber\r\n            },\r\n            \"firstName\": cfirstName,\r\n            \"fullName\": cfirstName + ' ' + cmiddleName + ' ' + clastName,\r\n            \"relationshipId\": relationshipType,\r\n            \"surname\": clastName,\r\n            \"otherName\": cmiddleName\r\n        };\r\n        if (editRelative != null) {\r\n            contacts.splice(editRelative, 1);\r\n            setContacts(contacts.concat(contact));\r\n        } else {\r\n            setContacts(contacts.concat(contact));\r\n        }\r\n        setShowRelative(false);\r\n    };\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            const patientForm = {\r\n                active: true,\r\n                address: [\r\n                    {\r\n                        \"city\": data.address,\r\n                        \"countryId\": data.countryId,\r\n                        \"district\": data.district,\r\n                        \"line\": [\r\n                            data.landmark\r\n                        ],\r\n                        \"organisationUnitId\": 0,\r\n                        \"postalCode\": \"\",\r\n                        \"stateId\": data.stateId\r\n                    }\r\n                ],\r\n                contact: contacts,\r\n                contactPoint: [],\r\n                dateOfBirth: format(new Date(data.dob), 'yyyy-MM-dd'),\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: data.firstName,\r\n                genderId: data.sex,\r\n                identifier: [\r\n                    {\r\n                        \"assignerId\": 1,\r\n                        \"type\": \"HospitalNumber\",\r\n                        \"value\": data.hospitalNumber\r\n                    }\r\n                ],\r\n                otherName: data.middleName,\r\n                maritalStatusId: data.maritalStatus,\r\n                surname: data.lastName,\r\n                educationId: data.highestQualification,\r\n                employmentStatusId: data.employmentStatus,\r\n                dateOfRegistration: format(new Date(data.dateOfRegistration), 'yyyy-MM-dd'),\r\n                isDateOfBirthEstimated: data.dateOfBirth == \"Actual\" ? false : true,\r\n                //hivEnrollment:objValues,\r\n            };\r\n            const phone = {\r\n                \"type\": \"phone\",\r\n                \"value\": data.pnumber\r\n            };\r\n            if (data.email) {\r\n                const email = {\r\n                    \"type\": \"email\",\r\n                    \"value\": data.email\r\n                }\r\n                patientForm.contactPoint.push(email);\r\n            }\r\n            if (data.altPhonenumber) {\r\n                const altPhonenumber = {\r\n                    \"type\": \"altphone\",\r\n                    \"value\": data.altPhonenumber\r\n                }\r\n                patientForm.contactPoint.push(altPhonenumber);\r\n            }\r\n            patientForm.contactPoint.push(phone);\r\n            if (patientId) {\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.post(`${baseUrl}hiv/patient`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            } else {\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.post(`${baseUrl}hiv/patient`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            }\r\n            toast.success(\"Record save successful\");\r\n            history.push('/');\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n    const onError = (errors) => {\r\n        console.error(errors)\r\n    }\r\n    const handleEditRelative = (relative, index) => {\r\n        setValue(\"relationshipType\", relative.relationshipId);\r\n        setValue(\"cfirstName\", relative.firstname);\r\n        setValue(\"cmiddleName\", relative.otherName);\r\n        setValue(\"clastName\", relative.surname);\r\n        setValue(\"contactPhoneNumber\", relative.contactPoint ? relative.contactPoint.value : '');\r\n        setValue(\"contactAddress\", relative.address && relative.address.line && relative.address.line.length > 0 ? relative.address.line[0] : '');\r\n        setShowRelative(true);\r\n        setEditRelative(index);\r\n    };\r\n    const handleDeleteRelative = (index) => {\r\n        setTimeout(() => {\r\n            contacts.splice(index, 1);\r\n            setContacts(contacts);\r\n            setShowRelative(true);\r\n            setShowRelative(false);\r\n        }, 500);\r\n    };\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/GENDER`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n          \r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n    const onCountryChange = async (e) => {\r\n        if (e.target.value) {\r\n            const stateOptions = await loadOrganisationUnitsByParentId(e.target.value);\r\n            setStateUnitOptions(stateOptions);\r\n        } else {\r\n            setStateUnitOptions([]);\r\n        }\r\n    };\r\n    const onStateChange = async (e) => {\r\n        if (e.target.value) {\r\n            const districtOptions = await loadOrganisationUnitsByParentId(e.target.value);\r\n            setDistrictUnitOptions(districtOptions);\r\n        } else {\r\n            setDistrictUnitOptions([]);\r\n        }\r\n    };\r\n    \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            setValue('age', age_now);\r\n        } else {\r\n            setValue('age', null);\r\n        }\r\n    }\r\n\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dob = estDob.add((e.target.value * -1), 'years');\r\n            setValue('dob', format(new Date(dob.toDate()), 'yyyy-MM-dd'));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();\r\n        getPatient();\r\n    }, [loadGenders, loadMaritalStatus, loadEducation, loadOccupation, loadRelationships, loadTopLevelCountry, getPatient]);\r\n\r\n    let genderRows = null;\r\n    let maritalStatusRows = null;\r\n    let educationRows = null;\r\n    let occupationRows = null;\r\n    let relationshipRows = null;\r\n    let topLevelUnitCountryRows = null;\r\n    let stateRows = null;\r\n    let districtRows = null;\r\n    if (genders && genders.length > 0) {\r\n        genderRows = genders.map((gender, index) => (\r\n            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n        ));\r\n    }\r\n    if (maritalStatusOptions && maritalStatusOptions.length > 0) {\r\n        maritalStatusRows = maritalStatusOptions.map((maritalStatusOption, index) => (\r\n            <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n        ));\r\n    }\r\n    if (educationOptions && educationOptions.length > 0) {\r\n        educationRows = educationOptions.map((educationOption, index) => (\r\n            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n        ));\r\n    }\r\n    if (occupationOptions && occupationOptions.length > 0) {\r\n        occupationRows = occupationOptions.map((occupationOption, index) => (\r\n            <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n        ));\r\n    }\r\n    if (relationshipOptions && relationshipOptions.length > 0) {\r\n        relationshipRows = relationshipOptions.map((relationshipOption, index) => (\r\n            <option key={relationshipOption.id} value={relationshipOption.id}>{relationshipOption.display}</option>\r\n        ));\r\n    }\r\n    if (topLevelUnitCountryOptions && topLevelUnitCountryOptions.length > 0) {\r\n        topLevelUnitCountryRows = topLevelUnitCountryOptions.map((topLevelUnitCountryOption, index) => (\r\n            <option key={topLevelUnitCountryOption.id} value={topLevelUnitCountryOption.id}>{topLevelUnitCountryOption.name}</option>\r\n        ));\r\n    }\r\n    if (stateUnitOptions && stateUnitOptions.length > 0) {\r\n        stateRows = stateUnitOptions.map((stateUnitOption, index) => (\r\n            <option key={stateUnitOption.id} value={stateUnitOption.id}>{stateUnitOption.name}</option>\r\n        ));\r\n    }\r\n    if (districtUnitOptions && districtUnitOptions.length > 0) {\r\n        districtRows = districtUnitOptions.map((districtUnitOption, index) => (\r\n            <option key={districtUnitOption.id} value={districtUnitOption.id}>{districtUnitOption.name}</option>\r\n        ));\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        history.push('/');\r\n    };\r\n\r\n    //HIV INFORMATION\r\n    const patientObj = props.patientObj;\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrer:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\"});\r\n    //const [saving, setSaving] = useState(false);\r\n    //const [errors, setErrors] = useState({});\r\n    const [carePoints, setCarePoints] = useState([]);\r\n    const [sourceReferral, setSourceReferral] = useState([]);\r\n    const [hivStatus, setHivStatus] = useState([]);\r\n    const [enrollSetting, setEnrollSetting] = useState([]);\r\n    const [tbStatus, setTbStatus] = useState([]);\r\n    const [kP, setKP] = useState([]);\r\n    const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n    //set ro show the facility name field if is transfer in \r\n    const [transferIn, setTransferIn] = useState(false);\r\n    // display the OVC number if patient is enrolled into OVC \r\n    const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n\r\n    useEffect(() => {         \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n      }, []);\r\n\r\n      //Get list of CareEntryPoint\r\n      const CareEntryPoint =()=>{\r\n             axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });\r\n            \r\n      }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n    }\r\n     //Get list of HIV STATUS ENROLLMENT\r\n     const HivStatus =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setHivStatus(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n      //Get list of HIV STATUS ENROLLMENT\r\n      const EnrollmentSetting =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setEnrollSetting(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n      //Get list of HIV STATUS ENROLLMENT\r\n      const TBStatus =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setTbStatus(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n      //Get list of KP\r\n      const KP =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/KP_TYPE`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setKP(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n      //Get list of KP\r\n      const PregnancyStatus =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPregnancyStatus(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n    const handleInputChange = e => {\r\n        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        \r\n    }\r\n          \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }  \r\n    \r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end\"\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form onSubmit={handleSubmit(onSubmit, onError)}>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <h5 className=\"card-title\">{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration*</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        max={today}\r\n                                                        {...register(\"dateOfRegistration\")}\r\n                                                    />\r\n                                                    {errors.dateOfRegistration && <p>{errors.dateOfRegistration.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        {...register(\"hospitalNumber\")}\r\n                                                    />\r\n                                                    {errors.hospitalNumber && <p>{errors.hospitalNumber.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        {...register(\"firstName\")}\r\n                                                    />\r\n                                                    {errors.firstName && <p>{errors.firstName.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        {...register(\"middleName\")}\r\n                                                    />\r\n                                                    {errors.middleName && <p>{errors.middleName.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        {...register(\"lastName\")}\r\n                                                    />\r\n                                                    {errors.lastName && <p>{errors.lastName.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"sex\"\r\n                                                        id=\"sex\"\r\n                                                        {...register(\"sex\")}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        {genderRows}\r\n                                                    </select>\r\n                                                    {errors.sex && <p>{errors.sex.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Employment Status *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"employmentStatus\"\r\n                                                        id=\"employmentStatus\"\r\n                                                        {...register(\"employmentStatus\")}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        {occupationRows}\r\n                                                    </select>\r\n                                                    {errors.lastName && <p>{errors.lastName.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Highest Qualification *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"highestQualification\"\r\n                                                        id=\"highestQualification\"\r\n                                                        {...register(\"highestQualification\")}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        {educationRows}\r\n                                                    </select>\r\n                                                    {errors.highestQualification && <p>{errors.highestQualification.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Marital Status</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"maritalStatus\"\r\n                                                        id=\"maritalStatus\"\r\n                                                        {...register(\"maritalStatus\")}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        {maritalStatusRows}\r\n                                                    </select>\r\n                                                    {errors.maritalStatus && <p>{errors.maritalStatus.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                {...register(\"dateOfBirth\")}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                {...register(\"dateOfBirth\")}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        {...register(\"dob\")}\r\n                                                        onChange={(e) => handleDobChange(e)}\r\n                                                    />\r\n                                                    {errors.dob && <p>{errors.dob.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        {...register(\"age\")}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={(e) => handleAgeChange(e)}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <h5 className=\"card-title\">Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"tel\"\r\n                                                    name=\"pnumber\"\r\n                                                    id=\"pnumber\"\r\n                                                    {...register(\"pnumber\")}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                />\r\n                                                {errors.pnumber && <p>{errors.pnumber.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"tel\"\r\n                                                    name=\"altPhoneNumber\"\r\n                                                    id=\"altPhoneNumber\"\r\n                                                    {...register(\"altPhonenumber\")}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                />\r\n                                                {errors.altPhonenumber && <p>{errors.altPhonenumber.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    {...register(\"email\")}\r\n                                                />\r\n                                                {errors.email && <p>{errors.email.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"country\"\r\n                                                    id=\"country\"\r\n                                                    {...register(\"countryId\")}\r\n                                                    onChange={(e) => onCountryChange(e)}>\r\n                                                    <option value={\"\"}></option>\r\n                                                    {topLevelUnitCountryRows}\r\n                                                </select>\r\n                                                {errors.country && <p>{errors.country.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    {...register(\"stateId\")}\r\n                                                    onChange={(e) => onStateChange(e)}>\r\n                                                    <option value={\"\"}></option>\r\n                                                    {stateRows}\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    {...register(\"district\")}>\r\n                                                    <option value={\"\"}></option>\r\n                                                    {districtRows}\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    {...register(\"address\")}\r\n                                                />\r\n                                                {errors.address && <p>{errors.address.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    {...register(\"landmark\")}\r\n                                                />\r\n                                                {errors.landmark && <p>{errors.landmark.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <h5 className=\"card-title\">Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }}>\r\n                                                        <thead>\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index}>\r\n                                                                    <td>{ getRelationship(item.relationshipId) }</td>\r\n                                                                    <td>{ getNames(item) }</td>\r\n                                                                    <td>{ getPhoneContactPoint(item.contactPoint) }</td>\r\n                                                                    <td>{ getAddress(item.address) }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={(e) => handleEditRelative(item, index)}>\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}>\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipType\"\r\n                                                                            id=\"relationshipType\"\r\n                                                                            {...register(\"relationshipType\")}>\r\n                                                                            <option value={\"\"}></option>\r\n                                                                            {relationshipRows}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipType && <p>{errors.relationshipType.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"cfirstName\"\r\n                                                                            id=\"cfirstName\"\r\n                                                                            {...register(\"cfirstName\")}\r\n                                                                        />\r\n                                                                        {errors.cfirstName && <p>{errors.cfirstName.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"cmiddleName\"\r\n                                                                            id=\"cmiddleName\"\r\n                                                                            {...register(\"cmiddleName\")}\r\n                                                                        />\r\n                                                                        {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"clastName\"\r\n                                                                            id=\"clastName\"\r\n                                                                            {...register(\"clastName\")}\r\n                                                                        />\r\n                                                                        {errors.clastName && <p>{errors.clastName.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"contactPhoneNumber\"\r\n                                                                            id=\"contactPhoneNumber\"\r\n                                                                            {...register(\"contactPhoneNumber\")}\r\n                                                                        />\r\n                                                                        {errors.contactPhoneNumber && <p>{errors.contactPhoneNumber.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"contactEmail\"\r\n                                                                            id=\"contactEmail\"\r\n                                                                            {...register(\"contactEmail\")}\r\n                                                                        />\r\n                                                                        {errors.contactEmail && <p>{errors.contactEmail.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"contactAddress\"\r\n                                                                            id=\"contactAddress\"\r\n                                                                            {...register(\"contactAddress\")}\r\n                                                                        />\r\n                                                                        {errors.contactAddress && <p>{errors.contactAddress.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <h5 className=\"card-title\">HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        required\r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                    type=\"date\"\r\n                                    name=\"dateOfRegistration\"\r\n                                    id=\"dateOfRegistration\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.dateOfRegistration}\r\n                                    required\r\n                                    />\r\n                                   \r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </Input>\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                    }\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </Input>\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <DateTimePicker\r\n                                        time={false}\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        value={objValues.regDate}\r\n                                        onChange={value1 =>\r\n                                            setObjValues({ ...objValues, dateConfirmedHiv: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                        }\r\n                                        \r\n                                            max={new Date()}\r\n                                    />\r\n                                       \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrer\"\r\n                                        id=\"sourceOfReferrer\"\r\n                                        value={objValues.sourceOfReferrer}\r\n                                        onChange={handleInputChange}\r\n                                        required\r\n                                        >\r\n                                         <option value=\"\"> </option>\r\n                  \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrer !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrer}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        onChange={handleInputChange}\r\n                                        required\r\n                                        >\r\n                                         <option value=\"\"> </option>\r\n                  \r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                           \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                    <FormGroup>\r\n                                    <Label> Pregnancy </Label>\r\n                                    <Input\r\n                                        type = \"select\"\r\n                                        name = \"pregnancyStatusId\"\r\n                                        id = \"pregnancyStatusId\"\r\n                                        value = {objValues.pregnancyStatusId}\r\n                                        onChange = {handleInputChange}\r\n                                        required\r\n                                        >\r\n                                        < option\r\n                                        value = \"\" > </option>\r\n\r\n                                        {\r\n                                            pregnancyStatus.map((value) => (\r\n                                                < option\r\n                                            key = {value.id}\r\n                                            value = {value.id} >\r\n                                                {value.display}\r\n                                                </option>\r\n                                        ))\r\n                                        }\r\n                                    </Input>\r\n                                    \r\n                                      \r\n                                  </FormGroup>  \r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of LMP </Label>\r\n                                    <DateTimePicker\r\n                                        time={false}\r\n                                        name=\"dateOfLpm\"\r\n                                        id=\"dateOfLpm\"\r\n                                        value={values.regDate}\r\n                                        onChange={value1 =>\r\n                                            setObjValues({ ...objValues, dateOfLpm: moment(value1).format(\"YYYY-MM-DD\") })\r\n                                        }\r\n\r\n                                            max={new Date()}\r\n                                    />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        required\r\n                                        >\r\n                                         <option value=\"\"> </option>\r\n                  \r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >KP Target Group</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        required\r\n                                        >\r\n                                         <option value=\"\"> </option>\r\n                  \r\n                                            {kP.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        \r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"\r\n                                        onChange={handleCheckBox}\r\n                                        //value={values.ovc_enrolled}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.ovcNumber}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {userDetail ===null ? (\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n                                )\r\n                                :\r\n                                (\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n                                )\r\n                            }\r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration\r\n","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\n\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/register-patient\">\r\n            {/* <consultation /> */}\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}