{"version":3,"sources":["api.js","main/webapp/components/RegisterPatient.js","main/webapp/components/CaptureBiometric.js","main/webapp/components/PatientCard.js","main/webapp/components/PatientDashboard.js","main/webapp/components/Dashboard.js","main/webapp/components/PatientVitals.js","main/webapp/components/Add-Patient-Vitals.js","App.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","library","add","faCheckSquare","faCoffee","faEdit","faTrash","useStyles","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","flexGrow","maxWidth","demo","backgroundColor","palette","background","default","inline","schema","yup","shape","dateOfRegistration","required","hospitalNumber","firstName","middleName","nullable","lastName","sex","employmentStatus","highestQualification","maritalStatus","dob","dateOfBirth","age","pnumber","altPhonenumber","email","address","landmark","countryId","stateId","district","UserRegistration","props","patientId","_useForm","useForm","resolver","yupResolver","register","setValue","getValues","setError","handleSubmit","errors","formState","_useState","useState","Date","toISOString","substr","replace","_useState2","Object","slicedToArray","today","_useState3","_useState4","contacts","setContacts","_useState5","_useState6","saving","_useState7","_useState8","ageDisabled","setAgeDisabled","_useState9","_useState10","showRelative","setShowRelative","_useState11","_useState12","editRelative","setEditRelative","_useState13","_useState14","genders","setGenders","_useState15","_useState16","maritalStatusOptions","setMaritalStatusOptions","_useState17","_useState18","educationOptions","setEducationOptions","_useState19","_useState20","occupationOptions","setOccupationOptions","_useState21","_useState22","relationshipOptions","setRelationshipOptions","_useState23","_useState24","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","_useState25","_useState26","stateUnitOptions","setStateUnitOptions","_useState27","_useState28","districtUnitOptions","setDistrictUnitOptions","userDetail","state","user","classes","history","useHistory","locationState","useLocation","getPatient","useCallback","asyncToGenerator","regenerator_default","a","mark","_callee","response","patient","_contacts","identifiers","contactPoint","phone","altphone","country","gender","education","stateOptions","districtOptions","wrap","_context","prev","next","axios","concat","baseUrl","headers","Authorization","sent","data","contact","identifier","find","obj","type","length","otherName","surname","value","id","format","loadOrganisationUnitsByParentId","city","line","stop","onSubmit","_ref2","_callee2","patientForm","_context2","active","organisationUnitId","postalCode","deceased","deceasedDateTime","genderId","assignerId","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","push","put","post","toast","success","t0","console","log","_x","apply","this","arguments","loadGenders","_callee3","_context3","loadMaritalStatus","_callee4","_context4","loadEducation","_callee5","_context5","loadOccupation","_callee6","_context6","loadRelationships","_callee7","_context7","loadTopLevelCountry","_callee8","_context8","_ref9","_callee9","parentId","_context9","abrupt","_x2","onCountryChange","_ref10","_callee10","e","_context10","target","_x3","onStateChange","_ref11","_callee11","_context11","_x4","handleDateOfBirthChange","useEffect","genderRows","maritalStatusRows","educationRows","occupationRows","relationshipRows","topLevelUnitCountryRows","stateRows","districtRows","map","index","react_default","createElement","key","maritalStatusOption","educationOption","occupationOption","relationshipOption","topLevelUnitCountryOption","name","stateUnitOption","districtUnitOption","Fragment","react_toastify","autoClose","hideProgressBar","Card","className","CardContent","react_router_dom","to","pathname","Button","variant","color","startIcon","index_esm","style","textTransform","Form","error","FormGroup","Label","for","assign","max","message","defaultChecked","onChange","birthDate","age_now","getFullYear","m","getMonth","getDate","handleDobChange","disabled","currentDate","setDate","setMonth","moment","toDate","handleAgeChange","placeholder","item","relationshipId","relationship","getRelationship","firstname","onClick","relative","handleEditRelative","index_es","icon","setTimeout","splice","handleDeleteRelative","relationshipType","cfirstName","cmiddleName","clastName","contactPhoneNumber","contactEmail","contactAddress","fullName","shouldFocus","Add_default","Spinner","Save_default","Cancel_default","& > *","input","fontSize","CaptureBiometric","biometricDevices","biometricType","templateType","device","objValues","setObjValues","fingerType","setFingerType","_React$useState","React","_React$useState2","loading","setLoading","_React$useState3","_React$useState4","showCapture","setshowCapture","_React$useState5","_React$useState6","tryAgain","setTryAgain","_React$useState7","_React$useState8","setSuccess","setErrors","capturedFingered","setCapturedFingered","buttonSx","objectSpread","bgcolor","green","&:hover","TemplateType","then","catch","es_Card","CardBody","Modal","isOpen","modalstatus","toggle","togglestatus","size","ModalHeader","ModalBody","Row","Col","md","Input","deviceName","errorType","errorName","_ref","defineProperty","preventDefault","temp","values","every","x","validate","ERROR","toConsumableArray","Fingerprint_default","sm","offset","Box","sx","position","Fab","aria-label","Check_default","CircularProgress","top","left","zIndex","Typography_Typography","gutterBottom","component","red","List","celled","horizontal","Item","Content","capturedObj","setPatientBiometricStatus","withStyles","heading","typography","pxToRem","secondaryHeading","text","secondary","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","link","primary","main","textDecoration","patientObj","permissions","modal","setModal","biometricStatus","patientBiometricStatus","setBiometricStatus","devices","setDevices","Accordion","defaultExpanded","AccordionSummary","root2","getHospitalNumber","split","calculate_age","Label_Label","Detail","phoneContact","getPhone","AccordionDetails","Button_Button","content","label","basic","pointing","as","Typography","includes","tag","Divider","AccordionActions","components_CaptureBiometric","CheckBoxOutlineBlank_default","checkedIcon","CheckBox_default","appointmentColumns","field","headerName","editable","appointments","newDate","control","checkinStatus","setCheckinStatus","modalCheckOut","setModalCheckOut","services","setServices","checkInServices","selectedServices","setSelectedServices","patientVisits","setPatientVisits","facilityId","personId","visitEndDate","visitStartDate","serviceIds","visitDto","checkInObj","loadServices","Swal","fire","title","loadPatientVisits","visits","checkOutDate","service","MenuItem","moduleServiceCode","moduleServiceName","panes","menuItem","render","Tab","Pane","dist_default","columns","filtering","isLoading","row","checkInDate","status","options","headerStyle","exportButton","searchFieldAlignment","pageSizeOptions","pageSize","debounceInterval","DataGrid","rows","rowsPerPageOptions","checkboxSelection","disableSelectionOnClick","onCancelCheckIn","onCancelCheckOut","checkInServicesID","Card_Card","CardContent_CardContent","components_PatientCard","material_Button_Button","Paper","gridRowGap","Grid","container","xs","FormControl","Autocomplete","multiple","getOptionLabel","option","i","renderOption","_ref5","selected","Checkbox","marginRight","checked","renderInput","params","TextField","getVisitID","tableIcons","Add","forwardRef","ref","AddBox_default","Check","icons_Check_default","Clear","Clear_default","Delete","DeleteOutline_default","DetailPanel","ChevronRight_default","Edit","Edit_default","Export","SaveAlt_default","Filter","FilterList_default","FirstPage","FirstPage_default","LastPage","LastPage_default","NextPage","PreviousPage","ChevronLeft_default","ResetSearch","Search","Search_default","SortArrow","ArrowUpward_default","ThirdStateCheck","Remove_default","ViewColumn","ViewColumn_default","PatientList","patients","setPatients","setPermissions","setPatient","userPermission","loadPatients","onDelete","delete","reload","onCancelDelete","fa_index_esm","icons","undefined","actions","menu_button_esm","border","borderRadius","aria-hidden","md_index_esm","currentId","searchFieldStyle","margingLeft","ModalFooter","PatientVitals","justifyContent","icons_material_Add_default","AddPatientVitals","InData","bodyWeight","Weight","diastolic","Diastolic","encounterDate","DateOfVitalSigns","Height","systolic","Systolic","timer","fullWidth","LocalizationProvider","dateAdapter","AdapterDateFns","dist_index_esm","defaultValue","_ref2$field","fieldState","DatePicker","helperText","_ref3","_ref3$field","_ref4","_ref4$field","_ref5$field","_ref6","_ref6$field","_ref7","_ref7$field","_ref8","_ref8$field","_ref9$field","App","react_router","path","RegisterPatientPage","PatientDashboardPage","PatientVitalsPage","AddPatientVitalsPage","Dashboard","components_PatientDashboard","RegisterPatient","components_PatientVitals","Add_Patient_Vitals","ReactDOM","StrictMode","document","getElementById"],"mappings":"wgBAAcA,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QAASC,IAAI,OAC3DC,EAAM,WCwBnBC,IAAQC,IAAIC,IAAeC,IAAUC,IAAQC,KAE7C,IAAMC,EAAYC,YAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACFC,SAAU,EACVC,SAAU,KAEdC,KAAM,CACFC,gBAAiBpB,EAAMqB,QAAQC,WAAWC,SAE9CC,OAAQ,CACJpB,QAAS,aAIXqB,EAASC,MAAaC,MAAM,CAC9BC,mBAAoBF,MAAWG,WAC/BC,eAAgBJ,MAAaG,WAC7BE,UAAWL,MAAaG,WACxBG,WAAYN,MAAaO,WACzBC,SAAUR,MAAaG,WACvBM,IAAKT,MAAaG,WAClBO,iBAAkBV,MAAaG,WAC/BQ,qBAAsBX,MAAaG,WACnCS,cAAeZ,MAAaG,WAC5BU,IAAKb,MAAWG,WAChBW,YAAad,MAAaG,WAC1BY,IAAKf,MACLgB,QAAShB,MAAaG,WACtBc,eAAgBjB,MAAaO,WAC7BW,MAAOlB,MAAaO,WACpBY,QAASnB,MAAaO,WACtBa,SAAUpB,MAAaO,WACvBc,UAAWrB,MAAaG,WACxBmB,QAAStB,MAAaG,WACtBoB,SAAUvB,MAAaO,aA6/BZiB,EA1/BU,SAACC,GAAU,IAwB5BC,EAxB4BC,EACyDC,YAAQ,CAC7FC,SAAUC,YAAY/B,KADlBgC,EADwBJ,EACxBI,SAAUC,EADcL,EACdK,SAAUC,EADIN,EACJM,UAAWC,EADPP,EACOO,SAAUC,EADjBR,EACiBQ,aAA2BC,EAD5CT,EAC+BU,UAAaD,OAD5CE,EAINC,oBAAS,IAAIC,MAAOC,cAAcC,OAAO,EAAG,IAAIC,QAAQ,IAAK,MAJvDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAIzBS,EAJyBH,EAAA,GAAAI,GAAAJ,EAAA,GAKAL,mBAAS,KALTU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAKzBE,EALyBD,EAAA,GAKfE,EALeF,EAAA,GAAAG,EAMJb,oBAAS,GANLc,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAMzBE,EANyBD,EAAA,GAAAE,GAAAF,EAAA,GAOMd,oBAAS,IAPfiB,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAOzBE,EAPyBD,EAAA,GAOZE,EAPYF,EAAA,GAAAG,EAQQpB,oBAAS,GARjBqB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAQzBE,GARyBD,EAAA,GAQXE,GARWF,EAAA,GAAAG,GASQxB,mBAAS,MATjByB,GAAAnB,OAAAC,EAAA,EAAAD,CAAAkB,GAAA,GASzBE,GATyBD,GAAA,GASXE,GATWF,GAAA,GAAAG,GAUH5B,mBAAS,IAVN6B,GAAAvB,OAAAC,EAAA,EAAAD,CAAAsB,GAAA,GAUzBE,GAVyBD,GAAA,GAUhBE,GAVgBF,GAAA,GAAAG,GAWuBhC,mBAAS,IAXhCiC,GAAA3B,OAAAC,EAAA,EAAAD,CAAA0B,GAAA,GAWzBE,GAXyBD,GAAA,GAWHE,GAXGF,GAAA,GAAAG,GAYepC,mBAAS,IAZxBqC,GAAA/B,OAAAC,EAAA,EAAAD,CAAA8B,GAAA,GAYzBE,GAZyBD,GAAA,GAYPE,GAZOF,GAAA,GAAAG,GAaiBxC,mBAAS,IAb1ByC,GAAAnC,OAAAC,EAAA,EAAAD,CAAAkC,GAAA,GAazBE,GAbyBD,GAAA,GAaNE,GAbMF,GAAA,GAAAG,GAcqB5C,mBAAS,IAd9B6C,GAAAvC,OAAAC,EAAA,EAAAD,CAAAsC,GAAA,GAczBE,GAdyBD,GAAA,GAcJE,GAdIF,GAAA,GAAAG,GAemChD,mBAAS,IAf5CiD,GAAA3C,OAAAC,EAAA,EAAAD,CAAA0C,GAAA,GAezBE,GAfyBD,GAAA,GAeGE,GAfHF,GAAA,GAAAG,GAgBepD,mBAAS,IAhBxBqD,GAAA/C,OAAAC,EAAA,EAAAD,CAAA8C,GAAA,GAgBzBE,GAhByBD,GAAA,GAgBPE,GAhBOF,GAAA,GAAAG,GAiBqBxD,mBAAS,IAjB9ByD,GAAAnD,OAAAC,EAAA,EAAAD,CAAAkD,GAAA,GAiBzBE,GAjByBD,GAAA,GAiBJE,GAjBIF,GAAA,GAkB1BG,GAAa1E,EAAM/D,UAAY+D,EAAM/D,SAAS0I,MAAQ3E,EAAM/D,SAAS0I,MAAMC,KAAO,KAClFC,GAAUlI,IACVmI,GAAUC,cAGVC,GADWC,cACcN,MAE/B1E,EAAY+E,GAAgBA,GAAc/E,UAAY,KAEtD,IAgBMiF,GAAaC,sBAAW/D,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAC,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAlG,EAAAmG,EAAAlH,EAAAmH,EAAArG,EAAAsG,EAAAC,EAAAC,EAAAhH,EAAAiH,EAAA/G,EAAAgH,EAAAC,EAAA,OAAAf,EAAAC,EAAAe,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACvBvG,EADuB,CAAAqG,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAEAC,IAAMtK,IAAN,GAAAuK,OAAaC,EAAb,YAAAD,OAA+BzG,GAAa,CAAE2G,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAFpF,UAEjB2J,EAFiBa,EAAAQ,KAGjBpB,EAAUD,EAASsB,KACnBtF,EAAWiE,EAAQsB,QAAUtB,EAAQsB,QAAU,GACrDtF,EAAYD,EAASuF,SACfpB,EAAcF,EAAQuB,WACtBvH,EAAUgG,EAAQhG,QAClBmG,EAAeH,EAAQG,aACvBlH,EAAiBiH,EAAYqB,WAAWC,KAAK,SAAAC,GAAG,MAAgB,kBAAZA,EAAIC,OACxDtB,EAAQD,EAAaA,aAAaqB,KAAK,SAAAC,GAAG,MAAgB,SAAZA,EAAIC,OAClD3H,EAAQoG,EAAaA,aAAaqB,KAAK,SAAAC,GAAG,MAAgB,SAAZA,EAAIC,OAClDrB,EAAWF,EAAaA,aAAaqB,KAAK,SAAAC,GAAG,MAAgB,YAAZA,EAAIC,OACrDpB,EAAUtG,GAAWA,EAAQA,SAAWA,EAAQA,QAAQ2H,OAAS,EAAI3H,EAAQA,QAAQ,GAAK,KAC1FuG,EAASP,EAAQO,OACjBhH,EAAmByG,EAAQzG,iBAC3BiH,EAAYR,EAAQQ,UACpB/G,EAAgBuG,EAAQvG,cAC9BoB,EAAS,qBAAsBmF,EAAQjH,oBACvC8B,EAAS,YAAamF,EAAQ9G,WAC9B2B,EAAS,aAAcmF,EAAQ4B,WAC/B/G,EAAS,WAAYmF,EAAQ6B,SAC7BhH,EAAS,iBAAkB5B,EAAiBA,EAAe6I,MAAQ,IACnEjH,EAAS,gBAAiBpB,EAAcsI,IACxClH,EAAS,mBAAoBtB,EAAiBwI,IAC9ClH,EAAS,MAAO0F,EAAOwB,IACvBlH,EAAS,uBAAwB2F,EAAUuB,IAC3ClH,EAAS,MAAOmH,YAAO,IAAI3G,KAAK2E,EAAQrG,aAAc,gBAClD2G,EA5BmB,CAAAM,EAAAE,KAAA,gBA6BnBjG,EAAS,YAAayF,EAAQpG,WA7BX0G,EAAAE,KAAA,GA8BQmB,GAAgC3B,EAAQpG,WA9BhD,eA8BbuG,EA9BaG,EAAAQ,KA+BnBzC,GAAoB8B,GACpB5F,EAAS,UAAWyF,EAAQnG,SAhCTyG,EAAAE,KAAA,GAiCWmB,GAAgC3B,EAAQnG,SAjCnD,QAiCbuG,EAjCaE,EAAAQ,KAkCnBrC,GAAuB2B,GACvB7F,EAAS,WAAYyF,EAAQlG,UAC7BS,EAAS,UAAWyF,EAAQ4B,MAC5BrH,EAAS,WAAYyF,EAAQ6B,KAAK,IArCf,QAuCvBtH,EAAS,UAAWuF,EAAQA,EAAM0B,MAAQ,MAC1CjH,EAAS,QAASd,EAAQA,EAAM+H,MAAQ,MACxCjH,EAAS,iBAAkBwF,EAAWA,EAASyB,MAAQ,MAzChC,yBAAAlB,EAAAwB,SAAAtC,MA2C5B,IAoDGuC,GAAQ,eAAAC,EAAA5G,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAA0C,EAAOlB,GAAP,IAAAmB,EAAApC,EAAArG,EAAAD,EAAA,OAAA6F,EAAAC,EAAAe,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,UAAA2B,EAAA5B,KAAA,EAEH2B,EAAc,CAChBE,QAAQ,EACR1I,QAAS,CACL,CACIkI,KAAQb,EAAKrH,QACbE,UAAamH,EAAKnH,UAClBE,SAAYiH,EAAKjH,SACjB+H,KAAQ,CACJd,EAAKpH,UAET0I,mBAAsB,EACtBC,WAAc,GACdzI,QAAWkH,EAAKlH,UAGxBmH,QAASvF,EACToE,aAAc,GACdxG,YAAa,IAAI0B,KAAKgG,EAAK3H,KAC3BmJ,UAAU,EACVC,iBAAkB,KAClB5J,UAAWmI,EAAKnI,UAChB6J,SAAU1B,EAAK/H,IACfiI,WAAY,CACR,CACIyB,WAAc,EACdtB,KAAQ,iBACRI,MAAST,EAAKpI,iBAGtB2I,UAAWP,EAAKlI,WAChB8J,gBAAiB5B,EAAK5H,cACtBoI,QAASR,EAAKhI,SACd6J,YAAa7B,EAAK7H,qBAClB2J,mBAAoB9B,EAAK9H,iBACzBR,mBAAoBsI,EAAKtI,mBACzBqK,uBAA4C,UAApB/B,EAAK1H,aAE3ByG,EAAQ,CACVsB,KAAQ,QACRI,MAAST,EAAKxH,SAEdwH,EAAKtH,QACCA,EAAQ,CACV2H,KAAQ,QACRI,MAAST,EAAKtH,OAElByI,EAAYrC,aAAakD,KAAKtJ,IAE9BsH,EAAKvH,iBACCA,EAAiB,CACnB4H,KAAQ,WACRI,MAAST,EAAKvH,gBAElB0I,EAAYrC,aAAakD,KAAKvJ,IAElC0I,EAAYrC,aAAakD,KAAKjD,IAC1B7F,EA1DK,CAAAkI,EAAA3B,KAAA,gBA2DL0B,EAAYT,GAAK,KA3DZU,EAAA3B,KAAA,GA4DkBC,IAAMuC,IAAN,GAAAtC,OAAaC,EAAb,YAAAD,OAA+BzG,GAAaiI,EAAa,CAAEtB,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MA5DnH,QAAAqM,EAAArB,KAAAqB,EAAA3B,KAAA,wBAAA2B,EAAA3B,KAAA,GA8DkBC,IAAMwC,KAAN,GAAAvC,OAAcC,EAAd,YAAiCuB,EAAa,CAAEtB,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MA9DxG,QAAAqM,EAAArB,KAAA,QAgEToC,IAAMC,QAAQ,+BACdrE,GAAQiE,KAAK,KAjEJZ,EAAA3B,KAAA,iBAAA2B,EAAA5B,KAAA,GAAA4B,EAAAiB,GAAAjB,EAAA,SAmETkB,QAAQC,IAARnB,EAAAiB,IAnES,yBAAAjB,EAAAL,SAAAG,EAAA,kBAAH,gBAAAsB,GAAA,OAAAvB,EAAAwB,MAAAC,KAAAC,YAAA,GA4FRC,GAAcxE,sBAAW/D,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAC,SAAAqE,IAAA,IAAAnE,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAArD,MAAA,cAAAqD,EAAAtD,KAAA,EAAAsD,EAAArD,KAAA,EAEDC,IAAMtK,IAAN,GAAAuK,OAAaC,EAAb,kCAAsD,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAF7F,OAElB2J,EAFkBoE,EAAA/C,KAGxBjE,GAAW4C,EAASsB,MAHI8C,EAAArD,KAAA,eAAAqD,EAAAtD,KAAA,EAAAsD,EAAAT,GAAAS,EAAA,iCAAAA,EAAA/B,SAAA8B,EAAA,iBAO7B,IACGE,GAAoB3E,sBAAW/D,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAC,SAAAwE,IAAA,IAAAtE,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAA2D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,cAAAwD,EAAAzD,KAAA,EAAAyD,EAAAxD,KAAA,EAEPC,IAAMtK,IAAN,GAAAuK,OAAaC,EAAb,0CAA8D,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAF/F,OAExB2J,EAFwBuE,EAAAlD,KAG9B7D,GAAwBwC,EAASsB,MAHHiD,EAAAxD,KAAA,eAAAwD,EAAAzD,KAAA,EAAAyD,EAAAZ,GAAAY,EAAA,iCAAAA,EAAAlC,SAAAiC,EAAA,iBAOnC,IACGE,GAAgB9E,sBAAW/D,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAC,SAAA2E,IAAA,IAAAzE,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAA3D,MAAA,cAAA2D,EAAA5D,KAAA,EAAA4D,EAAA3D,KAAA,EAEHC,IAAMtK,IAAN,GAAAuK,OAAaC,EAAb,qCAAyD,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAF9F,OAEpB2J,EAFoB0E,EAAArD,KAG1BzD,GAAoBoC,EAASsB,MAHHoD,EAAA3D,KAAA,eAAA2D,EAAA5D,KAAA,EAAA4D,EAAAf,GAAAe,EAAA,iCAAAA,EAAArC,SAAAoC,EAAA,iBAO/B,IACGE,GAAiBjF,sBAAW/D,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAC,SAAA8E,IAAA,IAAA5E,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAAiE,GAAA,cAAAA,EAAA/D,KAAA+D,EAAA9D,MAAA,cAAA8D,EAAA/D,KAAA,EAAA+D,EAAA9D,KAAA,EAEJC,IAAMtK,IAAN,GAAAuK,OAAaC,EAAb,sCAA0D,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAF9F,OAErB2J,EAFqB6E,EAAAxD,KAG3BrD,GAAqBgC,EAASsB,MAHHuD,EAAA9D,KAAA,eAAA8D,EAAA/D,KAAA,EAAA+D,EAAAlB,GAAAkB,EAAA,iCAAAA,EAAAxC,SAAAuC,EAAA,iBAOhC,IACGE,GAAoBpF,sBAAW/D,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAC,SAAAiF,IAAA,IAAA/E,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,cAAAiE,EAAAlE,KAAA,EAAAkE,EAAAjE,KAAA,EAETC,IAAMtK,IAAN,GAAAuK,OAAaC,EAAb,wCAA4D,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAF3F,OAE1B2J,EAF0BgF,EAAA3D,KAGhCjD,GAAuB4B,EAASsB,MAHA0D,EAAAjE,KAAA,eAAAiE,EAAAlE,KAAA,EAAAkE,EAAArB,GAAAqB,EAAA,iCAAAA,EAAA3C,SAAA0C,EAAA,iBAOnC,IACGE,GAAsBvF,sBAAW/D,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAC,SAAAoF,IAAA,IAAAlF,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAAAoE,EAAApE,KAAA,EACbC,IAAMtK,IAAN,GAAAuK,OAAaC,EAAb,kDAAsE,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MADjG,OAC9B2J,EAD8BmF,EAAA9D,KAEpC7C,GAA8BwB,EAASsB,MAFH,wBAAA6D,EAAA9C,SAAA6C,MAGrC,IACGhD,GAA+B,eAAAkD,EAAAzJ,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAAuF,EAAOC,GAAP,IAAAtF,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAA2E,GAAA,cAAAA,EAAAzE,KAAAyE,EAAAxE,MAAA,cAAAwE,EAAAxE,KAAA,EACbC,IAAMtK,IAAN,GAAAuK,OAAaC,EAAb,iDAAAD,OAAoEqE,GAAY,CAAEnE,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAD3G,cAC9B2J,EAD8BuF,EAAAlE,KAAAkE,EAAAC,OAAA,SAE7BxF,EAASsB,MAFoB,wBAAAiE,EAAAlD,SAAAgD,MAAH,gBAAAI,GAAA,OAAAL,EAAArB,MAAAC,KAAAC,YAAA,GAI/ByB,GAAe,eAAAC,EAAAhK,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAA8F,EAAOC,GAAP,IAAAnF,EAAA,OAAAd,EAAAC,EAAAe,KAAA,SAAAkF,GAAA,cAAAA,EAAAhF,KAAAgF,EAAA/E,MAAA,WAChB8E,EAAEE,OAAOhE,MADO,CAAA+D,EAAA/E,KAAA,eAAA+E,EAAA/E,KAAA,EAEWmB,GAAgC2D,EAAEE,OAAOhE,OAFpD,OAEVrB,EAFUoF,EAAAzE,KAGhBzC,GAAoB8B,GAHJoF,EAAA/E,KAAA,eAKhBnC,GAAoB,IALJ,wBAAAkH,EAAAzD,SAAAuD,MAAH,gBAAAI,GAAA,OAAAL,EAAA5B,MAAAC,KAAAC,YAAA,GAQfgC,GAAa,eAAAC,EAAAvK,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAAqG,EAAON,GAAP,IAAAlF,EAAA,OAAAf,EAAAC,EAAAe,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,WACd8E,EAAEE,OAAOhE,MADK,CAAAqE,EAAArF,KAAA,eAAAqF,EAAArF,KAAA,EAEgBmB,GAAgC2D,EAAEE,OAAOhE,OAFzD,OAERpB,EAFQyF,EAAA/E,KAGdrC,GAAuB2B,GAHTyF,EAAArF,KAAA,eAKd/B,GAAuB,IALT,wBAAAoH,EAAA/D,SAAA8D,MAAH,gBAAAE,GAAA,OAAAH,EAAAnC,MAAAC,KAAAC,YAAA,GAwBbqC,GAA0B,SAACT,GACP,UAAlBA,EAAEE,OAAOhE,MACTvF,GAAe,GACU,aAAlBqJ,EAAEE,OAAOhE,OAChBvF,GAAe,IAevB+J,oBAAU,WACNrC,KACAG,KACAG,KACAG,KACAG,KACAG,KACAxF,MACD,CAACyE,GAAaG,GAAmBG,GAAeG,GAAgBG,GAAmBG,GAAqBxF,KAE3G,IAAI+G,GAAa,KACbC,GAAoB,KACpBC,GAAgB,KAChBC,GAAiB,KACjBC,GAAmB,KACnBC,GAA0B,KAC1BC,GAAY,KACZC,GAAe,KACf5J,IAAWA,GAAQyE,OAAS,IAC5B4E,GAAarJ,GAAQ6J,IAAI,SAACxG,EAAQyG,GAAT,OACrBC,EAAArH,EAAAsH,cAAA,UAAQC,IAAK5G,EAAOwB,GAAID,MAAOvB,EAAOwB,IAAKxB,EAAOhJ,YAGtD+F,IAAwBA,GAAqBqE,OAAS,IACtD6E,GAAoBlJ,GAAqByJ,IAAI,SAACK,EAAqBJ,GAAtB,OACzCC,EAAArH,EAAAsH,cAAA,UAAQC,IAAKC,EAAoBrF,GAAID,MAAOsF,EAAoBrF,IAAKqF,EAAoB7P,YAG7FmG,IAAoBA,GAAiBiE,OAAS,IAC9C8E,GAAgB/I,GAAiBqJ,IAAI,SAACM,EAAiBL,GAAlB,OACjCC,EAAArH,EAAAsH,cAAA,UAAQC,IAAKE,EAAgBtF,GAAID,MAAOuF,EAAgBtF,IAAKsF,EAAgB9P,YAGjFuG,IAAqBA,GAAkB6D,OAAS,IAChD+E,GAAiB5I,GAAkBiJ,IAAI,SAACO,EAAkBN,GAAnB,OACnCC,EAAArH,EAAAsH,cAAA,UAAQC,IAAKG,EAAiBvF,GAAID,MAAOwF,EAAiBvF,IAAKuF,EAAiB/P,YAGpF2G,IAAuBA,GAAoByD,OAAS,IACpDgF,GAAmBzI,GAAoB6I,IAAI,SAACQ,EAAoBP,GAArB,OACvCC,EAAArH,EAAAsH,cAAA,UAAQC,IAAKI,EAAmBxF,GAAID,MAAOyF,EAAmBxF,IAAKwF,EAAmBhQ,YAG1F+G,IAA8BA,GAA2BqD,OAAS,IAClEiF,GAA0BtI,GAA2ByI,IAAI,SAACS,EAA2BR,GAA5B,OACrDC,EAAArH,EAAAsH,cAAA,UAAQC,IAAKK,EAA0BzF,GAAID,MAAO0F,EAA0BzF,IAAKyF,EAA0BC,SAG/G/I,IAAoBA,GAAiBiD,OAAS,IAC9CkF,GAAYnI,GAAiBqI,IAAI,SAACW,EAAiBV,GAAlB,OAC7BC,EAAArH,EAAAsH,cAAA,UAAQC,IAAKO,EAAgB3F,GAAID,MAAO4F,EAAgB3F,IAAK2F,EAAgBD,SAGjF3I,IAAuBA,GAAoB6C,OAAS,IACpDmF,GAAehI,GAAoBiI,IAAI,SAACY,EAAoBX,GAArB,OACnCC,EAAArH,EAAAsH,cAAA,UAAQC,IAAKQ,EAAmB5F,GAAID,MAAO6F,EAAmB5F,IAAK4F,EAAmBF,SAQ9F,OACIR,EAAArH,EAAAsH,cAAAD,EAAArH,EAAAgI,SAAA,KACIX,EAAArH,EAAAsH,cAACW,EAAA,EAAD,CAAgBC,UAAW,IAAMC,iBAAe,IAChDd,EAAArH,EAAAsH,cAACc,EAAA,EAAD,CAAMC,UAAW9I,GAAQrH,YACrBmP,EAAArH,EAAAsH,cAACgB,EAAA,EAAD,KACIjB,EAAArH,EAAAsH,cAACiB,EAAA,EAAD,CACIC,GAAI,CACAC,SAAU,IACVpJ,MAAO,UAEXgI,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNP,UAAU,oBACVQ,UAAWxB,EAAArH,EAAAsH,cAACwB,EAAA,EAAD,OAEXzB,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAAEC,cAAe,eAA9B,WAGR3B,EAAArH,EAAAsH,cAAA,WACAD,EAAArH,EAAAsH,cAAA,WACAD,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,uBACXhB,EAAArH,EAAAsH,cAAC2B,EAAA,EAAD,CAAMxG,SAAUrH,EAAaqH,GA9MjC,SAACpH,GACb0I,QAAQmF,MAAM7N,MA8MMgM,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,QACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,eACXhB,EAAArH,EAAAsH,cAAA,MAAIe,UAAU,cAA2B,OAAbjJ,GAAoB,oBAAsB,0BAG1EiI,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,aACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,cACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,sBAAX,yBACAhC,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,OACL+F,KAAK,qBACL1F,GAAG,qBACHoH,IAAKvN,GACDhB,EAAS,wBAEhBK,EAAOlC,oBAAsBkO,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOlC,mBAAmBqQ,WAIpEnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,aAAX,iBACAhC,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,OACL+F,KAAK,iBACL1F,GAAG,kBACCnH,EAAS,oBAEhBK,EAAOhC,gBAAkBgO,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOhC,eAAemQ,YAKhEnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,aAAX,gBACAhC,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,OACL+F,KAAK,YACL1F,GAAG,aACCnH,EAAS,eAEhBK,EAAO/B,WAAa+N,EAAArH,EAAAsH,cAAA,SAAIjM,EAAO/B,UAAUkQ,WAIlDnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,oBACA/B,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,OACL+F,KAAK,aACL1F,GAAG,cACCnH,EAAS,gBAEhBK,EAAO9B,YAAc8N,EAAArH,EAAAsH,cAAA,SAAIjM,EAAO9B,WAAWiQ,WAIpDnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,oBACA/B,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,OACL+F,KAAK,WACL1F,GAAG,YACCnH,EAAS,cAEhBK,EAAO5B,UAAY4N,EAAArH,EAAAsH,cAAA,SAAIjM,EAAO5B,SAAS+P,YAKpDnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,cACA/B,EAAArH,EAAAsH,cAAA,SAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVR,KAAK,MACL1F,GAAG,OACCnH,EAAS,QAEbqM,EAAArH,EAAAsH,cAAA,UAAQpF,MAAO,KACdyE,IAEJtL,EAAO3B,KAAO2N,EAAArH,EAAAsH,cAAA,SAAIjM,EAAO3B,IAAI8P,WAItCnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,4BACA/B,EAAArH,EAAAsH,cAAA,SAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVR,KAAK,mBACL1F,GAAG,oBACCnH,EAAS,qBAEbqM,EAAArH,EAAAsH,cAAA,UAAQpF,MAAO,KACd4E,IAEJzL,EAAO5B,UAAY4N,EAAArH,EAAAsH,cAAA,SAAIjM,EAAO5B,SAAS+P,WAIhDnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,gCACA/B,EAAArH,EAAAsH,cAAA,SAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVR,KAAK,uBACL1F,GAAG,wBACCnH,EAAS,yBAEbqM,EAAArH,EAAAsH,cAAA,UAAQpF,MAAO,KACd2E,IAEJxL,EAAOzB,sBAAwByN,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOzB,qBAAqB4P,YAK5EnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAW,OACZhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,uBACA/B,EAAArH,EAAAsH,cAAA,SAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVR,KAAK,gBACL1F,GAAG,iBACCnH,EAAS,kBAEbqM,EAAArH,EAAAsH,cAAA,UAAQpF,MAAO,KACd0E,IAEJvL,EAAOxB,eAAiBwN,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOxB,cAAc2P,WAI1DnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,sBACA/B,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,SACXhB,EAAArH,EAAAsH,cAAA,aACID,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIxH,KAAK,QACLI,MAAM,SACN2F,KAAK,cACL4B,gBAAc,GACVzO,EAAS,eALjB,CAMI0O,SAAU,SAAC1D,GAAD,OAAOS,GAAwBT,OAPjD,YAWJqB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,SACXhB,EAAArH,EAAAsH,cAAA,aACID,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIxH,KAAK,QACLI,MAAM,YACN2F,KAAK,eACD7M,EAAS,eAJjB,CAKI0O,SAAU,SAAC1D,GAAD,OAAOS,GAAwBT,OANjD,iBAaZqB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,aACA/B,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,OACL+F,KAAK,MACL1F,GAAG,MACHoH,IAAKvN,GACDhB,EAAS,OANjB,CAOI0O,SAAU,SAAC1D,GAAD,OApTtC,SAACA,GACrB,GAAIA,EAAEE,OAAOhE,MAAO,CAChB,IAAMlG,EAAQ,IAAIP,KACZkO,EAAY,IAAIlO,KAAKuK,EAAEE,OAAOhE,OAChC0H,EAAU5N,EAAM6N,cAAgBF,EAAUE,cACxCC,EAAI9N,EAAM+N,WAAaJ,EAAUI,YACnCD,EAAI,GAAY,IAANA,GAAW9N,EAAMgO,UAAYL,EAAUK,YACjDJ,IAEJ3O,EAAS,MAAO2O,QAEhB3O,EAAS,MAAO,MAyS6CgP,CAAgBjE,OAEpC3K,EAAOvB,KAAOuN,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOvB,IAAI0P,WAItCnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,YACA/B,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,SACL+F,KAAK,MACL1F,GAAG,OACCnH,EAAS,OALjB,CAMIkP,SAAUxN,EACVgN,SAAU,SAAC1D,GAAD,OA7StC,SAACA,GACrB,IAAKtJ,GAAesJ,EAAEE,OAAOhE,MAAO,CAChC,IAAMiI,EAAc,IAAI1O,KACxB0O,EAAYC,QAAQ,IACpBD,EAAYE,SAAS,GACrB,IACMvQ,EADSwQ,EAAOH,EAAYzO,eACf1E,KAAuB,EAAlBgP,EAAEE,OAAOhE,MAAa,SAC9CjH,EAAS,MAAOmH,YAAO,IAAI3G,KAAK3B,EAAIyQ,UAAW,gBAsScC,CAAgBxE,aAS7DqB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,QACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,eACXhB,EAAArH,EAAAsH,cAAA,MAAIe,UAAU,cAAd,oBAGJhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,aACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAW,OACZhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,uBACA/B,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,MACL+F,KAAK,UACL1F,GAAG,WACCnH,EAAS,WALjB,CAMIyP,YAAY,qBAEfpP,EAAOpB,SAAWoN,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOpB,QAAQuP,WAI9CnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,uBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,0BACA/B,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,MACL+F,KAAK,iBACL1F,GAAG,kBACCnH,EAAS,kBALjB,CAMIyP,YAAY,qBAEfpP,EAAOnB,gBAAkBmN,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOnB,eAAesP,WAI5DnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,uBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,cACA/B,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,QACL+F,KAAK,QACL1F,GAAG,SACCnH,EAAS,WAEhBK,EAAOlB,OAASkN,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOlB,MAAMqP,YAK9CnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,gBACA/B,EAAArH,EAAAsH,cAAA,SAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,OACL+F,KAAK,UACL1F,GAAG,WACCnH,EAAS,aALjB,CAMI0O,SAAU,SAAC1D,GAAD,OAAOH,GAAgBG,MACjCqB,EAAArH,EAAAsH,cAAA,UAAQpF,MAAO,KACd8E,IAEJ3L,EAAOqF,SAAW2G,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOqF,QAAQ8I,WAI9CnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,cACA/B,EAAArH,EAAAsH,cAAA,SAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,OACL+F,KAAK,UACL1F,GAAG,WACCnH,EAAS,WALjB,CAMI0O,SAAU,SAAC1D,GAAD,OAAOI,GAAcJ,MAC/BqB,EAAArH,EAAAsH,cAAA,UAAQpF,MAAO,KACd+E,MAKbI,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,8BACA/B,EAAArH,EAAAsH,cAAA,SAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,OACL+F,KAAK,WACL1F,GAAG,YACCnH,EAAS,aACbqM,EAAArH,EAAAsH,cAAA,UAAQpF,MAAO,KACdgF,OAMjBG,EAAArH,EAAAsH,cAAA,OAAKe,UAAW,OACZhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,uBACA/B,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,OACL+F,KAAK,UACL1F,GAAG,WACCnH,EAAS,aAEhBK,EAAOjB,SAAWiN,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOjB,QAAQoP,WAI9CnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,wBACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,iBACA/B,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,OACL+F,KAAK,WACL1F,GAAG,YACCnH,EAAS,cAEhBK,EAAOhB,UAAYgN,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOhB,SAASmP,cAO5DnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,QACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,eACXhB,EAAArH,EAAAsH,cAAA,MAAIe,UAAU,cAAd,+BAEJhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,aACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OAEPlM,GAAYA,EAAS4F,OAAS,GAC1BsF,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,uBACXhB,EAAArH,EAAAsH,cAAA,SAAOyB,MAAO,CAAEhR,MAAO,SACnBsP,EAAArH,EAAAsH,cAAA,aACAD,EAAArH,EAAAsH,cAAA,UACID,EAAArH,EAAAsH,cAAA,+BACAD,EAAArH,EAAAsH,cAAA,kBACAD,EAAArH,EAAAsH,cAAA,mBACAD,EAAArH,EAAAsH,cAAA,qBACAD,EAAArH,EAAAsH,cAAA,uBAGJD,EAAArH,EAAAsH,cAAA,aACCnL,EAASgL,IAAI,SAACuD,EAAMtD,GACjB,OACIC,EAAArH,EAAAsH,cAAA,MAAIC,IAAKmD,EAAKtD,OACVC,EAAArH,EAAAsH,cAAA,UAhvBxC,SAACqD,GACrB,IAAMC,EAAetM,GAAoBsD,KAAK,SAAAC,GAAG,OAAIA,EAAIM,IAAMwI,IAC/D,OAAOC,EAAeA,EAAajT,QAAU,GA8uBqBkT,CAAgBH,EAAKC,iBAC3BtD,EAAArH,EAAAsH,cAAA,WAvvB9CsD,EAuvB6DF,GAtvB9CzI,QAGZ,KAFC2I,EAAaE,UAEK,KADlBF,EAAa5I,UAAY4I,EAAa5I,UAAY,KAqvBRqF,EAAArH,EAAAsH,cAAA,WA9uBlC/G,EA8uB6DmK,EAAKnK,cA7uBtEA,EAAa2B,MAAQ,IA8uBiBmF,EAAArH,EAAAsH,cAAA,WA5uB5ClN,EA4uB6DsQ,EAAKtQ,UA3uBhEA,EAAQmI,MAAQnI,EAAQmI,KAAKR,OAAS,EAAI3H,EAAQmI,KAAK,GAAK,IA4uBlB8E,EAAArH,EAAAsH,cAAA,UACID,EAAArH,EAAAsH,cAAA,UAAQxF,KAAK,SACLuG,UAAU,2CACV0C,QAAS,SAAC/E,GAAD,OArkB1D,SAACgF,EAAU5D,GAClCnM,EAAS,mBAAoB+P,EAASL,gBACtC1P,EAAS,aAAc+P,EAASF,WAChC7P,EAAS,cAAe+P,EAAShJ,WACjC/G,EAAS,YAAa+P,EAAS/I,SAC/BhH,EAAS,qBAAsB+P,EAASzK,aAAeyK,EAASzK,aAAa2B,MAAQ,IACrFjH,EAAS,iBAAkB+P,EAAS5Q,SAAW4Q,EAAS5Q,QAAQmI,MAAQyI,EAAS5Q,QAAQmI,KAAKR,OAAS,EAAIiJ,EAAS5Q,QAAQmI,KAAK,GAAK,IACtIxF,IAAgB,GAChBI,GAAgBiK,GA6jBwE6D,CAAmBP,EAAMtD,KAC7CC,EAAArH,EAAAsH,cAAC4D,EAAA,EAAD,CAAiBC,KAAK,UAJ9B,WAOI9D,EAAArH,EAAAsH,cAAA,UACIxF,KAAK,SACLuG,UAAU,kCACV0C,QAAS,SAAC/E,GAAD,OAlkBpD,SAACoB,GAC1BgE,WAAW,WACPjP,EAASkP,OAAOjE,EAAO,GACvBhL,EAAYD,GACZY,IAAgB,GAChBA,IAAgB,IACjB,KA4jBiFuO,CAAqBlE,KACrCC,EAAArH,EAAAsH,cAAC4D,EAAA,EAAD,CAAiBC,KAAK,aAxvB3E,IAAC/Q,EAHUmG,EAVZqK,OAgxBkBvD,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,uBAEPvL,IACIuK,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,QACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,aACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,oBAAX,uBACAhC,EAAArH,EAAAsH,cAAA,SAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVR,KAAK,mBACL1F,GAAG,oBACCnH,EAAS,qBACbqM,EAAArH,EAAAsH,cAAA,UAAQpF,MAAO,KACd6E,IAEJ1L,EAAOkQ,kBAAoBlE,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOkQ,iBAAiB/B,WAIhEnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,cAAX,gBACAhC,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,OACL+F,KAAK,aACL1F,GAAG,cACCnH,EAAS,gBAEhBK,EAAOmQ,YAAcnE,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOmQ,WAAWhC,WAIpDnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,oBACA/B,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,OACL+F,KAAK,cACL1F,GAAG,eACCnH,EAAS,iBAEhBK,EAAOoQ,aAAepE,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOoQ,YAAYjC,WAItDnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,oBACA/B,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,OACL+F,KAAK,YACL1F,GAAG,aACCnH,EAAS,eAEhBK,EAAOqQ,WAAarE,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOqQ,UAAUlC,YAKtDnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,sBAAX,gBACAhC,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,OACL+F,KAAK,qBACL1F,GAAG,sBACCnH,EAAS,wBAEhBK,EAAOsQ,oBAAsBtE,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOsQ,mBAAmBnC,WAIpEnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,gBAAX,SACAhC,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,OACL+F,KAAK,eACL1F,GAAG,gBACCnH,EAAS,kBAEhBK,EAAOuQ,cAAgBvE,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOuQ,aAAapC,WAIxDnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,4BACXhB,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,kBAAX,WACAhC,EAAArH,EAAAsH,cAAA,QAAAxL,OAAAwN,OAAA,CACIjB,UAAU,eACVvG,KAAK,OACL+F,KAAK,iBACL1F,GAAG,kBACCnH,EAAS,oBAEhBK,EAAOwQ,gBAAkBxE,EAAArH,EAAAsH,cAAA,SAAIjM,EAAOwQ,eAAerC,YAKhEnC,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,IACXhB,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACI5G,KAAK,SACL6G,QAAQ,YACRC,MAAM,UACNP,UAAW9I,GAAQjH,OACnByS,QAp0BrC,SAAC/E,GAC5B,IAAMuF,EAAmBrQ,EAAU,oBAC7BsQ,EAAatQ,EAAU,cACvBuQ,EAAcvQ,EAAU,eACxBwQ,EAAYxQ,EAAU,aACtByQ,EAAqBzQ,EAAU,sBAE/B2Q,GADe3Q,EAAU,gBACRA,EAAU,mBACjC,GAAKqQ,EAIL,GAAKC,EAIL,GAAKE,EAAL,CAKA,IAAMhK,EAAU,CACZtH,QAAW,CACPmI,KAAQ,CACJsJ,IAGRtL,aAAgB,CACZuB,KAAQ,QACRI,MAASyJ,GAEbrS,UAAakS,EACbM,SAAYN,EAAa,IAAMC,EAAc,IAAMC,EACnDf,eAAkBY,EAClBtJ,QAAWyJ,EACX1J,UAAayJ,GAEG,MAAhBvO,IACAf,EAASkP,OAAOnO,GAAc,GAC9Bd,EAAYD,EAASiF,OAAOM,KAE5BtF,EAAYD,EAASiF,OAAOM,IAEhC3E,IAAgB,QA1BZ5B,EAAS,YAAa,CAAG2G,KAAM,SAAU0H,QAAS,wBAA0B,CAAEuC,aAAa,SAJ3F5Q,EAAS,aAAc,CAAG2G,KAAM,SAAU0H,QAAS,yBAA2B,CAAEuC,aAAa,SAJ7F5Q,EAAS,mBAAoB,CAAG2G,KAAM,SAAU0H,QAAS,4BAA8B,CAAEuC,aAAa,MAszB9C,QAWJ1E,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,IACXhB,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACI5G,KAAK,SACL6G,QAAQ,YACRC,MAAM,YACNP,UAAW9I,GAAQjH,OACnByS,QAnyB/B,WACjChO,IAAgB,KA6xB4C,gBAkBhCsK,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OACXhB,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACI5G,KAAK,SACL6G,QAAQ,YACRC,MAAM,UACNP,UAAW9I,GAAQjH,OACnBuQ,UAAWxB,EAAArH,EAAAsH,cAAC0E,EAAAhM,EAAD,MACX+K,QAv2Bd,WACtBhO,IAAgB,KAg2BgB,iCAcXR,EAAS8K,EAAArH,EAAAsH,cAAC2E,EAAA,EAAD,MAAc,GAExB5E,EAAArH,EAAAsH,cAAA,WAGQD,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACI5G,KAAK,SACL6G,QAAQ,YACRC,MAAM,UACNP,UAAW9I,GAAQjH,OACnBuQ,UAAWxB,EAAArH,EAAAsH,cAAC4E,EAAAlM,EAAD,OAETzD,EAGE8K,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAAEC,cAAe,eAA9B,aAFA3B,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAAEC,cAAe,eAA9B,SAuBhB3B,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACIC,QAAQ,YACRN,UAAW9I,GAAQjH,OACnBuQ,UAAWxB,EAAArH,EAAAsH,cAAC6E,EAAAnM,EAAD,MACX+K,QA1mBP,WACjBvL,GAAQiE,KAAK,OA2mBW4D,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAAEC,cAAe,eAA9B,oUCtiC1B3R,GAAYC,YAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF6T,QAAS,CACL3U,OAAQF,EAAMG,QAAQ,KAG9B2U,MAAO,CACH1U,QAAS,QAEbuR,MAAO,CACHN,MAAO,UACP0D,SAAU,aAiXHC,GA5WU,SAAC7R,GACtB,IAAM6E,EAAUlI,KACVmV,EAAmB9R,EAAM8R,iBAFCjR,EAGCC,mBAAS,CAACiR,cAAe,cAAe9R,UAAUD,EAAMC,UAAW+R,aAAa,GAAIC,OAAO,KAH5F9Q,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAGzBqR,EAHyB/Q,EAAA,GAGdgR,EAHchR,EAAA,GAAAI,EAIIT,mBAAS,IAJbU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAIzB6Q,EAJyB5Q,EAAA,GAIb6Q,EAJa7Q,EAAA,GAAAG,EAKFb,mBAASd,EAAM8R,kBALblQ,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAAA2Q,GAAA1Q,EAAA,GAAAA,EAAA,GAMF2Q,IAAMzR,UAAS,IANb0R,EAAApR,OAAAC,EAAA,EAAAD,CAAAkR,EAAA,GAMzBG,EANyBD,EAAA,GAMhBE,EANgBF,EAAA,GAAAG,EAOMJ,IAAMzR,UAAS,GAPrB8R,EAAAxR,OAAAC,EAAA,EAAAD,CAAAuR,EAAA,GAOzBE,EAPyBD,EAAA,GAOZE,EAPYF,EAAA,GAAAG,EAQAR,IAAMzR,UAAS,GARfkS,EAAA5R,OAAAC,EAAA,EAAAD,CAAA2R,EAAA,GAQzBE,EARyBD,EAAA,GAQfE,EAReF,EAAA,GAAAG,EASFZ,IAAMzR,UAAS,GATbsS,EAAAhS,OAAAC,EAAA,EAAAD,CAAA+R,EAAA,GASzBhK,EATyBiK,EAAA,GAShBC,EATgBD,EAAA,GAAAtR,EAUJhB,mBAAS,IAVLiB,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAUzBnB,EAVyBoB,EAAA,GAUjBuR,EAViBvR,EAAA,GAAAG,EAYepB,mBAAS,IAZxBqB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAYzBqR,EAZyBpR,EAAA,GAYPqR,EAZOrR,EAAA,GAc1BsR,EAAQrS,OAAAsS,EAAA,EAAAtS,CAAA,GACR+H,GAAW,CACbwK,QAASC,KAAM,KACfC,UAAW,CACTF,QAASC,KAAM,QAMrB5H,oBAAU,WAEN8H,IACsB,KAAnB5B,EAAUD,QACTa,GAAe,IAGlB,IAEJ,IAAMgB,EAAc,WACjBrN,IACItK,IADJ,GAAAuK,OACWC,EADX,qDAEO,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAE3CiY,KAAK,SAACtO,GACH4M,EAAc5M,EAASsB,QAE1BiN,MAAM,SAACxF,OAoGf,OACI7B,EAAArH,EAAAsH,cAAA,WACID,EAAArH,EAAAsH,cAACqH,GAAA,EAAD,KACItH,EAAArH,EAAAsH,cAACsH,GAAA,EAAD,KACIvH,EAAArH,EAAAsH,cAACuH,GAAA,EAAD,CAAOC,OAAQpU,EAAMqU,YAAaC,OAAQtU,EAAMuU,aAAc5G,UAAW3N,EAAM2N,UAAW6G,KAAK,MAC3F7H,EAAArH,EAAAsH,cAAC2B,EAAA,EAAD,KACI5B,EAAArH,EAAAsH,cAAC6H,GAAA,EAAD,CAAaH,OAAQtU,EAAMuU,cAA3B,qBACA5H,EAAArH,EAAAsH,cAAC8H,GAAA,EAAD,KACI/H,EAAArH,EAAAsH,cAACqH,GAAA,EAAD,KAIItH,EAAArH,EAAAsH,cAACsH,GAAA,EAAD,KACAvH,EAAArH,EAAAsH,cAAC+H,GAAA,EAAD,CAAKvX,MAAI,GACTuP,EAAArH,EAAAsH,cAACW,EAAA,EAAD,MACIZ,EAAArH,EAAAsH,cAACgI,GAAA,EAAD,CAAKC,GAAI,GACLlI,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,UAAX,kBACAhC,EAAArH,EAAAsH,cAACkI,GAAA,EAAD,CACI1N,KAAK,SACL+F,KAAK,SACL1F,GAAG,SACHuH,SApH3B,SAAA1D,GACjB,IAAMyJ,EAAYzJ,EAAEE,OAAOhE,MAC3B2K,EAAa/Q,OAAAsS,EAAA,EAAAtS,CAAA,GAAI8Q,EAAL,CAAgBD,OAAO8C,KACnCtO,IACItK,IADJ,GAAAuK,OACWC,EADX,mCAAAD,OACoDqO,GAC7C,CAAEnO,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAE3CiY,KAAK,SAACtO,GACwB,UAA3BA,EAASsB,KAAKiO,UACb9L,IAAMsF,MAAM/I,EAASsB,KAAKkO,UAAY,gBAGtCnC,GAAe,KAGnBkB,MAAM,SAACxF,OAsGiChH,MAAO0K,EAAUD,OACjBvT,UAAQ,GAEZiO,EAAArH,EAAAsH,cAAA,UAAQpF,MAAM,IAAd,kBACCsK,EAAiBrF,IAAI,SAAAyI,GAAA,IAAGzN,EAAHyN,EAAGzN,GAAI0F,EAAP+H,EAAO/H,KAAP,OAClBR,EAAArH,EAAAsH,cAAA,UAAQC,IAAKpF,EAAID,MAAO2F,GACnBA,MAKK,KAAjBxM,EAAOsR,OACJtF,EAAArH,EAAAsH,cAAA,QAAMe,UAAW9I,EAAQ2J,OAAQ7N,EAAOsR,QACxC,KAGPY,EACDlG,EAAArH,EAAAsH,cAAAD,EAAArH,EAAAgI,SAAA,KACIX,EAAArH,EAAAsH,cAACgI,GAAA,EAAD,CAAKC,GAAI,GACTlI,EAAArH,EAAAsH,cAAC6B,EAAA,EAAD,KACI9B,EAAArH,EAAAsH,cAAC8B,EAAA,EAAD,CAAOC,IAAI,UAAX,iBACAhC,EAAArH,EAAAsH,cAACkI,GAAA,EAAD,CACI1N,KAAK,SACL+F,KAAK,eACL1F,GAAG,eACHuH,SA1HrB,SAAA1D,GACvB6G,EAAY/Q,OAAAsS,EAAA,EAAAtS,CAAA,GAAM8Q,EAAN9Q,OAAA+T,EAAA,EAAA/T,CAAA,GAAmBkK,EAAEE,OAAO2B,KAAO7B,EAAEE,OAAOhE,UA0HZA,MAAO0K,EAAUF,aACjBtT,UAAQ,GAEZiO,EAAArH,EAAAsH,cAAA,UAAQpF,MAAM,IAAd,kBAEC4K,EAAW3F,IAAI,SAACjF,GAAD,OACZmF,EAAArH,EAAAsH,cAAA,UAAQC,IAAKrF,EAAMC,GAAID,MAAOA,EAAMvK,SAC/BuK,EAAMvK,YAIK,KAAvB0D,EAAOqR,aACJrF,EAAArH,EAAAsH,cAAA,QAAMe,UAAW9I,EAAQ2J,OAAQ7N,EAAOqR,cACxC,KAKRrF,EAAArH,EAAAsH,cAACgI,GAAA,EAAD,CAAKC,GAAI,GAETlI,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACI5G,KAAK,SACL6G,QAAQ,YACRC,MAAM,UACNmC,QArIlB,SAAC/E,GACnBA,EAAE8J,iBAXW,WACb,IAAIC,EAAIjU,OAAAsS,EAAA,EAAAtS,CAAA,GAAQT,GAMhB,OALA0U,EAAKrD,aAAeE,EAAUF,aAAe,GAAK,yBAClDqD,EAAKpD,OAASC,EAAUD,OAAS,GAAK,yBACtCqB,EAAUlS,OAAAsS,EAAA,EAAAtS,CAAA,GACHiU,IAEAjU,OAAOkU,OAAOD,GAAME,MAAM,SAAAC,GAAC,MAAS,IAALA,IAKnCC,IACChP,IAAMwC,KAAN,GAAAvC,OAAcC,EAAd,oDAAwEuL,EACxE,CAAEtL,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAErCiY,KAAK,SAAAtO,GAEF,GADAiN,GAAW,GACc,UAAtBjN,EAASsB,KAAKK,KACfsL,GAAW,GACXQ,GAAY,GACZlX,OAAO0U,WAAW,WACdwC,GAAY,IACX,KACLhK,IAAMsF,MAAM/I,EAASsB,KAAK+H,QAAQ4G,WAC/B,CACH,IAAM1D,EAAcvM,EAASsB,KAAKiL,aAClCkB,GAAY,GACZG,GAAW,GACXrX,OAAO0U,WAAW,WACd2C,GAAW,GACXX,GAAW,IACV,KAELc,EAAmB,GAAA9M,OAAAtF,OAAAuU,GAAA,EAAAvU,CAAKmS,GAAL,CAAuB9N,EAASsB,QACnDqL,EAAWzB,OAAOqB,EAAc,GAChCK,EAAcjR,OAAAuU,GAAA,EAAAvU,CAAIgR,OAIvB4B,MAAM,SAAAxF,OAwGuBb,UAAW,OACXQ,UAAWxB,EAAArH,EAAAsH,cAACgJ,GAAAtQ,EAAD,OANf,mBAYAqH,EAAArH,EAAAsH,cAAA,YAKA,GAGAD,EAAArH,EAAAsH,cAACgI,GAAA,EAAD,CAAKiB,GAAG,KAAKhB,GAAI,CAAEL,KAAM,EAAGsB,OAAQ,IAEtCrD,GACE9F,EAAArH,EAAAsH,cAAAD,EAAArH,EAAAgI,SAAA,KACCX,EAAArH,EAAAsH,cAACmJ,GAAA,EAAD,CAAKC,GAAI,CAAE/Y,QAAS,OAAQE,WAAY,WACrCwP,EAAArH,EAAAsH,cAACmJ,GAAA,EAAD,CAAKC,GAAI,CAAE5G,EAAG,EAAG6G,SAAU,aACvBtJ,EAAArH,EAAAsH,cAACsJ,GAAA,EAAD,CACAC,aAAW,OACXjI,MAAM,YACN8H,GAAIvC,GAGHtK,EAAUwD,EAAArH,EAAAsH,cAACwJ,GAAA9Q,EAAD,MAAgBqH,EAAArH,EAAAsH,cAACgJ,GAAAtQ,EAAD,OAE1BmN,GACD9F,EAAArH,EAAAsH,cAACyJ,GAAA,EAAD,CACI7B,KAAM,GACNwB,GAAI,CACJ9H,MAAO0F,KAAM,KACbqC,SAAU,WACVK,KAAM,EACNC,MAAO,EACPC,OAAQ,MAKhB7J,EAAArH,EAAAsH,cAAC6J,GAAA,EAAD,CAAYxI,QAAQ,KAAKyI,cAAY,EAACC,UAAU,OAC/CxN,EAAO,UAAAzC,OAAYwL,EAAUF,aAAtB,2CAAAtL,OAA8EwL,EAAUF,aAAxF,0BAMXiB,GACDtG,EAAArH,EAAAsH,cAAAD,EAAArH,EAAAgI,SAAA,KAGCX,EAAArH,EAAAsH,cAACmJ,GAAA,EAAD,CAAKC,GAAI,CAAE/Y,QAAS,OAAQE,WAAY,WACrCwP,EAAArH,EAAAsH,cAACmJ,GAAA,EAAD,CAAKC,GAAI,CAAE5G,EAAG,EAAG6G,SAAU,aACvBtJ,EAAArH,EAAAsH,cAACsJ,GAAA,EAAD,CACAC,aAAW,OACXjI,MAAM,YACN8H,GAAIvC,GAGH9G,EAAArH,EAAAsH,cAACgJ,GAAAtQ,EAAD,OAEA2N,GACDtG,EAAArH,EAAAsH,cAACyJ,GAAA,EAAD,CACI7B,KAAM,GACNwB,GAAI,CACJ9H,MAAO0I,KAAI,KACXX,SAAU,WACVK,KAAM,EACNC,MAAO,EACPC,OAAQ,MAKhB7J,EAAArH,EAAAsH,cAAC6J,GAAA,EAAD,CAAYxI,QAAQ,KAAKyI,cAAY,EAACC,UAAU,OAAhD,gCAaRhK,EAAArH,EAAAsH,cAAC+H,GAAA,EAAD,KACFpB,EAAiBlM,QAAS,EACvBsF,EAAArH,EAAAsH,cAAAD,EAAArH,EAAAgI,SAAA,KACDX,EAAArH,EAAAsH,cAACgI,GAAA,EAAD,CAAKC,GAAI,IACLlI,EAAArH,EAAAsH,cAAA,oCAEJD,EAAArH,EAAAsH,cAACgI,GAAA,EAAD,CAAKC,GAAI,GAAIxG,MAAO,CAAC/Q,UAAU,SAC3BqP,EAAArH,EAAAsH,cAACiK,GAAA,EAAD,CAAMC,QAAM,EAACC,YAAU,GAClBxD,EAAiB9G,IAAI,SAAC+I,GAAD,OAClB7I,EAAArH,EAAAsH,cAACiK,GAAA,EAAKG,KAAN,KAEIrK,EAAArH,EAAAsH,cAACiK,GAAA,EAAKI,QAAN,SAAetK,EAAArH,EAAAsH,cAACgJ,GAAAtQ,EAAD,CAAiB+I,MAAO,CAACH,MAAM,UAAW0D,SAAU,MAAO4D,EAAExD,mBAmB5FrF,EAAArH,EAAAsH,cAAA,WAAKD,EAAArH,EAAAsH,cAAA,WAAKD,EAAArH,EAAAsH,cAAA,WAAKD,EAAArH,EAAAsH,cAAA,WAAKD,EAAArH,EAAAsH,cAAA,WAAKD,EAAArH,EAAAsH,cAAA,WACrBD,EAAArH,EAAAsH,cAACgI,GAAA,EAAD,CAAKC,GAAI,IACLlI,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACI5G,KAAK,SACL6G,QAAQ,YACRC,MAAM,UACNmC,QA/NrB,SAAC/E,GAEpB,GADAA,EAAE8J,iBACC7B,EAAiBlM,OAAS,EAAE,CAC3B,IAAM6P,EAAa3D,EAAiBA,EAAiBlM,OAAS,GAC9DZ,IAAMwC,KAAN,GAAAvC,OAAcC,EAAd,wBAA4CuQ,EAC5C,CAAEtQ,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAErCiY,KAAK,SAAAtO,GACJyD,IAAMC,QAAQ,6BACdqK,EAAoB,IACpBxT,EAAMmX,2BAA0B,GAChCnX,EAAMuU,iBAETP,MAAM,SAAAxF,GACHtF,IAAMsF,MAAM,+BAIhBtF,IAAMsF,MAAM,sCA+MwBL,UAAWxB,EAAArH,EAAAsH,cAAC4E,EAAAlM,EAAD,OANf,kBAcJ,aCtIzB8R,mBAlRA,SAAAva,GAAK,MAAK,CACrBgB,KAAM,CACFR,MAAO,QAEXga,QAAS,CACLzF,SAAU/U,EAAMya,WAAWC,QAAQ,KAEvCC,iBAAkB,CACd5F,SAAU/U,EAAMya,WAAWC,QAAQ,IACnCrJ,MAAOrR,EAAMqB,QAAQuZ,KAAKC,WAE9BjH,KAAM,CACFkH,cAAe,SACfha,OAAQ,GACRN,MAAO,IAEXua,QAAS,CACLza,WAAY,UAEhB0a,OAAQ,CACJC,UAAW,UAEfC,OAAQ,CACJC,WAAU,aAAAtR,OAAe7J,EAAMqB,QAAQ+Z,SACvCC,QAAO,GAAAxR,OAAK7J,EAAMG,QAAQ,GAAnB,OAAA0J,OAA8C,EAAnB7J,EAAMG,QAAQ,GAAzC,OAEXmb,KAAM,CACFjK,MAAOrR,EAAMqB,QAAQka,QAAQC,KAC7BC,eAAgB,OAChBzE,UAAW,CACPyE,eAAgB,gBAoPblB,CA/Of,SAAqBpX,GAAO,IAChB6E,EAAY7E,EAAZ6E,QACF0T,EAAavY,EAAMuY,WAAavY,EAAMuY,WAAa,GACnDC,EAAaxY,EAAMwY,YAAcxY,EAAMwY,YAAc,GAHnC3X,EAIEC,oBAAS,GAJXK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAIjB4X,EAJiBtX,EAAA,GAIVuX,EAJUvX,EAAA,GAAAI,EAKmCT,mBAASd,EAAMuY,WAAWI,iBAL7DnX,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAKjBqX,EALiBpX,EAAA,GAKO2V,EALP3V,EAAA,GAAAG,EAQsBb,oBAAS,GAR/Bc,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAQjBgX,EARiB/W,EAAA,GAQAiX,EARAjX,EAAA,GAAAE,EASMhB,mBAAS,IATfiB,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GASjBgX,EATiB/W,EAAA,GASRgX,EATQhX,EAAA,GAUxBiK,oBAAU,WACN8H,KACC,IAEJ,IAqDmBpU,EArDboU,EAAc,WACjBrN,IACItK,IADJ,GAAAuK,OACWC,EADX,sCAEO,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAE3CiY,KAAK,SAACtO,GACH4D,QAAQC,IAAI7D,EAASsB,MACrB8R,EAAmBpT,EAASsB,OACT,IAAhBtB,EAASsB,MACXN,IACKtK,IADL,GAAAuK,OACYC,EADZ,sBAEQ,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAE3CiY,KAAK,SAACtO,GACHsT,EAAWtT,EAASsB,QAGvBiN,MAAM,SAACxF,GACJnF,QAAQC,IAAIkF,OAKxBwF,MAAM,SAACxF,OAyCf,OACI7B,EAAArH,EAAAsH,cAAA,OAAKe,UAAW9I,EAAQhH,MACpB8O,EAAArH,EAAAsH,cAACoM,EAAA,EAAD,CAAWC,iBAAe,GACtBtM,EAAArH,EAAAsH,cAACsM,EAAA,EAAD,KAEIvM,EAAArH,EAAAsH,cAAC+H,GAAA,EAAD,KAEIhI,EAAArH,EAAAsH,cAACgI,GAAA,EAAD,CAAKC,GAAI,IACLlI,EAAArH,EAAAsH,cAAC+H,GAAA,EAAD,CAAKhH,UAAW,QACZhB,EAAArH,EAAAsH,cAACgI,GAAA,EAAD,CAAKC,GAAI,GAAIlH,UAAW9I,EAAQsU,OAC5BxM,EAAArH,EAAAsH,cAAA,KAAGyB,MAAO,CAACuD,SAAU,SAChB2G,EAAWhR,QAAU,KAAOgR,EAAW3Z,UAAY,IAAM2Z,EAAWjR,YAI7EqF,EAAArH,EAAAsH,cAACgI,GAAA,EAAD,CAAKC,GAAI,EAAGlH,UAAW9I,EAAQsU,OAC3BxM,EAAArH,EAAAsH,cAAA,YACK,IADL,qBAEsBD,EAAArH,EAAAsH,cAAA,SAtD5B,SAAC3F,GACvB,IAAMtI,EAAiBsI,EAAWA,WAAWC,KAAK,SAAAC,GAAG,MAAgB,kBAAZA,EAAIC,OAC7D,OAAOzI,EAAiBA,EAAe6I,MAAQ,GAoDO4R,CAAkBb,EAAWtR,eAI3D0F,EAAArH,EAAAsH,cAACgI,GAAA,EAAD,CAAKC,GAAI,EAAGlH,UAAW9I,EAAQsU,OAC3BxM,EAAArH,EAAAsH,cAAA,+BACoBD,EAAArH,EAAAsH,cAAA,SAAI2L,EAAWlZ,eAGvCsN,EAAArH,EAAAsH,cAACgI,GAAA,EAAD,CAAKC,GAAI,EAAGlH,UAAW9I,EAAQsU,OAC/BxM,EAAArH,EAAAsH,cAAA,YACK,IADL,SAEUD,EAAArH,EAAAsH,cAAA,SA7DhB,SAAAxN,GAClB,IAAMkC,EAAQ,IAAIP,KAEZkO,GADY7P,EAAIia,MAAM,KACV,IAAItY,KAAK3B,IACvB8P,EAAU5N,EAAM6N,cAAgBF,EAAUE,cACxCC,EAAI9N,EAAM+N,WAAaJ,EAAUI,WAIvC,OAHID,EAAI,GAAY,IAANA,GAAW9N,EAAMgO,UAAYL,EAAUK,YACjDJ,IAEY,IAAZA,EACOE,EAAI,YAERF,EAAU,WAiDqBoK,CAAcf,EAAWlZ,gBAGvCsN,EAAArH,EAAAsH,cAACgI,GAAA,EAAD,CAAKC,GAAI,GACTlI,EAAArH,EAAAsH,cAAA,YACK,IADL,WAEa,IACTD,EAAArH,EAAAsH,cAAA,SAAI2L,EAAWtS,OAAOhJ,UAE1B0P,EAAArH,EAAAsH,cAAC2M,EAAA,EAAD,CAAOrL,MAAO,QAASsG,KAAM,QAA7B,iBAEA7H,EAAArH,EAAAsH,cAAC2M,EAAA,EAAMC,OAAP,iBAGA7M,EAAArH,EAAAsH,cAACgI,GAAA,EAAD,CAAKC,GAAI,EAAGlH,UAAW9I,EAAQsU,OAC/BxM,EAAArH,EAAAsH,cAAA,YACK,IADL,kBAEmBD,EAAArH,EAAAsH,cAAA,SA/D9B,SAAC/G,GACd,IAAM4T,EAAe5T,EAAaA,aAAaqB,KAAK,SAAAC,GAAG,MAAgB,SAAZA,EAAIC,OAC/D,OAAOqS,EAAeA,EAAajS,MAAQ,GA6DIkS,CAASnB,EAAW1S,iBAG3C8G,EAAArH,EAAAsH,cAACgI,GAAA,EAAD,CAAKC,GAAI,EAAGlH,UAAW9I,EAAQsU,OAC/BxM,EAAArH,EAAAsH,cAAA,YACK,IADL,aAEcD,EAAArH,EAAAsH,cAAA,UAhEtBlN,EAgEqC6Y,EAAW7Y,UA/DxCA,EAAQA,SAAWA,EAAQA,QAAQ2H,OAAS,EAAI3H,EAAQA,QAAQ,GAAGkI,KAAO,KA+D5D,WAW9B+E,EAAArH,EAAAsH,cAAC+M,EAAA,EAAD,CAAkBhM,UAAW9I,EAAQ+S,SACjCjL,EAAArH,EAAAsH,cAAA,OAAKe,UAAW9I,EAAQgT,QACpBlL,EAAArH,EAAAsH,cAACgN,GAAA,EAAD,CACI1L,MAAM,MACN2L,QAAQ,YAERC,MAAO,CAAEC,OAAO,EAAM7L,MAAO,MAAO8L,SAAU,OAAQH,QAAS,UAIvElN,EAAArH,EAAAsH,cAAA,OAAKe,UAAW9I,EAAQgT,QACpBlL,EAAArH,EAAAsH,cAACgN,GAAA,EAAD,CACIG,OAAK,EACL7L,MAAM,OACN2L,QAAQ,SACRpJ,KAAK,OACLqJ,MAAO,CACHG,GAAI,IACJF,OAAO,EACP7L,MAAO,OACP8L,SAAU,OACVH,QAAS,cAIrBlN,EAAArH,EAAAsH,cAAA,OAAKe,UAAW9I,EAAQgT,QACpBlL,EAAArH,EAAAsH,cAACgN,GAAA,EAAD,CACIG,OAAK,EACL7L,MAAM,OACN2L,QAAQ,SACRpJ,KAAK,OACLqJ,MAAO,CACHG,GAAI,IACJF,OAAO,EACP7L,MAAO,OACP8L,SAAU,OACVH,QAAS,eAIF,IAAlBlB,EACGhM,EAAArH,EAAAsH,cAAAD,EAAArH,EAAAgI,SAAA,KACIX,EAAArH,EAAAsH,cAAA,WACID,EAAArH,EAAAsH,cAACsN,EAAA,EAAD,CAAYjM,QAAQ,WAChBtB,EAAArH,EAAAsH,cAAC2M,EAAA,EAAD,CAAOrL,OAAgC,IAAzB0K,EAA+B,QAAU,MAAOpE,KAAM,QAApE,mBAEI7H,EAAArH,EAAAsH,cAAC2M,EAAA,EAAMC,OAAP,MAAwC,IAAzBZ,EAA+B,WAAa,iBAErC,IAAzBA,EAEGjM,EAAArH,EAAAsH,cAAAD,EAAArH,EAAAgI,SAAA,KACMkL,EAAY2B,SAAS,qBAAuB3B,EAAY2B,SAAS,kBAC/DxN,EAAArH,EAAAsH,cAAAD,EAAArH,EAAAgI,SAAA,KACAX,EAAArH,EAAAsH,cAAC2M,EAAA,EAAD,CAAOU,GAAG,IAAI/L,MAAM,OAAOmC,QAAS,kBAA6BkI,EAAW9Q,QAxHpHiR,GAAUD,IAwH+G2B,KAAG,GAApF,gBAKH,IAIR,MAQbzN,EAAArH,EAAAsH,cAAAD,EAAArH,EAAAgI,SAAA,KACIX,EAAArH,EAAAsH,cAAA,WACID,EAAArH,EAAAsH,cAACsN,EAAA,EAAD,CAAYjM,QAAQ,WAChBtB,EAAArH,EAAAsH,cAAC2M,EAAA,EAAD,CAAOrL,MAAO,MAAOsG,KAAM,QAA3B,6BAUpB7H,EAAArH,EAAAsH,cAACyN,EAAA,EAAD,MACA1N,EAAArH,EAAAsH,cAAC0N,EAAA,EAAD,OAIJ3N,EAAArH,EAAAsH,cAAC2N,GAAD,CAAkBlG,YAAaoE,EAAOlE,aAhO1B,kBAAMmE,GAAUD,IAgOqCxY,UAAWsY,EAAW9Q,GAAIqK,iBAAkBgH,EAAS3B,0BAA2BA,mNCxPvJ1G,GAAO9D,EAAArH,EAAAsH,cAAC4N,GAAAlV,EAAD,CAA0BsM,SAAS,UAC1C6I,GAAc9N,EAAArH,EAAAsH,cAAC8N,GAAApV,EAAD,CAAcsM,SAAS,UAqCrC+I,GAAqB,CACvB,CAAEC,MAAO,KAAMC,WAAY,KAAMxd,MAAO,IACxC,CACIud,MAAO,YACPC,WAAY,aACZxd,MAAO,IACPyd,UAAU,GAEd,CACIF,MAAO,WACPC,WAAY,YACZxd,MAAO,IACPyd,UAAU,GAEd,CACIF,MAAO,MACPC,WAAY,MACZzT,KAAM,SACN/J,MAAO,IACPyd,UAAU,IAKZC,GAAe,GAMjBC,GAAU,IAAIja,KAsbHqW,mBAvfA,SAAAva,GAAK,MAAK,CACrBgB,KAAM,CACFR,MAAO,QAEXga,QAAS,CACLzF,SAAU/U,EAAMya,WAAWC,QAAQ,KAEvCC,iBAAkB,CACd5F,SAAU/U,EAAMya,WAAWC,QAAQ,IACnCrJ,MAAOrR,EAAMqB,QAAQuZ,KAAKC,WAE9BjH,KAAM,CACFkH,cAAe,SACfha,OAAQ,GACRN,MAAO,IAEXua,QAAS,CACLza,WAAY,UAEhB0a,OAAQ,CACJC,UAAW,UAEfC,OAAQ,CACJC,WAAU,aAAAtR,OAAe7J,EAAMqB,QAAQ+Z,SACvCC,QAAO,GAAAxR,OAAK7J,EAAMG,QAAQ,GAAnB,OAAA0J,OAA8C,EAAnB7J,EAAMG,QAAQ,GAAzC,OAEXmb,KAAM,CACFjK,MAAOrR,EAAMqB,QAAQka,QAAQC,KAC7BC,eAAgB,OAChBzE,UAAW,CACPyE,eAAgB,gBAydblB,CArbf,SAA0BpX,GAAO,IAAAa,EACCC,mBAAS,IADVK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACtB4R,EADsBtR,EAAA,GAEzB2D,GAFyB3D,EAAA,GAEf4D,eACNF,EAAY7E,EAAZ6E,QACF0T,EAAazT,EAAQ7I,UAAY6I,EAAQ7I,SAAS0I,MAAQG,EAAQ7I,SAAS0I,MAAM4T,WAAa,GAC9FC,EAAc1T,EAAQ7I,UAAY6I,EAAQ7I,SAAS0I,MAAQG,EAAQ7I,SAAS0I,MAAM6T,YAAc,GALzEtY,EAMKC,cANLoB,GAAArB,EAMrBQ,aANqBR,EAMP+a,QACIna,oBAAS,IAPNU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAOtBkX,EAPsBjX,EAAA,GAOfkX,EAPelX,EAAA,GAAAG,EAQYb,oBAAS,GARrBc,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAQtBuZ,EARsBtZ,EAAA,GAQPuZ,EAROvZ,EAAA,GAAAE,EASahB,oBAAS,GATtBiB,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAStBsZ,EATsBrZ,EAAA,GASPsZ,EATOtZ,EAAA,GAAAG,EAUEpB,mBAAS,IAVXqB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAUtBoZ,EAVsBnZ,EAAA,GAUZoZ,EAVYpZ,EAAA,GAAAG,EAWkBxB,mBAAS,CAAC0a,gBAAgB,KAX5CjZ,EAAAnB,OAAAC,EAAA,EAAAD,CAAAkB,EAAA,GAWtBmZ,EAXsBlZ,EAAA,GAWJmZ,EAXInZ,EAAA,GAAAG,EAYY5B,mBAAS,IAZrB6B,EAAAvB,OAAAC,EAAA,EAAAD,CAAAsB,EAAA,GAYtBiZ,EAZsBhZ,EAAA,GAYPiZ,EAZOjZ,EAAA,GAAAG,EAaShC,mBAAS,CACC+a,WAAY,EACZC,SAAU,GACVC,aAAarU,YAAO,IAAI3G,KAAKia,IAAU,cACvCgB,eAAe,KAjBlCjZ,EAAA3B,OAAAC,EAAA,EAAAD,CAAA0B,EAAA,GAAAI,GAAAH,EAAA,GAAAA,EAAA,GAmBOjC,mBAAS,CACzCmb,WAAW,GACTC,SAAU,CACRL,WAAY,EACZC,SAAUvD,EAAW9Q,GACrBsU,aAAc,GACdC,eAAgBtU,YAAO,IAAI3G,KAAKia,IAAU,kBAzBrB7X,EAAA/B,OAAAC,EAAA,EAAAD,CAAA8B,EAAA,GAmBtBiZ,EAnBsBhZ,EAAA,GA6BvBiZ,IA7BuBjZ,EAAA,GA6BRgC,sBAAW/D,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEFC,IAAMtK,IAAN,GAAAuK,OAAaC,EAAb,wBAA4C,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAFlF,OAEnB2J,EAFmBa,EAAAQ,KAGzByU,EAAY9V,EAASsB,MAHIT,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,EAAAD,EAAA8C,GAAA9C,EAAA,SAAAA,EAAAE,KAAA,GAKnB6V,KAAKC,KAAK,CACZ7L,KAAM,QACN8L,MAAO,UACP9E,KAAM,yCARe,yBAAAnR,EAAAwB,SAAAtC,EAAA,iBAW9B,KACGgX,GAAoBrX,sBAAW/D,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAC,SAAA0C,IAAA,IAAAxC,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cAAA2B,EAAA5B,KAAA,EAAA4B,EAAA3B,KAAA,EAEPC,IAAMtK,IAAN,GAAAuK,OAAaC,EAAb,+BAAAD,OAAkD6R,EAAW9Q,IAAM,CAAEb,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAFpG,OAExB2J,EAFwB0C,EAAArB,KAG9B8U,EAAiBnW,EAASsB,MAC1BtB,EAASsB,KAAK0F,IAAI,SAACgQ,GACU,OAAtBA,EAAOC,cACNvB,GAAiB,KANKhT,EAAA3B,KAAA,uBAAA2B,EAAA5B,KAAA,EAAA4B,EAAAiB,GAAAjB,EAAA,SAAAA,EAAA3B,KAAA,GAYxB6V,KAAKC,KAAK,CACZ7L,KAAM,QACN8L,MAAO,UACP9E,KAAM,yCAfoB,yBAAAtP,EAAAL,SAAAG,EAAA,iBAkBnC,IAEH+D,oBAAU,WACNoQ,KACAI,MACD,CAACJ,GAAcI,KAGdlB,GAAYA,EAASjU,OAAS,GACbiU,EAAS7O,IAAI,SAACkQ,EAASjQ,GAAV,OAC1BC,EAAArH,EAAAsH,cAACgQ,GAAA,EAAD,CAAU/P,IAAK8P,EAAQE,kBAAmBrV,MAAOmV,EAAQE,mBAAoBF,EAAQG,qBAO7F,IA2BMC,GAAQ,CACV,CAAEC,SAAU,gBAAiBC,OAAQ,kBAC7BtQ,EAAArH,EAAAsH,cAACsQ,GAAA,EAAIC,KAAL,KAEIxQ,EAAArH,EAAAsH,cAACwQ,GAAA9X,EAAD,CACAiX,MAAM,GACNc,QAAS,CACL,CACId,MAAO,kBACP3B,MAAO,cAAe0C,WAAW,GAErC,CAAEf,MAAO,iBAAkB3B,MAAO,eAAgB0C,WAAW,GAC7D,CAAEf,MAAO,UAAW3B,MAAO,UAAW0C,WAAW,GACjD,CAAEf,MAAO,SAAU3B,MAAO,SAAU0C,WAAW,IAEnDC,UAAW9K,EACX1L,KAAM4U,EAAclP,IAAI,SAAC+Q,GAAD,MAAU,CAC9BC,YAAaD,EAAIC,YACjBf,aAAcc,EAAId,aAClBC,QAAQa,EAAIb,QACZe,OAAQ/Q,EAAArH,EAAAsH,cAAC2M,EAAA,EAAD,CAAOrL,MAAqB,cAAdsP,EAAIE,OAAwB,QAAU,MAAOlJ,KAAK,QAAQgJ,EAAIE,WAIxFC,QAAS,CACLC,YAAa,CACT3f,gBAAiB,OACjBiQ,MAAO,WAEXhS,QAAQ,EAKRohB,WAAW,EACXO,cAAc,EACdC,qBAAsB,OACtBC,gBAAgB,CAAC,GAAG,GAAG,KACvBC,SAAS,GACTC,iBAAkB,UAMlC,CAAEjB,SAAUxE,EAAY2B,SAAS,6BAA+B3B,EAAY2B,SAAS,kBAAoB,eAAiB,GAAI8C,OAAQ,kBAClIzE,EAAY2B,SAAS,6BAA+B3B,EAAY2B,SAAS,kBACrExN,EAAArH,EAAAsH,cAACsQ,GAAA,EAAIC,KAAL,KACIxQ,EAAArH,EAAAsH,cAAA,OAAKyB,MAAO,CAAE1Q,OAAQ,IAAKN,MAAO,SAC9BsP,EAAArH,EAAAsH,cAACsR,GAAA,EAAD,CACIC,KAAMpD,GACNsC,QAAS1C,GACTqD,SAAU,EACVI,mBAAoB,CAAC,GACrBC,mBAAiB,EACjBC,yBAAuB,MAItC,MAaHC,GAAkB,WACpB7F,GAAS,IAEP8F,GAAmB,WACrBnD,GAAiB,IAuDjBoD,GAAoB,GAmDxB,OACI9R,EAAArH,EAAAsH,cAAA,OAAKe,UAAW9I,EAAQhH,MACpB8O,EAAArH,EAAAsH,cAAC8R,GAAA,EAAD,KACI/R,EAAArH,EAAAsH,cAAC+R,GAAA,EAAD,KAEIhS,EAAArH,EAAAsH,cAACgS,GAAD,CAAmBrG,WAAYA,EAAYC,YAAaA,IACxD7L,EAAArH,EAAAsH,cAAC8R,GAAA,EAAD,KACI/R,EAAArH,EAAAsH,cAAC+R,GAAA,EAAD,KACIhS,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,OACXhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,iBAAf,QAGAhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,iBAAf,QAGAhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,iBAAf,QAGAhB,EAAArH,EAAAsH,cAAA,OAAKe,UAAU,iBACfhB,EAAArH,EAAAsH,cAACiB,EAAA,EAAD,CAAMC,GAAI,KACFnB,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNP,UAAU,qBACVhB,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAAEC,cAAe,eAA9B,UAGPkK,EAAY2B,SAAS,qBAAuB3B,EAAY2B,SAAS,kBAC9DxN,EAAArH,EAAAsH,cAAAD,EAAArH,EAAAgI,SAAA,MACiB,IAAhB4N,EACDvO,EAAArH,EAAAsH,cAACiS,GAAA,EAAD,CACI5Q,QAAQ,YACRI,MAAO,CAAEpQ,gBAAiB,SAC1BoS,QAtJlB,WAClBqI,GAAS,IAsJ2B/K,UAAU,qBAEVhB,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAAEC,cAAe,eAA9B,YAIR,IAIC,IAEgB,IAAhB4M,EACGvO,EAAArH,EAAAsH,cAACiS,GAAA,EAAD,CACI5Q,QAAQ,YACRI,MAAO,CAAEpQ,gBAAiB,SAC1BoS,QApKjB,WACnBgL,GAAiB,IAoKmB1N,UAAU,qBAEVhB,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAAEC,cAAe,eAA9B,aAIR,KAKR3B,EAAArH,EAAAsH,cAACsQ,GAAA,EAAD,CAAKH,MAAOA,SAK5BpQ,EAAArH,EAAAsH,cAACuH,GAAA,EAAD,CAAOC,OAAQqE,EAAOnE,OAAQiK,IAC1B5R,EAAArH,EAAAsH,cAAC6H,GAAA,EAAD,CAAaH,OAAQiK,IAArB,yBACA5R,EAAArH,EAAAsH,cAAC8H,GAAA,EAAD,KACI/H,EAAArH,EAAAsH,cAAA,QAAM7E,SAvHM,SAACuD,GACzBA,EAAE8J,iBACFqG,EAAiBD,gBAAgBnU,OAAS,GAAKoU,EAAiBD,gBAAgB/O,IAAI,SAACkQ,GAEjE,OAAbA,EAAQlV,KACPgX,GAAkB1V,KAAK4T,EAAQlV,IAC/B4B,QAAQC,IAAIqT,MAGpBR,EAAWF,WAAYwC,GACvBhY,IAAMwC,KAAN,GAAAvC,OAAcC,EAAd,yBAA8CwV,EAC9C,CAAEvV,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAGvCiY,KAAK,SAAAtO,GACFyD,IAAMC,QAAQ,+BACdgS,GAAiB,GACjBoD,KACA/B,OAEHxI,MAAM,SAAAxF,GACHnF,QAAQC,IAAIkF,GACZtF,IAAMsF,MAAM,wBACZ+P,SAiGY5R,EAAArH,EAAAsH,cAACkS,GAAA,EAAD,CACIzQ,MAAO,CACHpR,QAAS,OACT8hB,WAAY,OACZ7G,QAAS,OACTnb,OAAQ,cAEZ4P,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMC,WAAS,EAACjiB,QAAS,GACrB2P,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,GACXvS,EAAArH,EAAAsH,cAACuS,GAAA,EAAD,KAEKxS,EAAArH,EAAAsH,cAACwS,GAAA,EAAD,CACGC,UAAQ,EACR5X,GAAG,uBACHkW,QAASrC,EAETgE,eAAgB,SAACC,GAAD,OAAYA,EAAOzC,mBACnC9N,SAAU,SAAC1D,EAAGkU,GACVnW,QAAQC,IAAIkW,GACZ9D,EAAoBta,OAAAsS,EAAA,EAAAtS,CAAA,GAAKqa,EAAN,CAAwBD,gBAAiBgE,MAEhEC,aAAc,SAACzf,EAAOuf,EAARG,GAAA,IAAkBC,EAAlBD,EAAkBC,SAAlB,OACVhT,EAAArH,EAAAsH,cAAA,KAAQ5M,EACR2M,EAAArH,EAAAsH,cAACgT,GAAA,EAAD,CACInP,KAAMA,GACNgK,YAAaA,GACbpM,MAAO,CAAEwR,YAAa,GACtBC,QAASH,IAEZJ,EAAOzC,oBAGZzO,MAAO,CAAEhR,MAAO,KAChB0iB,YAAa,SAACC,GAAD,OACTrT,EAAArH,EAAAsH,cAACqT,GAAA,EAAD7e,OAAAwN,OAAA,GAAeoR,EAAf,CAAuBlG,MAAM,oBAOjDnN,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMC,WAAS,EAACjiB,QAAS,GACrB2P,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,IACXvS,EAAArH,EAAAsH,cAACiS,GAAA,EAAD,CAAQzX,KAAM,SAAU6G,QAAQ,YAAYC,MAAO,WAAnD,gBAQxBvB,EAAArH,EAAAsH,cAACuH,GAAA,EAAD,CAAOC,OAAQgH,EAAe9G,OAAQkK,IAClC7R,EAAArH,EAAAsH,cAAC6H,GAAA,EAAD,CAAaH,OAAQkK,IAArB,aACA7R,EAAArH,EAAAsH,cAAC8H,GAAA,EAAD,KACI/H,EAAArH,EAAAsH,cAAA,YACID,EAAArH,EAAAsH,cAACkS,GAAA,EAAD,CACIzQ,MAAO,CACHpR,QAAS,OACT8hB,WAAY,OACZ7G,QAAS,OACTnb,OAAQ,cAEZ4P,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMC,WAAS,EAACjiB,QAAS,GACrB2P,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,IACZvS,EAAArH,EAAAsH,cAAA,2DAGPD,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMC,WAAS,EAACjiB,QAAS,GACrB2P,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,IACXvS,EAAArH,EAAAsH,cAACiS,GAAA,EAAD,CAAQzX,KAAM,SAAUiJ,QAlK3B,SAAC/E,GAC1BA,EAAE8J,iBACF,IAAM8K,EAAYvE,EAAczU,KAAK,SAACuV,GAAD,MAA2B,YAAhBA,EAAOiB,SAEvDjX,IAAMuC,IAAN,GAAAtC,OAAaC,EAAb,2BAAAD,OAA8CwZ,EAAWzY,IAAKyY,EAAWzY,GACzE,CAAEb,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAGvCiY,KAAK,SAAAtO,GACFyD,IAAMC,QAAQ,0BACdgS,GAAiB,GACjBqD,KACAhC,OAEHxI,MAAM,SAAAxF,GACHnF,QAAQC,IAAIkF,GACZtF,IAAMsF,MAAM,wBACZgQ,QAiJ+EvQ,QAAQ,YAAYC,MAAO,WAAlF,mYCxe9BiS,GAAa,CACfC,IAAKC,qBAAW,SAACrgB,EAAOsgB,GAAR,OAAgB3T,EAAArH,EAAAsH,cAAC2T,GAAAjb,EAADlE,OAAAwN,OAAA,GAAY5O,EAAZ,CAAmBsgB,IAAKA,OAC5DE,MAAOH,qBAAW,SAACrgB,EAAOsgB,GAAR,OAAgB3T,EAAArH,EAAAsH,cAAC6T,GAAAnb,EAADlE,OAAAwN,OAAA,GAAW5O,EAAX,CAAkBsgB,IAAKA,OACzDI,MAAOL,qBAAW,SAACrgB,EAAOsgB,GAAR,OAAgB3T,EAAArH,EAAAsH,cAAC+T,GAAArb,EAADlE,OAAAwN,OAAA,GAAW5O,EAAX,CAAkBsgB,IAAKA,OACzDM,OAAQP,qBAAW,SAACrgB,EAAOsgB,GAAR,OAAgB3T,EAAArH,EAAAsH,cAACiU,GAAAvb,EAADlE,OAAAwN,OAAA,GAAmB5O,EAAnB,CAA0BsgB,IAAKA,OAClEQ,YAAaT,qBAAW,SAACrgB,EAAOsgB,GAAR,OAAgB3T,EAAArH,EAAAsH,cAACmU,GAAAzb,EAADlE,OAAAwN,OAAA,GAAkB5O,EAAlB,CAAyBsgB,IAAKA,OACtEU,KAAMX,qBAAW,SAACrgB,EAAOsgB,GAAR,OAAgB3T,EAAArH,EAAAsH,cAACqU,GAAA3b,EAADlE,OAAAwN,OAAA,GAAU5O,EAAV,CAAiBsgB,IAAKA,OACvDY,OAAQb,qBAAW,SAACrgB,EAAOsgB,GAAR,OAAgB3T,EAAArH,EAAAsH,cAACuU,GAAA7b,EAADlE,OAAAwN,OAAA,GAAa5O,EAAb,CAAoBsgB,IAAKA,OAC5Dc,OAAQf,qBAAW,SAACrgB,EAAOsgB,GAAR,OAAgB3T,EAAArH,EAAAsH,cAACyU,GAAA/b,EAADlE,OAAAwN,OAAA,GAAgB5O,EAAhB,CAAuBsgB,IAAKA,OAC/DgB,UAAWjB,qBAAW,SAACrgB,EAAOsgB,GAAR,OAAgB3T,EAAArH,EAAAsH,cAAC2U,GAAAjc,EAADlE,OAAAwN,OAAA,GAAe5O,EAAf,CAAsBsgB,IAAKA,OACjEkB,SAAUnB,qBAAW,SAACrgB,EAAOsgB,GAAR,OAAgB3T,EAAArH,EAAAsH,cAAC6U,GAAAnc,EAADlE,OAAAwN,OAAA,GAAc5O,EAAd,CAAqBsgB,IAAKA,OAC/DoB,SAAUrB,qBAAW,SAACrgB,EAAOsgB,GAAR,OAAgB3T,EAAArH,EAAAsH,cAACmU,GAAAzb,EAADlE,OAAAwN,OAAA,GAAkB5O,EAAlB,CAAyBsgB,IAAKA,OACnEqB,aAActB,qBAAW,SAACrgB,EAAOsgB,GAAR,OAAgB3T,EAAArH,EAAAsH,cAACgV,GAAAtc,EAADlE,OAAAwN,OAAA,GAAiB5O,EAAjB,CAAwBsgB,IAAKA,OACtEuB,YAAaxB,qBAAW,SAACrgB,EAAOsgB,GAAR,OAAgB3T,EAAArH,EAAAsH,cAAC+T,GAAArb,EAADlE,OAAAwN,OAAA,GAAW5O,EAAX,CAAkBsgB,IAAKA,OAC/DwB,OAAQzB,qBAAW,SAACrgB,EAAOsgB,GAAR,OAAgB3T,EAAArH,EAAAsH,cAACmV,GAAAzc,EAADlE,OAAAwN,OAAA,GAAY5O,EAAZ,CAAmBsgB,IAAKA,OAC3D0B,UAAW3B,qBAAW,SAACrgB,EAAOsgB,GAAR,OAAgB3T,EAAArH,EAAAsH,cAACqV,GAAA3c,EAADlE,OAAAwN,OAAA,GAAiB5O,EAAjB,CAAwBsgB,IAAKA,OACnE4B,gBAAiB7B,qBAAW,SAACrgB,EAAOsgB,GAAR,OAAgB3T,EAAArH,EAAAsH,cAACuV,GAAA7c,EAADlE,OAAAwN,OAAA,GAAY5O,EAAZ,CAAmBsgB,IAAKA,OACpE8B,WAAY/B,qBAAW,SAACrgB,EAAOsgB,GAAR,OAAgB3T,EAAArH,EAAAsH,cAACyV,GAAA/c,EAADlE,OAAAwN,OAAA,GAAgB5O,EAAhB,CAAuBsgB,IAAKA,QAkRpDgC,IA/QG1lB,YAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF6T,QAAS,CACL3U,OAAQF,EAAMG,QAAQ,KAG9B2U,MAAO,CACH1U,QAAS,QAEbuR,MAAO,CACHN,MAAO,UACP0D,SAAU,QAEdzI,QAAS,CACL+E,MAAO,WACP0D,SAAU,WAKE,SAAC5R,GAAU,IAAAa,EACKC,mBAAS,IADdK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACpB0hB,EADoBphB,EAAA,GACVqhB,EADUrhB,EAAA,GAAAI,EAEWT,mBAAS,IAFpBU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEpBiX,EAFoBhX,EAAA,GAEPihB,EAFOjhB,EAAA,GAAAG,EAGGb,mBAAS,IAHZc,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAGpB8Q,EAHoB7Q,EAAA,GAAAE,GAAAF,EAAA,GAIDd,oBAAS,IAJRiB,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAIpB2W,EAJoB1W,EAAA,GAIb2W,EAJa3W,EAAA,GAAAG,EAKGpB,oBAAS,GALZqB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAKpBwD,EALoBvD,EAAA,GAKXugB,EALWvgB,EAAA,GAW3B6J,oBAAU,WACN2W,KACC,IAEL,IAAMA,EAAgB,WAClBlc,IACItK,IADJ,GAAAuK,OACWC,EADX,WAEO,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAE3CiY,KAAK,SAACtO,GACFgd,EAAehd,EAASsB,KAAKyR,eAGjCxE,MAAM,SAACxF,OAIToU,EAAezd,sBAAW/D,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAe,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEFC,IAAMtK,IAAN,GAAAuK,OAAaC,EAAb,WAA+B,CAAEC,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAFrE,OAEnB2J,EAFmBa,EAAAQ,KAGzB0b,EAAY/c,EAASsB,MAHIT,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA8C,GAAA9C,EAAA,SAKzB+C,QAAQC,IAARhD,EAAA8C,IALyB,yBAAA9C,EAAAwB,SAAAtC,EAAA,iBAO9B,IAEGqd,EAAQ,eAAA7a,EAAA5G,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAA0C,EAAOR,GAAP,OAAApC,EAAAC,EAAAe,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,UAAA2B,EAAA5B,KAAA,GAELkB,EAFK,CAAAU,EAAA3B,KAAA,eAAA2B,EAAA3B,KAAA,EAGkBC,IAAMqc,OAAN,GAAApc,OAAgBC,EAAhB,YAAAD,OAAkCe,GAAM,CAAEb,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAHlG,OAAAqM,EAAArB,KAIL9K,OAAOC,SAAS8mB,SAJX,OAAA5a,EAAA3B,KAAA,gBAAA2B,EAAA5B,KAAA,EAAA4B,EAAAiB,GAAAjB,EAAA,kCAAAA,EAAAL,SAAAG,EAAA,iBAAH,gBAAAsB,GAAA,OAAAvB,EAAAwB,MAAAC,KAAAC,YAAA,GAWRsZ,EAAiB,WACnBtK,GAAS,IAGPY,EAAgB,SAAAla,GAClB,IAAMkC,EAAQ,IAAIP,KAEZkO,GADY7P,EAAIia,MAAM,KACV,IAAItY,KAAK3B,IACvB8P,EAAU5N,EAAM6N,cAAgBF,EAAUE,cACxCC,EAAI9N,EAAM+N,WAAaJ,EAAUI,WAIvC,OAHID,EAAI,GAAY,IAANA,GAAW9N,EAAMgO,UAAYL,EAAUK,YACjDJ,IAEY,IAAZA,EACOE,EAAI,YAERF,EAAU,YAGfkK,EAAoB,SAACnS,GACvB,IAAMtI,EAAiBsI,EAAWA,WAAWC,KAAK,SAAAC,GAAG,MAAgB,kBAAZA,EAAIC,OAC7D,OAAOzI,EAAiBA,EAAe6I,MAAQ,IAkBrD,OANEwE,oBAAU,WACN4W,KACD,CAACA,IACJvZ,QAAQC,IAAIkP,GAChBnP,QAAQC,IAAIkP,EAAY2B,SAAU,mBAG9BxN,EAAArH,EAAAsH,cAAA,WACID,EAAArH,EAAAsH,cAACW,EAAA,EAAD,CAAgBC,UAAW,IAAMC,iBAAe,IAChDd,EAAArH,EAAAsH,cAACqH,GAAA,EAAD,KACItH,EAAArH,EAAAsH,cAACsH,GAAA,EAAD,KACCsE,EAAY2B,SAAS,iBAAmB3B,EAAY2B,SAAS,kBAC1DxN,EAAArH,EAAAsH,cAACiB,EAAA,EAAD,CAAMC,GAAI,oBACNnB,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNP,UAAU,oBACVQ,UAAWxB,EAAArH,EAAAsH,cAACqW,GAAA,EAAD,CAAYzO,KAAK,QAE5B7H,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAAEC,cAAe,eAA9B,iBAGV,GAEE3B,EAAArH,EAAAsH,cAAA,WAAKD,EAAArH,EAAAsH,cAAA,WACLD,EAAArH,EAAAsH,cAAA,WACAD,EAAArH,EAAAsH,cAACwQ,GAAA9X,EAAD,CACI4d,MAAO/C,GACP5D,MAAM,gBACNc,QAAS,CACL,CACId,MAAO,eACP3B,MAAO,QAEX,CAAE2B,MAAO,aAAc3B,MAAO,MAC9B,CAAE2B,MAAO,SAAU3B,MAAO,UAC1B,CAAE2B,MAAO,gBAAiB3B,MAAO,cAAe0C,WAAW,GAC3D,CAAEf,MAAO,MAAO3B,MAAO,MAAO0C,WAAW,GACzC,CAAEf,MAAO,UAAW3B,MAAO,UAAW0C,WAAW,GACjD,CAAEf,MAAO,SAAU3B,MAAO,SAAU0C,WAAW,GAC/C,CAACf,MAAO,UAAW3B,MAAO,UAAW0C,WAAW,IAEpDC,UAAW9K,EACX1L,KAAMwb,EAAS9V,IAAI,SAAC+Q,GAAD,MAAU,CACzBrQ,KAAMqQ,EAAI5e,UAAa,IAAM4e,EAAIlW,UAAa,IAAMkW,EAAIjW,QACxDE,GAAI2R,EAAkBoE,EAAIvW,YAC1BhB,QAlDDA,EAkDmBuX,EAAIvX,OAjD/BA,EAAOhJ,SAkDEoC,YAAame,EAAIne,YACjBC,IAA0B,IAApBke,EAAIne,kBACc8jB,IAApB3F,EAAIne,aACgB,OAApBme,EAAIne,aACgB,KAApBme,EAAIne,YACF,EACAia,EAAckE,EAAIne,aACxBK,SA/DAA,EA+DoB8d,EAAI9d,QA9D3BA,GAAWA,EAAQA,SAAWA,EAAQA,QAAQ2H,OAAS,EAAI3H,EAAQA,QAAQ,GAAGkI,KAAO,MA+DlF8V,OAAQF,EAAIpV,OACPuE,EAAArH,EAAAsH,cAAC2M,EAAA,EAAD,CAAOrL,MAAM,QAAQsG,KAAK,QAA1B,UACE7H,EAAArH,EAAAsH,cAAC2M,EAAA,EAAD,CAAOrL,MAAM,OAAOsG,KAAK,QAAzB,cACP4O,QACIzW,EAAArH,EAAAsH,cAAA,WAEID,EAAArH,EAAAsH,cAACyW,GAAA,EAAD,KACI1W,EAAArH,EAAAsH,cAACyW,GAAA,EAAD,CAAYhV,MAAO,CAAEpQ,gBAAgB,UAAWiQ,MAAM,OAAQoV,OAAO,oBAAqBC,aAAa,QAAvG,WACY5W,EAAArH,EAAAsH,cAAA,QAAM4W,eAAA,GAAN,WAGZ7W,EAAArH,EAAAsH,cAACyW,GAAA,EAAD,CAAU1V,UAAW,aACpB6K,EAAY2B,SAAS,iBAAmB3B,EAAY2B,SAAS,kBAC1DxN,EAAArH,EAAAsH,cAACyW,GAAA,EAAD,CAAWhV,MAAO,CAAEH,MAAM,oBACtBvB,EAAArH,EAAAsH,cAACiB,EAAA,EAAD,CACIC,GAAI,CACAC,SAAU,qBACVpJ,MAAO,CAAE4T,WAAYiF,EAAKhF,YAAYA,KAG1C7L,EAAArH,EAAAsH,cAAC6W,GAAA,EAAD,CAAajP,KAAK,OAAQ,IAAI7H,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAACH,MAAO,SAArB,uBAGxC,GAGDsK,EAAY2B,SAAS,iBAAmB3B,EAAY2B,SAAS,kBAC1DxN,EAAArH,EAAAsH,cAACyW,GAAA,EAAD,CAAUhV,MAAO,CAAEH,MAAM,oBACrBvB,EAAArH,EAAAsH,cAACiB,EAAA,EAAD,CACIC,GAAI,CACAC,SAAU,oBACVpJ,MAAO,CAAE1E,UAAYud,EAAI/V,MAG7BkF,EAAArH,EAAAsH,cAAC6W,GAAA,EAAD,CAAYjP,KAAK,OAAQ,IAAI7H,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAACH,MAAO,SAArB,mBAGvC,GACDsK,EAAY2B,SAAS,mBAAqB3B,EAAY2B,SAAS,kBAC5DxN,EAAArH,EAAAsH,cAACyW,GAAA,EAAD,CAAUhV,MAAO,CAAEH,MAAM,oBACrBvB,EAAArH,EAAAsH,cAACiB,EAAA,EAAD,CACIwC,QAAS,SAAC/E,GAAD,OA3KtC,SAAC7D,GACZ,IAAM/B,EAAU6c,EAASrb,KAAK,SAAAC,GAAG,OAAIA,EAAIM,IAAMA,IAC/Cib,EAAWhd,GACXgT,GAAUD,GAwK8CnE,CAAOkJ,EAAI/V,KAC3BqG,GAAI,CACAC,SAAU,KACV2V,UAAWlG,IAGf7Q,EAAArH,EAAAsH,cAAC6W,GAAA,EAAD,CAAiBjP,KAAK,OAAS,IAC/B7H,EAAArH,EAAAsH,cAAA,QAAMyB,MAAO,CAACH,MAAO,SAArB,oBAGV,OAnHf,IAACxO,EAKDuG,IAoHH0X,QAAS,CACLC,YAAa,CAET1P,MAAO,QAEXyV,iBAAkB,CACdtmB,MAAQ,OACRumB,YAAa,SAEjBtG,WAAW,EACXO,cAAc,EACdC,qBAAsB,OACtBC,gBAAgB,CAAC,GAAG,GAAG,KACvBC,SAAS,GACTC,iBAAkB,SAMlCtR,EAAArH,EAAAsH,cAACuH,GAAA,EAAD,CAAOC,OAAQqE,EAAOnE,OAAQ0O,GAC1BrW,EAAArH,EAAAsH,cAAC6H,GAAA,EAAD,CAAaH,OAAQ0O,GAArB,kBACArW,EAAArH,EAAAsH,cAAC8H,GAAA,EAAD,4CAC0ChP,EAAUA,EAAQ6B,QAAW,KAAO7B,EAAQ0K,UAAa,IAAM1K,EAAQ4B,UAAY,IAE7HqF,EAAArH,EAAAsH,cAACiX,GAAA,EAAD,KACIlX,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CAAQE,MAAM,UAAU9G,KAAK,SAASiJ,QAAS,SAAC/E,GAAD,OAAOuX,EAASnd,EAAQ+B,MAAvE,OAAyF,IACzFkF,EAAArH,EAAAsH,cAACoB,EAAA,EAAD,CAAQE,MAAM,YAAY9G,KAAK,SAASiJ,QAAS,SAAC/E,GAAD,OAAO0X,MAAxD,gCC1TV3F,GAAU,CACZ,CACIzC,MAAO,SACPC,WAAY,SACZxd,MAAO,IACPyd,UAAU,GAEd,CACIF,MAAO,SACPC,WAAY,SACZxd,MAAO,IACPyd,UAAU,GAEd,CACIF,MAAO,cACPC,WAAY,cACZxd,MAAO,IACPyd,UAAU,GAEd,CACIF,MAAO,SACPC,WAAY,SACZxd,MAAO,IACPyd,UAAU,IAoDHgJ,GAhDO,WAGlB,OACInX,EAAArH,EAAAsH,cAAC8R,GAAA,EAAD,KACI/R,EAAArH,EAAAsH,cAAC+R,GAAA,EAAD,KACIhS,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMC,WAAS,EAACjiB,QAAS,GACrB2P,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,GAAf,QACAvS,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,GAAf,QACAvS,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,GAAf,QACAvS,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,GACXvS,EAAArH,EAAAsH,cAACmJ,GAAA,EAAD,CACI3G,EAAG,EACHnS,QAAQ,OACR8mB,eAAe,SACf5mB,WAAW,UAEXwP,EAAArH,EAAAsH,cAACiB,EAAA,EAAD,CAAMC,GAAI,CACNC,SAAU,uBAEVpB,EAAArH,EAAAsH,cAACiS,GAAA,EAAD,CACI5Q,QAAQ,YACRI,MAAO,CAAEpQ,gBAAiB,UAE1B0O,EAAArH,EAAAsH,cAACoX,GAAA1e,EAAD,MAJJ,wBAUhBqH,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMC,WAAS,EAACjiB,QAAS,GACrB2P,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,IACXvS,EAAArH,EAAAsH,cAACmJ,GAAA,EAAD,CAAKpY,OAAQ,SACTgP,EAAArH,EAAAsH,cAACsR,GAAA,EAAD,CACIC,KAjCf,GAkCed,QAASA,GACTW,SAAU,EACVI,mBAAoB,CAAC,GACrBE,yBAAuB,wCCsKxC2F,GAnOU,WAAM,IAAA/jB,EACOC,cAA1BO,EADmBR,EACnBQ,aAAcua,EADK/a,EACL+a,QAChBlT,EAAQ,eAAAmN,EAAA9T,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAG,SAAAC,EAAOuB,GAAP,IAAAmd,EAAA,OAAA7e,EAAAC,EAAAe,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAGH2d,EAAS,CACXC,WAAcpd,EAAKqd,OACnBC,UAAatd,EAAKud,UAClBC,cAAiBxd,EAAKyd,iBACtB7mB,OAAUoJ,EAAK0d,OACf3I,SAAY,EACZ4I,SAAY3d,EAAK4d,UATZre,EAAAE,KAAA,EAWHC,IAAMwC,KAAN,GAAAvC,OAAcC,EAAd,sBAA2Cud,EAAQ,CAAEtd,QAAS,CAACC,cAAA,UAAAH,OAA4B5K,MAXxF,cAAAwK,EAAAE,KAAA,EAYH6V,KAAKC,KAAK,CACZ7L,KAAM,UACNgH,KAAM,iCACNmN,MAAO,OAfF,OAAAte,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,EAAAD,EAAA8C,GAAA9C,EAAA,SAAAA,EAAAE,KAAA,GAkBH6V,KAAKC,KAAK,CACZ7L,KAAM,QACN8L,MAAO,UACP9E,KAAM,mDArBD,yBAAAnR,EAAAwB,SAAAtC,EAAA,iBAAH,gBAAA+D,GAAA,OAAA2L,EAAA1L,MAAAC,KAAAC,YAAA,GA6Bd,OACIiD,EAAArH,EAAAsH,cAAC8R,GAAA,EAAD,KACI/R,EAAArH,EAAAsH,cAAC+R,GAAA,EAAD,KACIhS,EAAArH,EAAAsH,cAAA,QAAM7E,SAAUrH,EAAaqH,EAPzB,eAQA4E,EAAArH,EAAAsH,cAACkS,GAAA,EAAD,CACIzQ,MAAO,CACHpR,QAAS,OACT8hB,WAAY,OACZ7G,QAAS,OACTnb,OAAQ,cAEZ4P,EAAArH,EAAAsH,cAAC6J,GAAA,EAAD,CAAYxI,QAAQ,MAApB,uBACAtB,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMC,WAAS,EAACjiB,QAAS,GACrB2P,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,GACXvS,EAAArH,EAAAsH,cAACuS,GAAA,EAAD,CAAa0F,WAAS,GAClBlY,EAAArH,EAAAsH,cAACkY,GAAA,EAAD,CAAsBC,YAAaC,MAC/BrY,EAAArH,EAAAsH,cAACqY,EAAA,EAAD,CACI9X,KAAK,mBACL8N,QAASA,EACTiK,aAAc,KACdjI,OAAQ,SAAAjV,GAAA,IAAAmd,EAAAnd,EAAG4S,MAAS5L,EAAZmW,EAAYnW,SAAUxH,EAAtB2d,EAAsB3d,MAAuBgH,EAA7CxG,EAA+Bod,WAAc5W,MAA7C,OACJ7B,EAAArH,EAAAsH,cAACyY,GAAA,EAAD,CACItF,YAAa,SAAC/f,GAAD,OAAW2M,EAAArH,EAAAsH,cAACqT,GAAA,EAAcjgB,IACvC8Z,MAAM,sBACN6F,SAAUnY,EACVA,MAAOA,EACPwH,SAAUA,EACVR,QAASA,EACT8W,WAAY9W,EAAQA,EAAMM,QAAU,aAO5DnC,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,GACXvS,EAAArH,EAAAsH,cAACuS,GAAA,EAAD,CAAa0F,WAAS,GAClBlY,EAAArH,EAAAsH,cAACqY,EAAA,EAAD,CACI9X,KAAK,QACL8N,QAASA,EACTiK,aAAa,GACbjI,OAAQ,SAAAsI,GAAA,IAAAC,EAAAD,EAAG3K,MAAS5L,EAAZwW,EAAYxW,SAAUxH,EAAtBge,EAAsBhe,MAAuBgH,EAA7C+W,EAA+BH,WAAc5W,MAA7C,OACJ7B,EAAArH,EAAAsH,cAACqT,GAAA,EAAD,CACInG,MAAM,aACNrS,GAAG,QACHwG,QAAQ,WACRzG,MAAOA,EACPwH,SAAUA,EACVR,QAASA,EACT8W,WAAY9W,EAAQA,EAAMM,QAAU,YAMxDnC,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,GACXvS,EAAArH,EAAAsH,cAACuS,GAAA,EAAD,CAAa0F,WAAS,GAClBlY,EAAArH,EAAAsH,cAACqY,EAAA,EAAD,CACI9X,KAAK,kBACL8N,QAASA,EACTiK,aAAa,GACbjI,OAAQ,SAAAwI,GAAA,IAAAC,EAAAD,EAAG7K,MAAS5L,EAAZ0W,EAAY1W,SAAUxH,EAAtBke,EAAsBle,MAAuBgH,EAA7CiX,EAA+BL,WAAc5W,MAA7C,OACJ7B,EAAArH,EAAAsH,cAACqT,GAAA,EAAD,CACInG,MAAM,yBACNrS,GAAG,kBACHwG,QAAQ,WACRzG,MAAOA,EACPwH,SAAUA,EACVR,QAASA,EACT8W,WAAY9W,EAAQA,EAAMM,QAAU,YAMxDnC,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,GACXvS,EAAArH,EAAAsH,cAACuS,GAAA,EAAD,CAAa0F,WAAS,GAClBlY,EAAArH,EAAAsH,cAACqY,EAAA,EAAD,CACI9X,KAAK,cACL8N,QAASA,EACTiK,aAAa,GACbjI,OAAQ,SAAAyC,GAAA,IAAAiG,EAAAjG,EAAG9E,MAAS5L,EAAZ2W,EAAY3W,SAAUxH,EAAtBme,EAAsBne,MAAuBgH,EAA7CkR,EAA+B0F,WAAc5W,MAA7C,OACJ7B,EAAArH,EAAAsH,cAACqT,GAAA,EAAD,CACInG,MAAM,kBACNrS,GAAG,cACHwG,QAAQ,WACRzG,MAAOA,EACPwH,SAAUA,EACVR,QAASA,EACT8W,WAAY9W,EAAQA,EAAMM,QAAU,YAMxDnC,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,GACXvS,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMC,WAAS,EAACjiB,QAAS,GACrB2P,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,GACXvS,EAAArH,EAAAsH,cAACuS,GAAA,EAAD,CAAa0F,WAAS,GAClBlY,EAAArH,EAAAsH,cAACqY,EAAA,EAAD,CACI9X,KAAK,WACL8N,QAASA,EACTiK,aAAa,GACbjI,OAAQ,SAAA2I,GAAA,IAAAC,EAAAD,EAAGhL,MAAS5L,EAAZ6W,EAAY7W,SAAUxH,EAAtBqe,EAAsBre,MAAuBgH,EAA7CoX,EAA+BR,WAAc5W,MAA7C,OACJ7B,EAAArH,EAAAsH,cAACqT,GAAA,EAAD,CACInG,MAAM,kBACNrS,GAAG,WACHwG,QAAQ,WACRzG,MAAOA,EACPwH,SAAUA,EACVR,QAASA,EACT8W,WAAY9W,EAAQA,EAAMM,QAAU,YAOxDnC,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,GACXvS,EAAArH,EAAAsH,cAACuS,GAAA,EAAD,CAAa0F,WAAS,GAClBlY,EAAArH,EAAAsH,cAACqY,EAAA,EAAD,CACI9X,KAAK,YACL8N,QAASA,EACTiK,aAAa,GACbjI,OAAQ,SAAA6I,GAAA,IAAAC,EAAAD,EAAGlL,MAAS5L,EAAZ+W,EAAY/W,SAAUxH,EAAtBue,EAAsBve,MAAuBgH,EAA7CsX,EAA+BV,WAAc5W,MAA7C,OACJ7B,EAAArH,EAAAsH,cAACqT,GAAA,EAAD,CACInG,MAAM,mBACNrS,GAAG,YACHwG,QAAQ,WACRzG,MAAOA,EACPwH,SAAUA,EACVR,QAASA,EACT8W,WAAY9W,EAAQA,EAAMM,QAAU,cAQhEnC,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,GACXvS,EAAArH,EAAAsH,cAACuS,GAAA,EAAD,CAAa0F,WAAS,GAClBlY,EAAArH,EAAAsH,cAACqY,EAAA,EAAD,CACI9X,KAAK,SACL8N,QAASA,EACTiK,aAAa,GACbjI,OAAQ,SAAA+I,GAAA,IAAAC,EAAAD,EAAGpL,MAAS5L,EAAZiX,EAAYjX,SAAUxH,EAAtBye,EAAsBze,MAAuBgH,EAA7CwX,EAA+BZ,WAAc5W,MAA7C,OACJ7B,EAAArH,EAAAsH,cAACqT,GAAA,EAAD,CACInG,MAAM,cACNrS,GAAG,SACHwG,QAAQ,WACRzG,MAAOA,EACPwH,SAAUA,EACVR,QAASA,EACT8W,WAAY9W,EAAQA,EAAMM,QAAU,YAOxDnC,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,GACXvS,EAAArH,EAAAsH,cAACuS,GAAA,EAAD,CAAa0F,WAAS,GAClBlY,EAAArH,EAAAsH,cAACqY,EAAA,EAAD,CACI9X,KAAK,SACL8N,QAASA,EACTiK,aAAa,GACbjI,OAAQ,SAAApS,GAAA,IAAAqb,EAAArb,EAAG+P,MAAS5L,EAAZkX,EAAYlX,SAAUxH,EAAtB0e,EAAsB1e,MAAuBgH,EAA7C3D,EAA+Bua,WAAc5W,MAA7C,OACJ7B,EAAArH,EAAAsH,cAACqT,GAAA,EAAD,CACInG,MAAM,cACNrS,GAAG,SACHwG,QAAQ,WACRzG,MAAOA,EACPwH,SAAUA,EACVR,QAASA,EACT8W,WAAY9W,EAAQA,EAAMM,QAAU,aAO5DnC,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMC,WAAS,EAACjiB,QAAS,GACrB2P,EAAArH,EAAAsH,cAACoS,GAAA,EAAD,CAAMhP,MAAI,EAACkP,GAAI,IACXvS,EAAArH,EAAAsH,cAACiS,GAAA,EAAD,CAAQzX,KAAM,SAAU6G,QAAQ,YAAYC,MAAO,SAAnD,UADJ,WAGIvB,EAAArH,EAAAsH,cAACiS,GAAA,EAAD,CAAQzX,KAAM,SAAU6G,QAAQ,YAAYC,MAAO,WAAnD,iBCrNjB,SAASiY,KACtB,OACExZ,EAAArH,EAAAsH,cAACwZ,EAAA,EAAD,KACEzZ,EAAArH,EAAAsH,cAAA,WACAD,EAAArH,EAAAsH,cAACW,EAAA,EAAD,MAGEZ,EAAArH,EAAAsH,cAACwZ,EAAA,EAAD,KAEEzZ,EAAArH,EAAAsH,cAACwZ,EAAA,EAAD,CAAOC,KAAK,qBACV1Z,EAAArH,EAAAsH,cAAC0Z,GAAD,OAEF3Z,EAAArH,EAAAsH,cAACwZ,EAAA,EAAD,CAAOC,KAAK,sBACV1Z,EAAArH,EAAAsH,cAAC2Z,GAAD,OAEF5Z,EAAArH,EAAAsH,cAACwZ,EAAA,EAAD,CAAOC,KAAK,mBACV1Z,EAAArH,EAAAsH,cAAC4Z,GAAD,OAEF7Z,EAAArH,EAAAsH,cAACwZ,EAAA,EAAD,CAAOC,KAAK,sBACV1Z,EAAArH,EAAAsH,cAAC6Z,GAAD,OAEF9Z,EAAArH,EAAAsH,cAACwZ,EAAA,EAAD,CAAOC,KAAK,KACV1Z,EAAArH,EAAAsH,cAAC8Z,GAAD,UASZ,SAASH,KACP,OAAO5Z,EAAArH,EAAAsH,cAAC+Z,GAAD,MAET,SAASL,KACP,OAAO3Z,EAAArH,EAAAsH,cAACga,EAAD,MAET,SAASJ,KACP,OAAO7Z,EAAArH,EAAAsH,cAACia,GAAD,MAET,SAASJ,KACP,OAAO9Z,EAAArH,EAAAsH,cAACka,GAAD,aChDTC,IAAS9J,OACPtQ,EAAArH,EAAAsH,cAACD,EAAArH,EAAM0hB,WAAP,KACEra,EAAArH,EAAAsH,cAACuZ,GAAD,OAEFc,SAASC,eAAe","file":"static/js/main.93bef77e.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n\r\n//export const url =  'http://localhost:8282/api/v1/';\r\n//export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjU1MjMzMDI1fQ.32FEtD9ZwM6cM-oki_PsN7tKNieci7XUoENiqun_QTlD_EIfbOiH6vqpWz_r8x6nHt5Yei8KVNnMCvyNqJPkmA'","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Form, FormGroup, Label, Spinner,} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n}));\r\n\r\nconst schema = yup.object().shape({\r\n    dateOfRegistration: yup.date().required(),\r\n    hospitalNumber: yup.string().required(),\r\n    firstName: yup.string().required(),\r\n    middleName: yup.string().nullable(),\r\n    lastName: yup.string().required(),\r\n    sex: yup.number().required(),\r\n    employmentStatus: yup.number().required(),\r\n    highestQualification: yup.number().required(),\r\n    maritalStatus: yup.number().required(),\r\n    dob: yup.date().required(),\r\n    dateOfBirth: yup.string().required(),\r\n    age: yup.number(),\r\n    pnumber: yup.string().required(),\r\n    altPhonenumber: yup.string().nullable(),\r\n    email: yup.string().nullable(),\r\n    address: yup.string().nullable(),\r\n    landmark: yup.string().nullable(),\r\n    countryId: yup.number().required(),\r\n    stateId: yup.number().required(),\r\n    district: yup.number().nullable(),\r\n});\r\n\r\nconst UserRegistration = (props) => {\r\n    const { register, setValue, getValues, setError, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [stateUnitOptions, setStateUnitOptions]= useState([]);\r\n    const [districtUnitOptions, setDistrictUnitOptions]= useState([]);\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const location = useLocation();\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n\r\n    const getNames = (relationship) => {\r\n        const surname = relationship.surname;\r\n        const firstName = relationship.firstname;\r\n        const otherName = relationship.otherName ? relationship.otherName : '';\r\n        return surname + ', ' + firstName + ' ' + otherName;\r\n    }\r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const getPhoneContactPoint = (contactPoint) => {\r\n        return contactPoint ? contactPoint.value : '';\r\n    };\r\n    const getAddress = (address) => {\r\n        return address && address.line && address.line.length > 0 ? address.line[0] : '';\r\n    };\r\n    const getPatient = useCallback(async () => {\r\n        if (patientId) {\r\n            const response = await axios.get(`${baseUrl}patient/${patientId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            const patient = response.data;\r\n            const contacts = patient.contact ? patient.contact : [];\r\n            setContacts(contacts.contact);\r\n            const identifiers = patient.identifier;\r\n            const address = patient.address;\r\n            const contactPoint = patient.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            const gender = patient.gender;\r\n            const employmentStatus = patient.employmentStatus;\r\n            const education = patient.education;\r\n            const maritalStatus = patient.maritalStatus;\r\n            setValue('dateOfRegistration', patient.dateOfRegistration);\r\n            setValue('firstName', patient.firstName);\r\n            setValue('middleName', patient.otherName);\r\n            setValue('lastName', patient.surname);\r\n            setValue('hospitalNumber', hospitalNumber ? hospitalNumber.value : '');\r\n            setValue('maritalStatus', maritalStatus.id);\r\n            setValue('employmentStatus', employmentStatus.id);\r\n            setValue('sex', gender.id);\r\n            setValue('highestQualification', education.id);\r\n            setValue('dob', format(new Date(patient.dateOfBirth), 'yyyy-MM-dd'));\r\n            if (country) {\r\n                setValue('countryId', country.countryId);\r\n                const stateOptions = await loadOrganisationUnitsByParentId(country.countryId);\r\n                setStateUnitOptions(stateOptions);\r\n                setValue('stateId', country.stateId);\r\n                const districtOptions = await loadOrganisationUnitsByParentId(country.stateId);\r\n                setDistrictUnitOptions(districtOptions);\r\n                setValue('district', country.district);\r\n                setValue('address', country.city);\r\n                setValue('landmark', country.line[0]);\r\n            }\r\n            setValue('pnumber', phone ? phone.value : null);\r\n            setValue('email', email ? email.value : null);\r\n            setValue('altPhonenumber', altphone ? altphone.value : null);\r\n        }\r\n    }, []);\r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    const handleSaveRelationship = (e) => {\r\n        const relationshipType = getValues(\"relationshipType\");\r\n        const cfirstName = getValues(\"cfirstName\");\r\n        const cmiddleName = getValues(\"cmiddleName\");\r\n        const clastName = getValues(\"clastName\");\r\n        const contactPhoneNumber = getValues(\"contactPhoneNumber\");\r\n        const contactEmail = getValues(\"contactEmail\");\r\n        const contactAddress = getValues(\"contactAddress\");\r\n        if (!relationshipType) {\r\n            setError(\"relationshipType\", {  type: 'custom', message: 'Relationship is required' }, { shouldFocus: true });\r\n            return;\r\n        }\r\n        if (!cfirstName) {\r\n            setError(\"cfirstName\", {  type: 'custom', message: 'FirstName is required' }, { shouldFocus: true });\r\n            return;\r\n        }\r\n        if (!clastName) {\r\n            setError(\"clastName\", {  type: 'custom', message: 'LastName is required' }, { shouldFocus: true });\r\n            return;\r\n        }\r\n\r\n        const contact = {\r\n            \"address\": {\r\n                \"line\": [\r\n                    contactAddress\r\n                ],\r\n            },\r\n            \"contactPoint\": {\r\n                \"type\": \"phone\",\r\n                \"value\": contactPhoneNumber\r\n            },\r\n            \"firstName\": cfirstName,\r\n            \"fullName\": cfirstName + ' ' + cmiddleName + ' ' + clastName,\r\n            \"relationshipId\": relationshipType,\r\n            \"surname\": clastName,\r\n            \"otherName\": cmiddleName\r\n        };\r\n        if (editRelative != null) {\r\n            contacts.splice(editRelative, 1);\r\n            setContacts(contacts.concat(contact));\r\n        } else {\r\n            setContacts(contacts.concat(contact));\r\n        }\r\n        setShowRelative(false);\r\n    };\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            const patientForm = {\r\n                active: true,\r\n                address: [\r\n                    {\r\n                        \"city\": data.address,\r\n                        \"countryId\": data.countryId,\r\n                        \"district\": data.district,\r\n                        \"line\": [\r\n                            data.landmark\r\n                        ],\r\n                        \"organisationUnitId\": 0,\r\n                        \"postalCode\": \"\",\r\n                        \"stateId\": data.stateId\r\n                    }\r\n                ],\r\n                contact: contacts,\r\n                contactPoint: [],\r\n                dateOfBirth: new Date(data.dob),\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: data.firstName,\r\n                genderId: data.sex,\r\n                identifier: [\r\n                    {\r\n                        \"assignerId\": 1,\r\n                        \"type\": \"HospitalNumber\",\r\n                        \"value\": data.hospitalNumber\r\n                    }\r\n                ],\r\n                otherName: data.middleName,\r\n                maritalStatusId: data.maritalStatus,\r\n                surname: data.lastName,\r\n                educationId: data.highestQualification,\r\n                employmentStatusId: data.employmentStatus,\r\n                dateOfRegistration: data.dateOfRegistration,\r\n                isDateOfBirthEstimated: data.dateOfBirth == \"Actual\" ? false : true\r\n            };\r\n            const phone = {\r\n                \"type\": \"phone\",\r\n                \"value\": data.pnumber\r\n            };\r\n            if (data.email) {\r\n                const email = {\r\n                    \"type\": \"email\",\r\n                    \"value\": data.email\r\n                }\r\n                patientForm.contactPoint.push(email);\r\n            }\r\n            if (data.altPhonenumber) {\r\n                const altPhonenumber = {\r\n                    \"type\": \"altphone\",\r\n                    \"value\": data.altPhonenumber\r\n                }\r\n                patientForm.contactPoint.push(altPhonenumber);\r\n            }\r\n            patientForm.contactPoint.push(phone);\r\n            if (patientId) {\r\n                patientForm.id = null;\r\n                const response = await axios.put(`${baseUrl}patient/${patientId}`, patientForm, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            } else {\r\n                const response = await axios.post(`${baseUrl}patient/`, patientForm, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            }\r\n            toast.success(\"Patient Register successful\");\r\n            history.push('/');\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n    const onError = (errors) => {\r\n        console.error(errors)\r\n    }\r\n    const handleEditRelative = (relative, index) => {\r\n        setValue(\"relationshipType\", relative.relationshipId);\r\n        setValue(\"cfirstName\", relative.firstname);\r\n        setValue(\"cmiddleName\", relative.otherName);\r\n        setValue(\"clastName\", relative.surname);\r\n        setValue(\"contactPhoneNumber\", relative.contactPoint ? relative.contactPoint.value : '');\r\n        setValue(\"contactAddress\", relative.address && relative.address.line && relative.address.line.length > 0 ? relative.address.line[0] : '');\r\n        setShowRelative(true);\r\n        setEditRelative(index);\r\n    };\r\n    const handleDeleteRelative = (index) => {\r\n        setTimeout(() => {\r\n            contacts.splice(index, 1);\r\n            setContacts(contacts);\r\n            setShowRelative(true);\r\n            setShowRelative(false);\r\n        }, 500);\r\n    };\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/GENDER`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n          \r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n    const onCountryChange = async (e) => {\r\n        if (e.target.value) {\r\n            const stateOptions = await loadOrganisationUnitsByParentId(e.target.value);\r\n            setStateUnitOptions(stateOptions);\r\n        } else {\r\n            setStateUnitOptions([]);\r\n        }\r\n    };\r\n    const onStateChange = async (e) => {\r\n        if (e.target.value) {\r\n            const districtOptions = await loadOrganisationUnitsByParentId(e.target.value);\r\n            setDistrictUnitOptions(districtOptions);\r\n        } else {\r\n            setDistrictUnitOptions([]);\r\n        }\r\n    };\r\n    \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            setValue('age', age_now);\r\n        } else {\r\n            setValue('age', null);\r\n        }\r\n    }\r\n\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dob = estDob.add((e.target.value * -1), 'years');\r\n            setValue('dob', format(new Date(dob.toDate()), 'yyyy-MM-dd'));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();\r\n        getPatient();\r\n    }, [loadGenders, loadMaritalStatus, loadEducation, loadOccupation, loadRelationships, loadTopLevelCountry, getPatient]);\r\n\r\n    let genderRows = null;\r\n    let maritalStatusRows = null;\r\n    let educationRows = null;\r\n    let occupationRows = null;\r\n    let relationshipRows = null;\r\n    let topLevelUnitCountryRows = null;\r\n    let stateRows = null;\r\n    let districtRows = null;\r\n    if (genders && genders.length > 0) {\r\n        genderRows = genders.map((gender, index) => (\r\n            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n        ));\r\n    }\r\n    if (maritalStatusOptions && maritalStatusOptions.length > 0) {\r\n        maritalStatusRows = maritalStatusOptions.map((maritalStatusOption, index) => (\r\n            <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n        ));\r\n    }\r\n    if (educationOptions && educationOptions.length > 0) {\r\n        educationRows = educationOptions.map((educationOption, index) => (\r\n            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n        ));\r\n    }\r\n    if (occupationOptions && occupationOptions.length > 0) {\r\n        occupationRows = occupationOptions.map((occupationOption, index) => (\r\n            <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n        ));\r\n    }\r\n    if (relationshipOptions && relationshipOptions.length > 0) {\r\n        relationshipRows = relationshipOptions.map((relationshipOption, index) => (\r\n            <option key={relationshipOption.id} value={relationshipOption.id}>{relationshipOption.display}</option>\r\n        ));\r\n    }\r\n    if (topLevelUnitCountryOptions && topLevelUnitCountryOptions.length > 0) {\r\n        topLevelUnitCountryRows = topLevelUnitCountryOptions.map((topLevelUnitCountryOption, index) => (\r\n            <option key={topLevelUnitCountryOption.id} value={topLevelUnitCountryOption.id}>{topLevelUnitCountryOption.name}</option>\r\n        ));\r\n    }\r\n    if (stateUnitOptions && stateUnitOptions.length > 0) {\r\n        stateRows = stateUnitOptions.map((stateUnitOption, index) => (\r\n            <option key={stateUnitOption.id} value={stateUnitOption.id}>{stateUnitOption.name}</option>\r\n        ));\r\n    }\r\n    if (districtUnitOptions && districtUnitOptions.length > 0) {\r\n        districtRows = districtUnitOptions.map((districtUnitOption, index) => (\r\n            <option key={districtUnitOption.id} value={districtUnitOption.id}>{districtUnitOption.name}</option>\r\n        ));\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-right ms-1\"\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form onSubmit={handleSubmit(onSubmit, onError)}>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <h5 className=\"card-title\">{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration*</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        max={today}\r\n                                                        {...register(\"dateOfRegistration\")}\r\n                                                    />\r\n                                                    {errors.dateOfRegistration && <p>{errors.dateOfRegistration.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Patient ID * </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        {...register(\"hospitalNumber\")}\r\n                                                    />\r\n                                                    {errors.hospitalNumber && <p>{errors.hospitalNumber.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        {...register(\"firstName\")}\r\n                                                    />\r\n                                                    {errors.firstName && <p>{errors.firstName.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        {...register(\"middleName\")}\r\n                                                    />\r\n                                                    {errors.middleName && <p>{errors.middleName.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        {...register(\"lastName\")}\r\n                                                    />\r\n                                                    {errors.lastName && <p>{errors.lastName.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"sex\"\r\n                                                        id=\"sex\"\r\n                                                        {...register(\"sex\")}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        {genderRows}\r\n                                                    </select>\r\n                                                    {errors.sex && <p>{errors.sex.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Employment Status *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"employmentStatus\"\r\n                                                        id=\"employmentStatus\"\r\n                                                        {...register(\"employmentStatus\")}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        {occupationRows}\r\n                                                    </select>\r\n                                                    {errors.lastName && <p>{errors.lastName.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Highest Qualification *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"highestQualification\"\r\n                                                        id=\"highestQualification\"\r\n                                                        {...register(\"highestQualification\")}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        {educationRows}\r\n                                                    </select>\r\n                                                    {errors.highestQualification && <p>{errors.highestQualification.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Marital Status</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"maritalStatus\"\r\n                                                        id=\"maritalStatus\"\r\n                                                        {...register(\"maritalStatus\")}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        {maritalStatusRows}\r\n                                                    </select>\r\n                                                    {errors.maritalStatus && <p>{errors.maritalStatus.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                {...register(\"dateOfBirth\")}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                {...register(\"dateOfBirth\")}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        {...register(\"dob\")}\r\n                                                        onChange={(e) => handleDobChange(e)}\r\n                                                    />\r\n                                                    {errors.dob && <p>{errors.dob.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        {...register(\"age\")}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={(e) => handleAgeChange(e)}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <h5 className=\"card-title\">Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"tel\"\r\n                                                    name=\"pnumber\"\r\n                                                    id=\"pnumber\"\r\n                                                    {...register(\"pnumber\")}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                />\r\n                                                {errors.pnumber && <p>{errors.pnumber.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"tel\"\r\n                                                    name=\"altPhoneNumber\"\r\n                                                    id=\"altPhoneNumber\"\r\n                                                    {...register(\"altPhonenumber\")}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                />\r\n                                                {errors.altPhonenumber && <p>{errors.altPhonenumber.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    {...register(\"email\")}\r\n                                                />\r\n                                                {errors.email && <p>{errors.email.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"country\"\r\n                                                    id=\"country\"\r\n                                                    {...register(\"countryId\")}\r\n                                                    onChange={(e) => onCountryChange(e)}>\r\n                                                    <option value={\"\"}></option>\r\n                                                    {topLevelUnitCountryRows}\r\n                                                </select>\r\n                                                {errors.country && <p>{errors.country.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    {...register(\"stateId\")}\r\n                                                    onChange={(e) => onStateChange(e)}>\r\n                                                    <option value={\"\"}></option>\r\n                                                    {stateRows}\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    {...register(\"district\")}>\r\n                                                    <option value={\"\"}></option>\r\n                                                    {districtRows}\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    {...register(\"address\")}\r\n                                                />\r\n                                                {errors.address && <p>{errors.address.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    {...register(\"landmark\")}\r\n                                                />\r\n                                                {errors.landmark && <p>{errors.landmark.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <h5 className=\"card-title\">Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }}>\r\n                                                        <thead>\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index}>\r\n                                                                    <td>{ getRelationship(item.relationshipId) }</td>\r\n                                                                    <td>{ getNames(item) }</td>\r\n                                                                    <td>{ getPhoneContactPoint(item.contactPoint) }</td>\r\n                                                                    <td>{ getAddress(item.address) }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={(e) => handleEditRelative(item, index)}>\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}>\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipType\"\r\n                                                                            id=\"relationshipType\"\r\n                                                                            {...register(\"relationshipType\")}>\r\n                                                                            <option value={\"\"}></option>\r\n                                                                            {relationshipRows}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipType && <p>{errors.relationshipType.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"cfirstName\"\r\n                                                                            id=\"cfirstName\"\r\n                                                                            {...register(\"cfirstName\")}\r\n                                                                        />\r\n                                                                        {errors.cfirstName && <p>{errors.cfirstName.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"cmiddleName\"\r\n                                                                            id=\"cmiddleName\"\r\n                                                                            {...register(\"cmiddleName\")}\r\n                                                                        />\r\n                                                                        {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"clastName\"\r\n                                                                            id=\"clastName\"\r\n                                                                            {...register(\"clastName\")}\r\n                                                                        />\r\n                                                                        {errors.clastName && <p>{errors.clastName.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"contactPhoneNumber\"\r\n                                                                            id=\"contactPhoneNumber\"\r\n                                                                            {...register(\"contactPhoneNumber\")}\r\n                                                                        />\r\n                                                                        {errors.contactPhoneNumber && <p>{errors.contactPhoneNumber.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"contactEmail\"\r\n                                                                            id=\"contactEmail\"\r\n                                                                            {...register(\"contactEmail\")}\r\n                                                                        />\r\n                                                                        {errors.contactEmail && <p>{errors.contactEmail.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"contactAddress\"\r\n                                                                            id=\"contactAddress\"\r\n                                                                            {...register(\"contactAddress\")}\r\n                                                                        />\r\n                                                                        {errors.contactAddress && <p>{errors.contactAddress.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {userDetail ===null ? (\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n                                )\r\n                                :\r\n                                (\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n                                )\r\n                            }\r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n    \r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${baseUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${baseUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Accordion, AccordionActions, AccordionDetails, AccordionSummary} from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {Button, Label} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {Col, Row, Modal} from \"reactstrap\";\r\nimport CaptureBiometric from './CaptureBiometric';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    icon: {\r\n        verticalAlign: 'bottom',\r\n        height: 20,\r\n        width: 20,\r\n    },\r\n    details: {\r\n        alignItems: 'center',\r\n    },\r\n    column: {\r\n        flexBasis: '20.33%',\r\n    },\r\n    helper: {\r\n        borderLeft: `2px solid ${theme.palette.divider}`,\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\r\n    },\r\n    link: {\r\n        color: theme.palette.primary.main,\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n        },\r\n    },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n    const { classes } = props;\r\n    const patientObj = props.patientObj ? props.patientObj : {};\r\n    const permissions= props.permissions ? props.permissions : [];\r\n    const [modal, setModal] = useState(false) //Modal to collect sample \r\n    const [patientBiometricStatus, setPatientBiometricStatus]= useState(props.patientObj.biometricStatus);\r\n    const toggleModal = () => setModal(!modal)\r\n\r\n    const [biometricStatus, setBiometricStatus] = useState(false);\r\n    const [devices, setDevices] = useState([]);\r\n    useEffect(() => {         \r\n        TemplateType();\r\n      }, []);\r\n     //Get list of KP\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               console.log(response.data);\r\n               setBiometricStatus(response.data);\r\n               if(response.data===true){\r\n                axios\r\n                    .get(`${baseUrl}biometrics/devices`,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                    )\r\n                    .then((response) => {\r\n                        setDevices(response.data);\r\n                        \r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error)\r\n                    });\r\n               \r\n                }\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    const calculate_age = dob => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getPhone = (contactPoint) => {\r\n        const phoneContact = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n        return phoneContact ? phoneContact.value : '';\r\n    };\r\n\r\n    const getAddress = (address) => {\r\n        const city = address && address.address && address.address.length > 0 ? address.address[0].city : null;\r\n        return city;\r\n    };\r\n\r\n\r\n    const handleBiometricCapture = (id) => { \r\n        let patientObjID= id\r\n        setModal(!modal) \r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Accordion defaultExpanded>\r\n                <AccordionSummary>\r\n\r\n                    <Row>\r\n\r\n                        <Col md={11}>\r\n                            <Row className={\"mt-1\"}>\r\n                                <Col md={12} className={classes.root2}>\r\n                                    <b style={{fontSize: \"25px\"}}>\r\n                                        {patientObj.surname + \", \" + patientObj.firstName + \" \" + patientObj.otherName}\r\n                                    </b>\r\n\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2}>\r\n                                    <span>\r\n                                        {\" \"}\r\n                                        Hospital Number : <b>{getHospitalNumber(patientObj.identifier) }</b>\r\n                                    </span>\r\n                                </Col>\r\n\r\n                                <Col md={4} className={classes.root2}>\r\n                                    <span>\r\n                                        Date Of Birth : <b>{patientObj.dateOfBirth }</b>\r\n                                    </span>\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2}>\r\n                                <span>\r\n                                    {\" \"}\r\n                                    Age : <b>{calculate_age(patientObj.dateOfBirth) }</b>\r\n                                </span>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                <span>\r\n                                    {\" \"}\r\n                                    Gender :{\" \"}\r\n                                    <b>{patientObj.gender.display }</b>\r\n                                </span>\r\n                                <Label color={\"green\"} size={\"mini\"}>\r\n                                    Patient Status\r\n                                <Label.Detail>Active</Label.Detail>\r\n                                </Label>\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2}>\r\n                                <span>\r\n                                    {\" \"}\r\n                                    Phone Number : <b>{getPhone(patientObj.contactPoint) }</b>\r\n                                </span>\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2}>\r\n                                <span>\r\n                                    {\" \"}\r\n                                    Address : <b>{getAddress(patientObj.address)} </b>\r\n                                </span>\r\n                                \r\n                                </Col>\r\n                                \r\n                               \r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </AccordionSummary>\r\n                <AccordionDetails className={classes.details}>\r\n                    <div className={classes.column} >\r\n                        <Button\r\n                            color='red'\r\n                            content='BloodType'\r\n                            //icon='heart'\r\n                            label={{ basic: true, color: 'red', pointing: 'left', content: 'AB+' }}\r\n                        />\r\n\r\n                    </div>\r\n                    <div className={classes.column}>\r\n                        <Button\r\n                            basic\r\n                            color='blue'\r\n                            content='Height'\r\n                            icon='fork'\r\n                            label={{\r\n                                as: 'a',\r\n                                basic: true,\r\n                                color: 'blue',\r\n                                pointing: 'left',\r\n                                content: '74.5 in',\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.column}>\r\n                        <Button\r\n                            basic\r\n                            color='blue'\r\n                            content='Weight'\r\n                            icon='fork'\r\n                            label={{\r\n                                as: 'a',\r\n                                basic: true,\r\n                                color: 'blue',\r\n                                pointing: 'left',\r\n                                content: '74.5 in',\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    {biometricStatus===true ? (\r\n                        <>\r\n                            <div >\r\n                                <Typography variant=\"caption\">\r\n                                    <Label color={patientBiometricStatus===true? \"green\" : \"red\"} size={\"mini\"}>\r\n                                        Biometric Status\r\n                                        <Label.Detail>{patientBiometricStatus===true? \"Captured\" : \"Not Capture\"}</Label.Detail>\r\n                                    </Label>\r\n                                    {patientBiometricStatus!==true ? (\r\n                                   \r\n                                        <>\r\n                                             {permissions.includes('patient_check_in') || permissions.includes(\"all_permission\") ? (\r\n                                                <>\r\n                                                <Label as='a' color='teal' onClick={() => handleBiometricCapture(patientObj.id)} tag>\r\n                                                    Capture Now\r\n                                                </Label>\r\n                                                </>\r\n                                            )\r\n                                            :\"\"\r\n                                            }\r\n                                        </>\r\n                                    )\r\n                                    :\"\"\r\n                                    }\r\n                                    \r\n                                </Typography>\r\n                            </div>\r\n                        </>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div >\r\n                                <Typography variant=\"caption\">\r\n                                    <Label color={\"red\"} size={\"mini\"}>\r\n                                        Biometric Not Install\r\n                                        \r\n                                    </Label>\r\n                                   \r\n                                </Typography>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </AccordionDetails>\r\n                <Divider />\r\n                <AccordionActions>\r\n\r\n                </AccordionActions>\r\n            </Accordion>\r\n            <CaptureBiometric modalstatus={modal} togglestatus={toggleModal} patientId={patientObj.id} biometricDevices={devices} setPatientBiometricStatus={setPatientBiometricStatus} />\r\n        </div>\r\n    );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col} from \"reactstrap\";\r\nimport { Step, Label, Segment, Icon } from \"semantic-ui-react\";\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Box from '@mui/material/Box';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\nimport Swal from \"sweetalert2\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {Button, Card, CardContent, FormControl, Grid, MenuItem, Paper, TextField, Typography} from \"@mui/material\";\r\nimport {format} from 'date-fns';\r\nimport { toast} from \"react-toastify\";\r\nimport MaterialTable from 'material-table';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    icon: {\r\n        verticalAlign: 'bottom',\r\n        height: 20,\r\n        width: 20,\r\n    },\r\n    details: {\r\n        alignItems: 'center',\r\n    },\r\n    column: {\r\n        flexBasis: '20.33%',\r\n    },\r\n    helper: {\r\n        borderLeft: `2px solid ${theme.palette.divider}`,\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\r\n    },\r\n    link: {\r\n        color: theme.palette.primary.main,\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n        },\r\n    },\r\n});\r\n\r\nconst appointmentColumns = [\r\n    { field: 'id', headerName: 'ID', width: 90 },\r\n    {\r\n        field: 'firstName',\r\n        headerName: 'First name',\r\n        width: 150,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'lastName',\r\n        headerName: 'Last name',\r\n        width: 150,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'age',\r\n        headerName: 'Age',\r\n        type: 'number',\r\n        width: 110,\r\n        editable: true,\r\n    },\r\n    \r\n];\r\n\r\nconst appointments = [\r\n   // { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n\r\n];\r\n\r\n\r\nlet newDate = new Date()\r\nfunction PatientDashboard(props) {\r\n    const [loading, setLoading] = useState('');\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {};\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const { handleSubmit, control } = useForm();\r\n    const [modal, setModal] = useState(false);\r\n    const [checkinStatus, setCheckinStatus]= useState(false)\r\n    const [modalCheckOut, setModalCheckOut] = useState(false);\r\n    const [services, setServices]= useState([]);\r\n    const [selectedServices, setSelectedServices]= useState({checkInServices:\"\"});\r\n    const [patientVisits, setPatientVisits]= useState([]);\r\n    const [checkOutObj, setCheckOutObj] = useState({\r\n                                                    facilityId: 1,\r\n                                                    personId: \"\",\r\n                                                    visitEndDate:format(new Date(newDate), 'yyyy-MM-dd'),\r\n                                                    visitStartDate:\"\" \r\n                                                })\r\n    const [checkInObj, setCheckInObj] = useState({\r\n        serviceIds:\"\",\r\n          visitDto: {\r\n            facilityId: 1,\r\n            personId: patientObj.id,\r\n            visitEndDate: \"\",\r\n            visitStartDate: format(new Date(newDate), 'yyyy-MM-dd')\r\n          }\r\n    })\r\n\r\n    const loadServices = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/post-service`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setServices(response.data);\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred fetching services!',\r\n            });\r\n        }\r\n    }, []);\r\n    const loadPatientVisits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/visit/visit-detail/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setPatientVisits(response.data);\r\n            response.data.map((visits)=> {\r\n                if(visits.checkOutDate===null){\r\n                    setCheckinStatus(true)\r\n                }\r\n            })\r\n\r\n\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred fetching services!',\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        loadServices();\r\n        loadPatientVisits();\r\n    }, [loadServices, loadPatientVisits]);\r\n\r\n    let visitTypesRows = null;\r\n    if (services && services.length > 0) {\r\n        visitTypesRows = services.map((service, index) => (\r\n            <MenuItem key={service.moduleServiceCode} value={service.moduleServiceCode}>{service.moduleServiceName}</MenuItem>\r\n        ));\r\n    }\r\n\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            field: 'checkInDate',\r\n            headerName: 'Checked In Date',\r\n            width: 200,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'checkOutDate',\r\n            headerName: 'Check Out Date',\r\n            width: 200,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'service',\r\n            headerName: 'Service',\r\n            width: 200,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'status',\r\n            headerName: 'Status',\r\n            width: 200,\r\n            editable: false,\r\n        }\r\n    ];\r\n\r\n    const panes = [\r\n        { menuItem: 'Patient Visit', render: () =>\r\n                <Tab.Pane>\r\n                   \r\n                    <MaterialTable\r\n                    title=\"\"\r\n                    columns={[\r\n                        {\r\n                            title: \"Checked In Date\",\r\n                            field: \"checkInDate\", filtering: false \r\n                        },\r\n                        { title: \"Check Out Date\", field: \"checkOutDate\", filtering: false  },\r\n                        { title: \"Service\", field: \"service\", filtering: false  },\r\n                        { title: \"Status\", field: \"status\", filtering: false },\r\n                    ]}\r\n                    isLoading={loading}\r\n                    data={patientVisits.map((row) => ({\r\n                        checkInDate: row.checkInDate,\r\n                        checkOutDate: row.checkOutDate,\r\n                        service:row.service,\r\n                        status:(<Label color={row.status ==='COMPLETED' ? 'green' : 'red'} size=\"mini\">{row.status}</Label>),\r\n\r\n                    }))}\r\n\r\n                    options={{\r\n                        headerStyle: {\r\n                            backgroundColor: \"#000\",\r\n                            color: \"#ffffff\",\r\n                        },\r\n                        search: true,\r\n                        // searchFieldStyle: {\r\n                        //     width : '200%',\r\n                        //     margingLeft: '250px',\r\n                        // },\r\n                        filtering: false,\r\n                        exportButton: false,\r\n                        searchFieldAlignment: 'left',\r\n                        pageSizeOptions:[10,20,100],\r\n                        pageSize:10,\r\n                        debounceInterval: 400\r\n                    }}\r\n                />\r\n                </Tab.Pane>\r\n        },\r\n      \r\n        { menuItem: permissions.includes('view_patient_appointment') || permissions.includes(\"all_permission\") ? 'Appointments' : \"\", render: () =>\r\n            permissions.includes('view_patient_appointment') || permissions.includes(\"all_permission\") ?\r\n                <Tab.Pane>\r\n                    <div style={{ height: 400, width: '100%' }}>\r\n                        <DataGrid\r\n                            rows={appointments}\r\n                            columns={appointmentColumns}\r\n                            pageSize={5}\r\n                            rowsPerPageOptions={[5]}\r\n                            checkboxSelection\r\n                            disableSelectionOnClick\r\n                        />\r\n                    </div>\r\n                </Tab.Pane>\r\n            :\"\"\r\n        }\r\n        \r\n       \r\n    ];\r\n\r\n    const handleCheckIn = () => {\r\n        setModal(true);\r\n    };\r\n    const handleCheckOut = () => {\r\n        setModalCheckOut(true);\r\n    };\r\n\r\n    const onCancelCheckIn = () => {\r\n        setModal(false);\r\n    };\r\n    const onCancelCheckOut = () => {\r\n        setModalCheckOut(false);\r\n    };\r\n    const onDelete = () => {\r\n\r\n    };\r\n    const handleInputChangeService = (e) => {\r\n        setSelectedServices({ ...selectedServices, [e.target.name]: e.target.value });\r\n    };\r\n    //console.lo(selectedServices)\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            const today = new Date();\r\n            const visitDetails = await axios.get(`${baseUrl}patient/visit/visit-detail/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            const visitDetail = visitDetails.data;\r\n            const pendingVisit = visitDetail.find(obj => obj.status == \"PENDING\");\r\n            let visit = null;\r\n            if (!pendingVisit) {\r\n                const visitResponse = await axios.post(`${baseUrl}patient/visit`, {\r\n                    \"personId\": patientObj.id,\r\n                    \"visitStartDate\": today\r\n                }, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                visit = visitResponse.data;\r\n            } else {\r\n                visit = pendingVisit;\r\n            }\r\n            await axios.post(`${baseUrl}patient/encounter`, {\r\n                \"encounterDate\": today,\r\n                \"personId\": patientObj.id,\r\n                \"serviceCode\": data.VisitType,\r\n                \"status\": \"PENDING\",\r\n                \"visitId\": visit.id\r\n            }, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setModal(false);\r\n            await Swal.fire({\r\n                icon: 'success',\r\n                text: 'CheckedIn successfully',\r\n                timer: 1500\r\n            });\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred while checking in Patient!',\r\n            });\r\n        }\r\n    };\r\n    const onError = async () => {\r\n        await Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'An error occurred while checking in Patient!',\r\n        });\r\n    };\r\n\r\n    let checkInServicesID = [];\r\n    /**** Submit Button For CheckIN  */\r\n    const handleSubmitCheckIn = (e) => {        \r\n        e.preventDefault();              \r\n        selectedServices.checkInServices.length > 0 && selectedServices.checkInServices.map((service)=> { \r\n\r\n            if(service.id!==null){\r\n                checkInServicesID.push(service.id)\r\n                console.log(service) \r\n            }\r\n        })\r\n        checkInObj.serviceIds= checkInServicesID  \r\n        axios.post(`${baseUrl}patient/visit/checkin`, checkInObj,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n        \r\n        )\r\n        .then(response => {\r\n            toast.success(\"Patient Check-In successful\");\r\n            setCheckinStatus(true)\r\n            onCancelCheckIn()\r\n            loadPatientVisits()\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            toast.error(\"Something went wrong\");\r\n            onCancelCheckIn()        \r\n        });  \r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmitCheckOut = (e) => {        \r\n        e.preventDefault();\r\n        const getVisitID= patientVisits.find((visits)=> visits.status==='PENDING')   \r\n\r\n        axios.put(`${baseUrl}patient/visit/checkout/${getVisitID.id}`,getVisitID.id,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n        \r\n        )\r\n        .then(response => {\r\n            toast.success(\"Record save successful\");\r\n            setCheckinStatus(false)\r\n            onCancelCheckOut()\r\n            loadPatientVisits()\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            toast.error(\"Something went wrong\");\r\n            onCancelCheckOut()        \r\n        });  \r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Card>\r\n                <CardContent>\r\n                    \r\n                    <PatientCardDetail patientObj={patientObj} permissions={permissions}/>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <div className=\"row\">\r\n                                <div className=\"mb-3 col-md-3\">\r\n                                    &nbsp;\r\n                                </div>\r\n                                <div className=\"mb-3 col-md-3\">\r\n                                    &nbsp;\r\n                                </div>\r\n                                <div className=\"mb-3 col-md-3\">\r\n                                    &nbsp;\r\n                                </div>\r\n                                <div className=\"mb-3 col-md-3\">\r\n                                <Link to={\"/\"} >\r\n                                        <ButtonMui\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className=\" float-right mr-1\">\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                                        </ButtonMui>\r\n                                    </Link>\r\n                                    {permissions.includes('patient_check_in') || permissions.includes(\"all_permission\") ? (\r\n                                        <>\r\n                                        {checkinStatus===false ? (\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            style={{ backgroundColor: \"black\" }}\r\n                                            onClick={handleCheckIn}\r\n                                            className=\" float-right mr-1\"\r\n                                        >\r\n                                            <span style={{ textTransform: \"capitalize\" }}>CheckIn</span>\r\n                                        </Button>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                    }\r\n                                    </>\r\n                                    )\r\n                                    :\"\"\r\n                                    }\r\n                                    {checkinStatus===true ? (\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            style={{ backgroundColor: \"black\" }}\r\n                                            onClick={handleCheckOut}\r\n                                            className=\" float-right mr-1\"\r\n                                        >\r\n                                            <span style={{ textTransform: \"capitalize\" }}>CheckOut</span>\r\n                                        </Button>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                    }\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <Tab panes={panes} />\r\n                        </CardContent>\r\n                    </Card>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal isOpen={modal} toggle={onCancelCheckIn}>\r\n                <ModalHeader toggle={onCancelCheckIn}>Select a Service Area</ModalHeader>\r\n                <ModalBody>\r\n                    <form onSubmit={handleSubmitCheckIn}>\r\n                        <Paper\r\n                            style={{\r\n                                display: \"grid\",\r\n                                gridRowGap: \"20px\",\r\n                                padding: \"20px\",\r\n                                margin: \"10px 10px\",\r\n                            }}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={8}>\r\n                                    <FormControl >\r\n                                       \r\n                                         <Autocomplete\r\n                                            multiple\r\n                                            id=\"checkboxes-tags-demo\"\r\n                                            options={services}\r\n                                            //disableCloseOnSelect\r\n                                            getOptionLabel={(option) => option.moduleServiceName}\r\n                                            onChange={(e, i) => {\r\n                                                console.log(i)\r\n                                                setSelectedServices({ ...selectedServices, checkInServices: i });\r\n                                            }}\r\n                                            renderOption={(props, option, { selected }) => (\r\n                                                <li {...props}>\r\n                                                <Checkbox\r\n                                                    icon={icon}\r\n                                                    checkedIcon={checkedIcon}\r\n                                                    style={{ marginRight: 8 }}\r\n                                                    checked={selected}\r\n                                                />\r\n                                                {option.moduleServiceName}\r\n                                                </li>\r\n                                            )}\r\n                                            style={{ width: 400 }}\r\n                                            renderInput={(params) => (\r\n                                                <TextField {...params} label=\"Services\" />\r\n                                            )}\r\n                                            />\r\n                                       \r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Button type={\"submit\"} variant=\"contained\" color={\"primary\"}>Submit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </form>\r\n                </ModalBody>\r\n            </Modal>\r\n            {/* Modal for CheckOut Patient */}\r\n            <Modal isOpen={modalCheckOut} toggle={onCancelCheckOut}>\r\n                <ModalHeader toggle={onCancelCheckOut}>CheckOut </ModalHeader>\r\n                <ModalBody>\r\n                    <form >\r\n                        <Paper\r\n                            style={{\r\n                                display: \"grid\",\r\n                                gridRowGap: \"20px\",\r\n                                padding: \"20px\",\r\n                                margin: \"10px 10px\",\r\n                            }}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                   <h5>Are you sure you want to check-out patient?</h5>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Button type={\"submit\"} onClick={handleSubmitCheckOut} variant=\"contained\" color={\"primary\"}>Yes</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </form>\r\n                </ModalBody>\r\n            </Modal>\r\n            {/* End of Checkout Modal */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(PatientDashboard);\r\n","import React, {useState, useEffect, useCallback} from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Card,CardBody,} from 'reactstrap';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { MdDashboard, MdDeleteForever, MdModeEdit } from \"react-icons/md\";\r\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Label } from 'semantic-ui-react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"./patient.css\";\r\nimport { forwardRef } from 'react';\r\n//import { Button} from \"react-bootstrap\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst PatientList = (props) => {\r\n    const [patients, setPatients] = useState([]);\r\n    const [permissions, setPermissions] = useState([]);\r\n    const [loading, setLoading] = useState('');\r\n    const [modal, setModal] = useState(false);\r\n    const [patient, setPatient] = useState(false);\r\n    const toggle = (id) => {\r\n        const patient = patients.find(obj => obj.id == id);\r\n        setPatient(patient);\r\n        setModal(!modal);\r\n    }\r\n    useEffect(() => {      \r\n        userPermission();        \r\n      }, []);\r\n    //Get list of Finger index\r\n    const userPermission =()=>{\r\n        axios\r\n           .get(`${baseUrl}account`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n                setPermissions(response.data.permissions);\r\n      \r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n    const loadPatients = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setPatients(response.data);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }, []);\r\n\r\n    const onDelete = async (id) => {\r\n        try {\r\n            if (id) {\r\n                const response = await axios.delete(`${baseUrl}patient/${id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                window.location.reload();\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const onCancelDelete = () => {\r\n        setModal(false);\r\n    }\r\n\r\n    const calculate_age = dob => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n    \r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    const getAddress = (address) => {\r\n        const city = address && address.address && address.address.length > 0 ? address.address[0].city : null;\r\n        return city;\r\n    };\r\n\r\n    const getGender = (gender) => {\r\n        return gender.display;\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadPatients();\r\n    }, [loadPatients]);\r\n    console.log(permissions)\r\nconsole.log(permissions.includes( \"all_permission\"))\r\n\r\n  return (\r\n    <div>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <Card>\r\n            <CardBody>\r\n            {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n                <Link to={\"register-patient\"}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\" float-right mr-1\"\r\n                        startIcon={<FaUserPlus size=\"10\"/>}\r\n                    >\r\n                        <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n                    </Button>\r\n                </Link>\r\n            ):\"\"\r\n        }\r\n                <br/><br/>\r\n                <br/>\r\n                <MaterialTable\r\n                    icons={tableIcons}\r\n                    title=\"Find patients\"\r\n                    columns={[\r\n                        {\r\n                            title: \"Patient Name\",\r\n                            field: \"name\",\r\n                        },\r\n                        { title: \"Patient ID\", field: \"id\" },\r\n                        { title: \"Gender\", field: \"gender\" },\r\n                        { title: \"Date Of Birth\", field: \"dateOfBirth\", filtering: false },\r\n                        { title: \"Age\", field: \"age\", filtering: false },\r\n                        { title: \"Address\", field: \"address\", filtering: false },\r\n                        { title: \"Status\", field: \"status\", filtering: false },\r\n                        {title: \"Actions\", field: \"actions\", filtering: false },\r\n                    ]}\r\n                    isLoading={loading}\r\n                    data={patients.map((row) => ({\r\n                        name: row.firstName +  ' ' + row.otherName +  ' ' + row.surname,\r\n                        id: getHospitalNumber(row.identifier),\r\n                        gender: getGender(row.gender),\r\n                        dateOfBirth: row.dateOfBirth,\r\n                        age: (row.dateOfBirth === 0 ||\r\n                            row.dateOfBirth === undefined ||\r\n                            row.dateOfBirth === null ||\r\n                            row.dateOfBirth === \"\" )\r\n                            ? 0\r\n                            : calculate_age(row.dateOfBirth),\r\n                        address: getAddress(row.address),\r\n                        status: row.active ?\r\n                            (<Label color=\"green\" size=\"mini\">active</Label>)\r\n                            : (<Label color=\"teal\" size=\"mini\">not-active</Label>),\r\n                        actions:\r\n                            <div>\r\n\r\n                                <Menu>\r\n                                    <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", }}>\r\n                                        Actions <span aria-hidden>▾</span>\r\n                                    </MenuButton>\r\n                                   \r\n                                    <MenuList className={'menuClass'} >\r\n                                    {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n                                        <MenuItem  style={{ color:\"#000 !important\"}}>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-dashboard\",\r\n                                                    state: { patientObj: row, permissions:permissions }\r\n                                                }}\r\n                                            >\r\n                                                <MdDashboard size=\"15\" />{\" \"}<span style={{color: '#000'}}>Patient Dashboard</span>\r\n                                            </Link>\r\n                                        </MenuItem>\r\n                                    ):\"\"\r\n                                }\r\n\r\n                                    {permissions.includes('edit_patient') || permissions.includes(\"all_permission\") ? (\r\n                                        <MenuItem style={{ color:\"#000 !important\"}}>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/register-patient\",\r\n                                                    state: { patientId : row.id }\r\n                                                }}\r\n                                            >\r\n                                                <MdModeEdit size=\"15\" />{\" \"}<span style={{color: '#000'}}>Edit Patient </span>\r\n                                            </Link>\r\n                                        </MenuItem>\r\n                                    ):\"\"}\r\n                                    {permissions.includes('delete_patient') || permissions.includes(\"all_permission\") ? (\r\n                                        <MenuItem style={{ color:\"#000 !important\"}}>\r\n                                            <Link\r\n                                                onClick={(e) => toggle(row.id)}\r\n                                                to={{\r\n                                                    pathname: \"/#\",\r\n                                                    currentId: row\r\n                                                }}\r\n                                            >\r\n                                                <MdDeleteForever size=\"15\"  />{\" \"}\r\n                                                <span style={{color: '#000'}}>Delete Patient</span>\r\n                                            </Link>\r\n                                        </MenuItem>\r\n                                    ):\"\"}\r\n                                    </MenuList>\r\n                                </Menu>\r\n                            </div>\r\n                    }))}\r\n\r\n                    options={{\r\n                        headerStyle: {\r\n                            //backgroundColor: \"#9F9FA5\",\r\n                            color: \"#000\",\r\n                        },\r\n                        searchFieldStyle: {\r\n                            width : '200%',\r\n                            margingLeft: '250px',\r\n                        },\r\n                        filtering: true,\r\n                        exportButton: false,\r\n                        searchFieldAlignment: 'left',\r\n                        pageSizeOptions:[10,20,100],\r\n                        pageSize:10,\r\n                        debounceInterval: 400\r\n                    }}\r\n                />\r\n\r\n            </CardBody>\r\n        </Card>\r\n        <Modal isOpen={modal} toggle={onCancelDelete}>\r\n            <ModalHeader toggle={onCancelDelete}>Delete Patient</ModalHeader>\r\n            <ModalBody>\r\n                Are you sure to delete this record? { patient ? patient.surname +  ', ' + patient.firstname +  ' ' + patient.otherName : '' }\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" type=\"button\" onClick={(e) => onDelete(patient.id)}>Yes</Button>{' '}\r\n                <Button color=\"secondary\" type=\"button\" onClick={(e) => onCancelDelete()}>No</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientList;\r\n\r\n\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Card, CardContent, FormControl, Grid, MenuItem, Paper, TextField, Typography, Box} from \"@mui/material\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst columns = [\r\n    {\r\n        field: 'weight',\r\n        headerName: 'Weight',\r\n        width: 200,\r\n        editable: false,\r\n    },\r\n    {\r\n        field: 'height',\r\n        headerName: 'Height',\r\n        width: 200,\r\n        editable: false,\r\n    },\r\n    {\r\n        field: 'temperature',\r\n        headerName: 'Temperature',\r\n        width: 200,\r\n        editable: false,\r\n    },\r\n    {\r\n        field: 'status',\r\n        headerName: 'Status',\r\n        width: 200,\r\n        editable: false,\r\n    }\r\n];\r\n\r\nconst PatientVitals = () => {\r\n    const rows = [];\r\n\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={3}>&nbsp;</Grid>\r\n                    <Grid item xs={3}>&nbsp;</Grid>\r\n                    <Grid item xs={3}>&nbsp;</Grid>\r\n                    <Grid item xs={3}>\r\n                        <Box\r\n                            m={1}\r\n                            display=\"flex\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Link to={{\r\n                                pathname: \"/add-patient-vital\"\r\n                            }}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    style={{ backgroundColor: \"black\" }}\r\n                                >\r\n                                    <AddIcon /> Add Vital Signs\r\n                                </Button>\r\n                            </Link>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Box height={\"200px\"}>\r\n                            <DataGrid\r\n                                rows={rows}\r\n                                columns={columns}\r\n                                pageSize={5}\r\n                                rowsPerPageOptions={[5]}\r\n                                disableSelectionOnClick\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PatientVitals;\r\n","import React, {useState} from \"react\";\r\nimport {Button, Card, CardContent, FormControl, Grid, Paper, TextField, Typography} from \"@mui/material\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {LocalizationProvider} from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport {AdapterDateFns} from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport {DatePicker} from \"@mui/x-date-pickers\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nconst AddPatientVitals = () => {\r\n    const { handleSubmit, control } = useForm();\r\n    const onSubmit = async (data) => {\r\n        //console.log(data);\r\n        try {\r\n            const InData = {\r\n                \"bodyWeight\": data.Weight,\r\n                \"diastolic\": data.Diastolic,\r\n                \"encounterDate\": data.DateOfVitalSigns,\r\n                \"height\": data.Height,\r\n                \"personId\": 1,\r\n                \"systolic\": data.Systolic\r\n            }\r\n            await axios.post(`${baseUrl}patient/vital-sign`, InData, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            await Swal.fire({\r\n                icon: 'success',\r\n                text: 'Add Patient Vital successfully',\r\n                timer: 1500\r\n            });\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred while saving patient vitals!',\r\n            });\r\n        }\r\n    };\r\n    const onError = () => {\r\n\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <form onSubmit={handleSubmit(onSubmit, onError)}>\r\n                    <Paper\r\n                        style={{\r\n                            display: \"grid\",\r\n                            gridRowGap: \"20px\",\r\n                            padding: \"20px\",\r\n                            margin: \"10px 10px\",\r\n                        }}>\r\n                        <Typography variant=\"h6\">Take Patient Vitals</Typography>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControl fullWidth>\r\n                                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                        <Controller\r\n                                            name=\"DateOfVitalSigns\"\r\n                                            control={control}\r\n                                            defaultValue={null}\r\n                                            render={({ field: { onChange, value }, fieldState: { error}}) => (\r\n                                                <DatePicker\r\n                                                    renderInput={(props) => <TextField {...props} />}\r\n                                                    label=\"Date Of Vital Signs\"\r\n                                                    selected={value}\r\n                                                    value={value}\r\n                                                    onChange={onChange}\r\n                                                    error={!!error}\r\n                                                    helperText={error ? error.message : null}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </LocalizationProvider>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl fullWidth>\r\n                                    <Controller\r\n                                        name=\"Pulse\"\r\n                                        control={control}\r\n                                        defaultValue=\"\"\r\n                                        render={({ field: { onChange, value }, fieldState: { error }}) => (\r\n                                            <TextField\r\n                                                label=\"Pulse(bpm)\"\r\n                                                id=\"Pulse\"\r\n                                                variant=\"outlined\"\r\n                                                value={value}\r\n                                                onChange={onChange}\r\n                                                error={!!error}\r\n                                                helperText={error ? error.message : null}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl fullWidth>\r\n                                    <Controller\r\n                                        name=\"RespiratoryRate\"\r\n                                        control={control}\r\n                                        defaultValue=\"\"\r\n                                        render={({ field: { onChange, value }, fieldState: { error }}) => (\r\n                                            <TextField\r\n                                                label=\"Respiratory Rate (bpm)\"\r\n                                                id=\"RespiratoryRate\"\r\n                                                variant=\"outlined\"\r\n                                                value={value}\r\n                                                onChange={onChange}\r\n                                                error={!!error}\r\n                                                helperText={error ? error.message : null}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl fullWidth>\r\n                                    <Controller\r\n                                        name=\"Temperature\"\r\n                                        control={control}\r\n                                        defaultValue=\"\"\r\n                                        render={({ field: { onChange, value }, fieldState: { error }}) => (\r\n                                            <TextField\r\n                                                label=\"Temperature (C)\"\r\n                                                id=\"Temperature\"\r\n                                                variant=\"outlined\"\r\n                                                value={value}\r\n                                                onChange={onChange}\r\n                                                error={!!error}\r\n                                                helperText={error ? error.message : null}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={6}>\r\n                                        <FormControl fullWidth>\r\n                                            <Controller\r\n                                                name=\"Systolic\"\r\n                                                control={control}\r\n                                                defaultValue=\"\"\r\n                                                render={({ field: { onChange, value }, fieldState: { error }}) => (\r\n                                                    <TextField\r\n                                                        label=\"Systolic (mmHg)\"\r\n                                                        id=\"Systolic\"\r\n                                                        variant=\"outlined\"\r\n                                                        value={value}\r\n                                                        onChange={onChange}\r\n                                                        error={!!error}\r\n                                                        helperText={error ? error.message : null}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6}>\r\n                                        <FormControl fullWidth>\r\n                                            <Controller\r\n                                                name=\"Diastolic\"\r\n                                                control={control}\r\n                                                defaultValue=\"\"\r\n                                                render={({ field: { onChange, value }, fieldState: { error }}) => (\r\n                                                    <TextField\r\n                                                        label=\"Diastolic (mmHg)\"\r\n                                                        id=\"Diastolic\"\r\n                                                        variant=\"outlined\"\r\n                                                        value={value}\r\n                                                        onChange={onChange}\r\n                                                        error={!!error}\r\n                                                        helperText={error ? error.message : null}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl fullWidth>\r\n                                    <Controller\r\n                                        name=\"Weight\"\r\n                                        control={control}\r\n                                        defaultValue=\"\"\r\n                                        render={({ field: { onChange, value }, fieldState: { error }}) => (\r\n                                            <TextField\r\n                                                label=\"Weight (Kg)\"\r\n                                                id=\"Weight\"\r\n                                                variant=\"outlined\"\r\n                                                value={value}\r\n                                                onChange={onChange}\r\n                                                error={!!error}\r\n                                                helperText={error ? error.message : null}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControl fullWidth>\r\n                                    <Controller\r\n                                        name=\"Height\"\r\n                                        control={control}\r\n                                        defaultValue=\"\"\r\n                                        render={({ field: { onChange, value }, fieldState: { error }}) => (\r\n                                            <TextField\r\n                                                label=\"Height (cm)\"\r\n                                                id=\"Height\"\r\n                                                variant=\"outlined\"\r\n                                                value={value}\r\n                                                onChange={onChange}\r\n                                                error={!!error}\r\n                                                helperText={error ? error.message : null}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <Button type={\"button\"} variant=\"contained\" color={\"error\"}>Cancel</Button>\r\n                                &nbsp;&nbsp;\r\n                                <Button type={\"submit\"} variant=\"contained\" color={\"primary\"}>Submit</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </form>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default AddPatientVitals;\r\n","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport RegisterPatient from './main/webapp/components/RegisterPatient';\r\nimport PatientDashboard from './main/webapp/components/PatientDashboard';\r\nimport Dashboard from './main/webapp/components/Dashboard';\r\nimport PatientVitals from './main/webapp/components/PatientVitals';\r\nimport AddPatientVitals from './main/webapp/components/Add-Patient-Vitals';\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n         \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/patient-dashboard\">\r\n            <PatientDashboardPage />\r\n          </Route>\r\n          <Route path=\"/patient-vitals\">\r\n            <PatientVitalsPage />\r\n          </Route>\r\n          <Route path=\"/add-patient-vital\">\r\n            <AddPatientVitalsPage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Dashboard />\r\n          </Route>\r\n          \r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction PatientDashboardPage() {\r\n  return <PatientDashboard />;\r\n}\r\nfunction RegisterPatientPage() {\r\n  return <RegisterPatient />;\r\n}\r\nfunction PatientVitalsPage() {\r\n  return <PatientVitals />\r\n}\r\nfunction AddPatientVitalsPage() {\r\n  return <AddPatientVitals />\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}