[{"C:\\Users\\victor.ajor\\projects\\patient-module\\src\\index.js":"1","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\App.js":"2","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\PatientDashboard.js":"3","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\RegisterPatient.js":"4","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\index.js":"5","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\ClientDashboard\\index.js":"6","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\api.js":"7","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\PatientCard.js":"8","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\Biometrics.js":"9","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\Home\\PatientList.js":"10","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\Home\\BiometricsList.js":"11","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\Home\\CheckedInPatients.js":"12","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\CaptureBiometric.js":"13","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\MigrationDQA\\index.js":"14","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\PersonDemographics\\index.js":"15","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\ClientDashboard\\CheckIn\\index.js":"16","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\MigrationDQA\\DuplicateHospitalNumbers.js":"17","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\SplitActionButton.js":"18","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\Home\\Biometrics.js":"19","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\biometrics\\index.js":"20","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\ViewPatient.js":"21","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\Home\\NotCaptured.js":"22"},{"size":495,"mtime":1663252707183,"results":"23","hashOfConfig":"24"},{"size":2366,"mtime":1674544901167,"results":"25","hashOfConfig":"24"},{"size":33296,"mtime":1663253144668,"results":"26","hashOfConfig":"24"},{"size":93000,"mtime":1675191812150,"results":"27","hashOfConfig":"24"},{"size":5950,"mtime":1674644709414,"results":"28","hashOfConfig":"24"},{"size":9272,"mtime":1673864720390,"results":"29","hashOfConfig":"24"},{"size":484,"mtime":1675192419965,"results":"30","hashOfConfig":"24"},{"size":10822,"mtime":1674556229412,"results":"31","hashOfConfig":"24"},{"size":40841,"mtime":1675008586728,"results":"32","hashOfConfig":"24"},{"size":15575,"mtime":1674576422808,"results":"33","hashOfConfig":"24"},{"size":12396,"mtime":1674893892849,"results":"34","hashOfConfig":"24"},{"size":14105,"mtime":1673648418074,"results":"35","hashOfConfig":"24"},{"size":20964,"mtime":1674637483417,"results":"36","hashOfConfig":"24"},{"size":2560,"mtime":1673648418079,"results":"37","hashOfConfig":"24"},{"size":9139,"mtime":1674743969553,"results":"38","hashOfConfig":"24"},{"size":24011,"mtime":1668523159500,"results":"39","hashOfConfig":"24"},{"size":14558,"mtime":1674576093317,"results":"40","hashOfConfig":"24"},{"size":4863,"mtime":1673880887086,"results":"41","hashOfConfig":"24"},{"size":15707,"mtime":1674893860105,"results":"42","hashOfConfig":"24"},{"size":6908,"mtime":1674735640054,"results":"43","hashOfConfig":"24"},{"size":93175,"mtime":1675192408456,"results":"44","hashOfConfig":"24"},{"size":12384,"mtime":1674895860203,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"10msecw",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"48"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":53,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"48"},"C:\\Users\\victor.ajor\\projects\\patient-module\\src\\index.js",[],["109","110"],"C:\\Users\\victor.ajor\\projects\\patient-module\\src\\App.js",["111","112","113","114","115"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport RegisterPatient from './main/webapp/components/RegisterPatient';\r\nimport ViewPatient from './main/webapp/components/ViewPatient';\r\nimport PatientDashboard from './main/webapp/components/PatientDashboard';\r\nimport Dashboard from './main/webapp/components/ClientDashboard';\r\nimport ClientDashboard from \"./main/webapp/components/ClientDashboard\";\r\nimport BiometricsDashboard from \"./main/webapp/components/biometrics/\";\r\n/*import PatientVitals from './main/webapp/components/PatientVitals';\r\nimport AddPatientVitals from './main/webapp/components/Add-Patient-Vitals';*/\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './main/webapp/css/style.css'\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport Components from './main/webapp/components'\r\nexport default function App() {\r\n  return (\r\n\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n{/*          <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL.*/}\r\n        <Switch>\r\n          <Route path=\"/patient-biometrics\">\r\n             <BiometricsDashboard />\r\n          </Route>\r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/view-patient\">\r\n              <ViewPatient />\r\n            </Route>\r\n          <Route path=\"/patient-dashboard\">\r\n            <PatientDashboardPage />\r\n          </Route>\r\n          <Route path=\"/patient-vitals\">\r\n              <Dashboard />\r\n            {/*<PatientVitalsPage />*/}\r\n          </Route>\r\n          <Route path=\"/add-patient-vital\">\r\n              <Dashboard />\r\n            {/*<AddPatientVitalsPage />*/}\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Components/>\r\n          </Route>\r\n          \r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction PatientDashboardPage() {\r\n  return <ClientDashboard />;\r\n}\r\nfunction RegisterPatientPage() {\r\n  return <RegisterPatient />;\r\n}\r\n\r\n/*\r\nfunction PatientVitalsPage() {\r\n  return <PatientVitals />\r\n}\r\nfunction AddPatientVitalsPage() {\r\n  return <AddPatientVitals />\r\n}\r\n*/\r\n\r\n\r\n","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\PatientDashboard.js",["116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160"],"import React, {useCallback, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col} from \"reactstrap\";\r\nimport { Step, Label, Segment, Icon } from \"semantic-ui-react\";\r\nimport PatientCard from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Box from '@mui/material/Box';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\nimport Swal from \"sweetalert2\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {Button, Card, CardContent, FormControl, Grid, MenuItem, Paper, TextField, Typography} from \"@mui/material\";\r\nimport {format} from 'date-fns';\r\nimport { toast} from \"react-toastify\";\r\nimport MaterialTable from 'material-table';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport {TiArrowBack} from \"react-icons/ti\";\r\nimport Biometrics from \"./Biometrics\";\r\nimport moment from \"moment\";\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport _ from 'lodash';\r\n\r\nimport { DesktopDateTimePicker } from '@mui/x-date-pickers/DesktopDateTimePicker';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        marginBottom: 20,\r\n        flexGrow: 1,\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    icon: {\r\n        verticalAlign: 'bottom',\r\n        height: 20,\r\n        width: 20,\r\n    },\r\n    details: {\r\n        alignItems: 'center',\r\n    },\r\n    column: {\r\n        flexBasis: '20.33%',\r\n    },\r\n    helper: {\r\n        borderLeft: `2px solid ${theme.palette.divider}`,\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\r\n    },\r\n    link: {\r\n        color: theme.palette.primary.main,\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n        },\r\n    },\r\n    checkinModal:{\r\n        \"& .modal-dialog\":{\r\n            maxWidth:\"1000px\"\r\n        },\r\n        \"& .ui.label\":{\r\n            backgroundColor:\"#fff\",\r\n            fontSize:'16px',\r\n            color:'#014d88',\r\n            fontWeight:'bold',\r\n            textAlign:'left'\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    checkInDatePicker:{\r\n        '& .MuiFormControl-root.MuiTextField-root':{\r\n            border:'1px solid #eee'\r\n        }\r\n    }\r\n}));\r\nconst appointmentColumns = [\r\n    { field: 'id', headerName: 'ID', width: 90 },\r\n    {\r\n        field: 'firstName',\r\n        headerName: 'First name',\r\n        width: 150,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'lastName',\r\n        headerName: 'Last name',\r\n        width: 150,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'age',\r\n        headerName: 'Age',\r\n        type: 'number',\r\n        width: 110,\r\n        editable: true,\r\n    },\r\n\r\n];\r\n\r\nconst appointments = [\r\n    // { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n\r\n];\r\n\r\n\r\nlet newDate = new Date()\r\nfunction PatientDashboard(props) {\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const [loading, setLoading] = useState('');\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [checkInDate,setCheckInDate]=useState(new Date());\r\n    const [checkOutDate,setCheckOutDate]=useState(new Date());\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {};\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const { handleSubmit, control } = useForm();\r\n    const [modal, setModal] = useState(false);\r\n    const [allServices, setAllServices] = useState(null);\r\n    const [checkinStatus, setCheckinStatus]= useState(false)\r\n    const [modalCheckOut, setModalCheckOut] = useState(false);\r\n    const [services, setServices]= useState([]);\r\n    const [selectedServices, setSelectedServices]= useState({\"selected\":[]});\r\n    const [patientVisits, setPatientVisits]= useState([]);\r\n    const [patientBiometricStatus, setPatientBiometricStatus]= useState(patientObj.biometricStatus);\r\n    const [biometricsModuleInstalled,setBiometricsModuleInstalled]=useState(false);\r\n\r\n    const [checkOutObj, setCheckOutObj] = useState({\r\n        personId: \"\",\r\n        visitStartDate:format(new Date(newDate), 'yyyy-MM-dd hh:mm')\r\n    })\r\n    const [checkInObj, setCheckInObj] = useState({\r\n        serviceIds:\"\",\r\n        visitDto: {\r\n            personId: patientObj.id,\r\n            checkInDate: format(new Date(newDate), 'yyyy-MM-dd hh:mm')\r\n        }\r\n    })\r\n\r\n    const updatePatientBiometricStatus = (bioStatus) =>{\r\n        setPatientBiometricStatus(bioStatus);\r\n    }\r\n    const loadServices = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/post-service`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            //setServices(response.data);\r\n            setAllServices(response.data);\r\n            setServices(\r\n                Object.entries(response.data).map(([key, value]) => ({\r\n                    label: value.moduleServiceName,\r\n                    value: value.moduleServiceCode,\r\n                }))\r\n            );\r\n/*            setSelectedServices(\r\n                _.uniq(_.map(userDetail.applicationUserOrganisationUnits, 'organisationUnitName'))\r\n            )*/\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred fetching services!',\r\n            });\r\n        }\r\n    }, []);\r\n    const loadPatientVisits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/visit/visit-by-patient/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setPatientVisits(response.data);\r\n            response.data.map((visits)=> {\r\n                if(visits.checkOutDate===null){\r\n                    setCheckinStatus(true)\r\n                }\r\n            })\r\n\r\n\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred fetching services!',\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const checkForBiometricsModule =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    setBiometricsModuleInstalled(true);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n    const loadUserDetails = () =>{\r\n        axios.get(`${baseUrl}account`).then((response)=>{\r\n\r\n        }).catch((error)=>{\r\n\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadUserDetails();\r\n        loadServices();\r\n        loadPatientVisits();\r\n        checkForBiometricsModule();\r\n    }, [loadServices, loadPatientVisits]);\r\n\r\n    let visitTypesRows = null;\r\n    if (services && services.length > 0) {\r\n        visitTypesRows = services.map((service, index) => (\r\n            <MenuItem key={service.moduleServiceCode} value={service.moduleServiceCode}>{service.moduleServiceName}</MenuItem>\r\n        ));\r\n    }\r\n\r\n    const onChangeDate = (date) => {\r\n        console.log(date.target.value)\r\n        const newDate = moment(new Date(date.target.value)).format(\"yyyy-MM-dd hh:mm\");\r\n        setCheckInDate(newDate);\r\n        console.log(newDate);\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            field: 'checkInDate',\r\n            headerName: 'Checked In Date',\r\n            width: 200,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'checkOutDate',\r\n            headerName: 'Check Out Date',\r\n            width: 200,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'service',\r\n            headerName: 'Service',\r\n            width: 200,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'status',\r\n            headerName: 'Status',\r\n            width: 200,\r\n            editable: false,\r\n        }\r\n    ];\r\n\r\n    const panes = [\r\n        { menuItem: 'Visits', render: () =>\r\n                <Tab.Pane>\r\n\r\n                    <MaterialTable\r\n                        title=\"\"\r\n                        columns={[\r\n                            {\r\n                                title: \"Check-In Date\",\r\n                                field: \"checkInDate\", filtering: false,\r\n                                headerStyle: {\r\n                                    backgroundColor: \"#039be5\",\r\n                                    border:'2px solid #fff',\r\n                                    paddingRight:'30px'\r\n                                }\r\n                            },\r\n                            { title: \"Check-Out Date\", field: \"checkOutDate\", filtering: false  },\r\n                            { title: \"Service\", field: \"service\", filtering: false  },\r\n                            { title: \"Status\", field: \"status\", filtering: false },\r\n                        ]}\r\n                        isLoading={loading}\r\n                        data={patientVisits.map((row) => ({\r\n                            checkInDate: moment(row.checkInDate).format(\"YYYY-MM-DD h:mm a\"),\r\n                            checkOutDate: row.checkOutDate?moment(row.checkOutDate).format(\"YYYY-MM-DD h:mm a\"):\"Visit Ongoing\",\r\n                            service:row.service,\r\n                            status:(<h6 style={{color:row.status ==='COMPLETED' ? 'green' : 'red'}}>{row.status}</h6>),\r\n\r\n                        }))}\r\n\r\n                        options={{\r\n                            headerStyle: {\r\n                                backgroundColor: \"#014d88\",\r\n                                color: \"#fff\",\r\n                                fontSize:'16px',\r\n                                padding:'10px',\r\n                                fontWeight:'bold'\r\n                            },\r\n                            rowStyle: {\r\n                                color: 'rgba(0,0,0,.87)',\r\n                                fontFamily:`'poppins', sans-serif`\r\n                            },\r\n                            searchFieldStyle: {\r\n                                width : '200%',\r\n                                margingLeft: '250px',\r\n                            },\r\n                            filtering: false,\r\n                            exportButton: false,\r\n                            searchFieldAlignment: 'left',\r\n                            pageSizeOptions:[10,20,100],\r\n                            pageSize:10,\r\n                            debounceInterval: 400\r\n                        }}\r\n                    />\r\n                </Tab.Pane>\r\n        },\r\n\r\n/*        { menuItem: permissions.includes('view_patient_appointment') || permissions.includes(\"all_permission\") ? 'Appointments' : \"\", render: () =>\r\n                permissions.includes('view_patient_appointment') || permissions.includes(\"all_permission\") ?\r\n                    <Tab.Pane>\r\n                        <div style={{ height: 400, width: '100%' }}>\r\n                            <DataGrid\r\n                                rows={appointments}\r\n                                columns={appointmentColumns}\r\n                                pageSize={5}\r\n                                rowsPerPageOptions={[5]}\r\n                                checkboxSelection\r\n                                disableSelectionOnClick\r\n                            />\r\n                        </div>\r\n                    </Tab.Pane>\r\n                    :\"\"\r\n        },*/\r\n\r\n                { menuItem: permissions.includes('view_patient_appointment') && biometricsModuleInstalled || permissions.includes(\"all_permission\")  && biometricsModuleInstalled? 'Biometrics' : \"\", render: () =>\r\n                        permissions.includes('view_patient_appointment') || permissions.includes(\"all_permission\") ?\r\n                            <Tab.Pane>\r\n                                <div style={{ minHeight: 400, width: '100%' }}>\r\n                                    <Biometrics patientId={patientObj.id} updatePatientBiometricStatus={updatePatientBiometricStatus}/>\r\n                                </div>\r\n                            </Tab.Pane>\r\n                            :\"\"\r\n                }\r\n\r\n\r\n\r\n    ];\r\n\r\n    const handleCheckIn = () => {\r\n        setModal(true);\r\n    };\r\n    const handleCheckOut = () => {\r\n        setModalCheckOut(true);\r\n    };\r\n\r\n    const onCancelCheckIn = () => {\r\n        setModal(false);\r\n    };\r\n    const onCancelCheckOut = () => {\r\n        setModalCheckOut(false);\r\n    };\r\n    const onDelete = () => {\r\n\r\n    };\r\n/*    const handleInputChangeService = (e) => {\r\n        setSelectedServices({ ...selectedServices, [e.target.name]: e.target.value });\r\n    };*/\r\n    //console.lo(selectedServices)\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            const today = new Date();\r\n            const visitDetails = await axios.get(`${baseUrl}patient/visit/visit-detail/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            const visitDetail = visitDetails.data;\r\n            const pendingVisit = visitDetail.find(obj => obj.status == \"PENDING\");\r\n            let visit = null;\r\n            if (!pendingVisit) {\r\n                const visitResponse = await axios.post(`${baseUrl}patient/visit`, {\r\n                    \"personId\": patientObj.id,\r\n                    \"visitStartDate\": today\r\n                }, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                visit = visitResponse.data;\r\n            } else {\r\n                visit = pendingVisit;\r\n            }\r\n            await axios.post(`${baseUrl}patient/encounter`, {\r\n                \"encounterDate\": today,\r\n                \"personId\": patientObj.id,\r\n                \"serviceCode\": data.VisitType,\r\n                \"status\": \"PENDING\",\r\n                \"visitId\": visit.id\r\n            }, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setModal(false);\r\n            await Swal.fire({\r\n                icon: 'success',\r\n                text: 'CheckedIn successfully',\r\n                timer: 1500\r\n            });\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred while checking in Patient!',\r\n            });\r\n        }\r\n    };\r\n    const onError = async () => {\r\n        await Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'An error occurred while checking in Patient!',\r\n        });\r\n    };\r\n\r\n    let checkInServicesID = [];\r\n    /**** Submit Button For CheckIN  */\r\n    const handleSubmitCheckIn = (e) => {\r\n        e.preventDefault();\r\n        //Check if selected service object is empty before creating visit and posting.\r\n        let m = moment(checkInDate, \"yyyy-MM-DD hh:mm\").format('yyyy-MM-DD H:mm');\r\n        if(selectedServices.selected.length > 0 && moment(m).isValid()){\r\n            selectedServices.selected.length > 0 && selectedServices.selected.map((service)=> {\r\n                checkInServicesID.push(_.find(allServices,{moduleServiceCode:service}).id)\r\n            });\r\n\r\n            checkInObj.serviceIds= checkInServicesID\r\n            //Ensure date time is in 24hr format\r\n            checkInObj.visitDto.checkInDate = moment(checkInDate, \"yyyy-MM-DD hh:mm\").format('yyyy-MM-DD HH:mm');\r\n            axios.post(`${baseUrl}patient/visit/checkin`, checkInObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Patient Check-In successful\");\r\n                    setCheckinStatus(true)\r\n                    onCancelCheckIn()\r\n                    loadPatientVisits()\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    toast.error(\"Something went wrong\");\r\n                    onCancelCheckIn()\r\n                });\r\n        }else{\r\n            toast.error(\"Kindly check the form for a valid date and selected services\");\r\n        }\r\n\r\n    }\r\n\r\n    /**** Submit Button Processing  */\r\n    const handleSubmitCheckOut = (e) => {\r\n        e.preventDefault();\r\n        const getVisitID= patientVisits.find((visits)=> visits.status==='PENDING')\r\n\r\n        axios.put(`${baseUrl}patient/visit/checkout/${getVisitID.id}`,getVisitID.id,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n        )\r\n            .then(response => {\r\n                toast.success(\"Record save successful\");\r\n                setCheckinStatus(false)\r\n                onCancelCheckOut()\r\n                loadPatientVisits()\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                toast.error(\"Something went wrong\");\r\n                onCancelCheckOut()\r\n            });\r\n    }\r\n    const onServiceSelect = (selectedValues) => {\r\n        setSelectedServices({\"selected\":selectedValues});\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Card>\r\n                <CardContent>\r\n\r\n                    <PatientCard patientObj={patientObj} permissions={permissions} patientBiometricStatus={patientBiometricStatus}/>\r\n                    <Card style={{marginTop:'10px',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <CardContent>\r\n                            <div className=\"row\">\r\n                                <div className=\"mb-3 col-md-3\">\r\n                                    &nbsp;\r\n                                </div>\r\n                                <div className=\"mb-3 col-md-3\">\r\n                                    &nbsp;\r\n                                </div>\r\n                                <div className=\"mb-3 col-md-3\">\r\n                                    &nbsp;\r\n                                </div>\r\n                                <div className=\"mb-3 col-md-3\">\r\n                                    <Link to={\"/\"} >\r\n                                        <MatButton\r\n                                            className=\" float-right mr-1\"\r\n                                            variant=\"contained\"\r\n                                            floated=\"left\"\r\n                                            startIcon={<TiArrowBack  />}\r\n                                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n                                        >\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                                        </MatButton>\r\n                                    </Link>\r\n\r\n                                    {permissions.includes('patient_check_in') || permissions.includes(\"all_permission\") ? (\r\n                                            <>\r\n                                                {checkinStatus===false ? (\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            style={{ backgroundColor: \"rgb(4, 196, 217)\", fontSize:'14PX', fontWeight:'bold', height:'35px' }}\r\n                                                            onClick={handleCheckIn}\r\n                                                            className=\" float-right mr-1\"\r\n                                                        >\r\n                                                            <span style={{ textTransform: \"capitalize\" }}>CheckIn</span>\r\n                                                        </Button>\r\n                                                    )\r\n                                                    :\r\n                                                    \"\"\r\n                                                }\r\n                                            </>\r\n                                        )\r\n                                        :\"\"\r\n                                    }\r\n                                    {checkinStatus===true ? (\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                style={{ backgroundColor: \"green\", fontSize:'14PX', fontWeight:'bold', height:'35px' }}\r\n                                                onClick={handleCheckOut}\r\n                                                className=\" float-right mr-1\"\r\n                                            >\r\n                                                <span style={{ textTransform: \"capitalize\" }}>Check Out</span>\r\n                                            </Button>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                            <Tab panes={panes} />\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n\r\n                </CardContent>\r\n            </Card>\r\n            <Modal  size=\"lg\" style={{maxWidth: '900px'}} isOpen={modal} toggle={onCancelCheckIn}  className={classes.checkinModal}>\r\n                    <ModalHeader toggle={onCancelCheckIn}><h5 style={{fontWeight:\"bold\",fontSize:'30px',color:'#992E62'}}>Select Check-In Service</h5></ModalHeader>\r\n                    <ModalBody>\r\n                        <form onSubmit={handleSubmitCheckIn}>\r\n                            <Paper\r\n                                style={{\r\n                                    display: \"grid\",\r\n                                    gridRowGap: \"20px\",\r\n                                    padding: \"20px\",\r\n                                    margin: \"10px 10px\",\r\n                                }}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12}>\r\n                                        <FormGroup style={{width:'100%'}} className={classes.checkInDatePicker}>\r\n                                            <LocalizationProvider dateAdapter={AdapterDateFns} >\r\n                                                <Label for=\"post-services\" style={{color:'#014d88',fontWeight:'bolder',fontSize:'18px'}}>Check-In Date *</Label>\r\n                                                <DesktopDateTimePicker\r\n                                                    renderInput={(params) =>\r\n                                                        <TextField\r\n                                                            {...params}\r\n\r\n                                                            sx={{\r\n                                                                /*label:{ color:'#014d88',fontWeight:'bolder',fontSize:'18px' }*/\r\n                                                                input:{fontSize:'14px'},\r\n                                                            }}\r\n                                                            fullWidth\r\n                                                        />\r\n                                                    }\r\n                                                    value={checkInDate}\r\n                                                    onChange={(newValue) => {\r\n                                                        setCheckInDate(newValue);\r\n                                                    }}\r\n                                                    maxDate={new Date()}\r\n                                                    maxTime={new Date()}\r\n                                                    style={{width:'100%'}}\r\n                                                />\r\n                                            </LocalizationProvider>\r\n                                        </FormGroup>\r\n                                    </Grid>\r\n                                    {/*                                <Grid item xs={8}>\r\n\r\n                                    <FormControl >\r\n                                        <Label for=\"dateOfRegistration\">Select service </Label>\r\n                                        <Autocomplete\r\n                                            multiple\r\n                                            id=\"checkboxes-tags-demo\"\r\n                                            options={services}\r\n                                            //disableCloseOnSelect\r\n                                            getOptionLabel={(option) => option.moduleServiceName}\r\n                                            onChange={(e, i) => {\r\n                                                console.log(i)\r\n                                                setSelectedServices({ ...selectedServices, checkInServices: i });\r\n                                            }}\r\n                                            renderOption={(props, option, { selected }) => (\r\n                                                <li {...props}>\r\n                                                    <Checkbox\r\n                                                        icon={icon}\r\n                                                        checkedIcon={checkedIcon}\r\n                                                        style={{ marginRight: 8 }}\r\n                                                        checked={selected}\r\n                                                    />\r\n                                                    {option.moduleServiceName}\r\n                                                </li>\r\n                                            )}\r\n                                            style={{ width: 400 }}\r\n                                            renderInput={(params) => (\r\n                                                <TextField {...params} label=\"Services\" />\r\n                                            )}\r\n                                        />\r\n\r\n                                    </FormControl>\r\n                                </Grid>*/}\r\n                                    <Grid item xs={12}>\r\n                                        <FormGroup>\r\n                                            <Label for=\"post-services\" style={{color:'#014d88',fontWeight:'bolder',fontSize:'18px'}}><h5 style={{fontWeight:\"bold\",fontSize:'30px',color:'#992E62'}}>Check-In Service *</h5></Label>\r\n                                            <DualListBox\r\n                                                options={services}\r\n                                                onChange={onServiceSelect}\r\n                                                selected={selectedServices.selected}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12}>\r\n                                        <Button type={\"submit\"} variant=\"contained\" color={\"primary\"}>Submit</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </form>\r\n                    </ModalBody>\r\n            </Modal>\r\n            {/* Modal for CheckOut Patient */}\r\n            <Modal isOpen={modalCheckOut} toggle={onCancelCheckOut} className={classes.checkinModal} style={{maxWidth: '900px',height:\"800px\"}}>\r\n                <ModalHeader toggle={onCancelCheckOut}><h5 style={{fontWeight:\"bold\",fontSize:'30px',color:'#014d88'}}>Check Out </h5></ModalHeader>\r\n                <ModalBody>\r\n                    <form >\r\n                        <Paper\r\n                            style={{\r\n                                display: \"grid\",\r\n                                gridRowGap: \"20px\",\r\n                                padding: \"20px\",\r\n                                margin: \"10px 10px\",\r\n                            }}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <h5 style={{color:'#992E62',fontSize:\"20px\", fontWeight:'bold'}}>Are you sure you want to check-out patient?</h5>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <FormGroup style={{width:'100%'}} className={classes.checkInDatePicker}>\r\n                                        <LocalizationProvider dateAdapter={AdapterDateFns} >\r\n                                            <Label for=\"post-services\" style={{color:'#014d88',fontWeight:'bolder',fontSize:'16px'}}>Check-Out Date *</Label>\r\n                                            <DesktopDateTimePicker\r\n                                                renderInput={(params) =>\r\n                                                    <TextField\r\n                                                        {...params}\r\n\r\n                                                        sx={{\r\n                                                            /*label:{ color:'#014d88',fontWeight:'bolder',fontSize:'18px' }*/\r\n                                                            input:{fontSize:'14px'},\r\n                                                        }}\r\n                                                        fullWidth\r\n                                                    />\r\n                                                }\r\n                                                value={checkOutDate}\r\n                                                onChange={(newValue) => {\r\n                                                    setCheckOutDate(newValue);\r\n                                                }}\r\n                                                maxDate={new Date()}\r\n                                                maxTime={new Date()}\r\n                                                style={{width:'100%'}}\r\n                                            />\r\n                                        </LocalizationProvider>\r\n                                    </FormGroup>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Button type={\"submit\"} onClick={handleSubmitCheckOut} variant=\"contained\" color={\"primary\"}>Yes</Button>\r\n                                    <Button  onClick={onCancelCheckOut} variant=\"contained\" style={{backgroundColor:'#992E62',color:\"#fff\",marginLeft:\"10px\"}}>Cancel</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </form>\r\n                </ModalBody>\r\n            </Modal>\r\n            {/* End of Checkout Modal */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientDashboard;\r\n","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\RegisterPatient.js",["161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],"C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\index.js",["191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207"],"import React, {useEffect, useState} from 'react';\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport {Card, CardBody, Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FaUserPlus} from \"react-icons/fa\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport MaterialTable from \"material-table\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\nimport {Tab} from \"semantic-ui-react\";\r\nimport Biometrics from \"./Biometrics\";\r\nimport PatientList from \"./Home/PatientList\";\r\nimport BiometricsCapture from \"./Home/Biometrics\";\r\nimport BiometricsList from \"./Home/BiometricsList\";\r\nimport Typography from '@mui/material/Typography';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport CheckedInPatients from \"./Home/CheckedInPatients\";\r\nimport MigrationDQA from \"./MigrationDQA\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        '& a':{\r\n            textDecoration:'none !important'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\nfunction Index(props) {\r\n    const classes = useStyles();\r\n    const [patients, setPatients] = useState([]);\r\n    const [permissions, setPermissions] = useState([]);\r\n    const [loading, setLoading] = useState('');\r\n    const [modal, setModal] = useState(false);\r\n    const [patient, setPatient] = useState(false);\r\n    const [enablePPI, setEnablePPI] = useState(true);\r\n    const toggle = (id) => {\r\n        const patient = patients.find(obj => obj.id == id);\r\n        setPatient(patient);\r\n        setModal(!modal);\r\n    }\r\n    useEffect(() => {\r\n        userPermission();\r\n    }, []);\r\n    //Get list of Finger index\r\n    const userPermission =()=>{\r\n        axios\r\n            .get(`${baseUrl}account`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setPermissions(response.data.permissions);\r\n\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    const enablePPIColumns = () =>{\r\n        setEnablePPI(!enablePPI)\r\n    }\r\n    const panes = [\r\n        { menuItem: 'Clients', render: () =>\r\n                <Tab.Pane>\r\n                    <PatientList permissions={permissions}/>\r\n                </Tab.Pane>\r\n        },\r\n        { menuItem: 'Checked-In', render: () =>\r\n                <Tab.Pane>\r\n                    <CheckedInPatients permissions={permissions}/>\r\n                </Tab.Pane>\r\n        },\r\n       { menuItem: 'Patient Biometrics', render: () =>\r\n                <Tab.Pane>\r\n                    <BiometricsCapture permissions={permissions}/>\r\n                </Tab.Pane>\r\n        },\r\n//        { menuItem: 'Missing Biometrics', render: () =>\r\n//                <Tab.Pane>\r\n//                    <BiometricsList permissions={permissions}/>\r\n//                </Tab.Pane>\r\n//        },\r\n        { menuItem: 'Migration DQA', render: () =>\r\n                <Tab.Pane>\r\n                    <MigrationDQA permissions={permissions}/>\r\n                </Tab.Pane>\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            {permissions.length > 0 &&\r\n                <Card>\r\n                    <CardBody>\r\n                        <div className=\"row mb-12 col-md-12\">\r\n                            <div className=\"mb-6 col-md-6\" >\r\n                                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                                    <Typography style={{color:'#992E62'}}>Patient</Typography>\r\n                                    <Typography style={{color:'#014d88'}}>Home</Typography>\r\n                                </Breadcrumbs>\r\n\r\n                            </div>\r\n                            <div className=\"mb-6 col-md-6\">\r\n                                {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n                                    <Link to={\"register-patient\"}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className=\" float-right mr-1\"\r\n                                            startIcon={<FaUserPlus size=\"25\"/>}\r\n                                            style={{backgroundColor:'#014d88'}}\r\n                                        >\r\n                                            <span style={{ textTransform: \"capitalize\", fontWeight:'bolder' }}>New Client</span>\r\n                                        </Button>\r\n                                    </Link>\r\n                                ):\"\"\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Tab panes={panes} />\r\n                    </CardBody>\r\n                </Card>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index;","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\ClientDashboard\\index.js",["208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227"],"import React, {useCallback, useEffect, useState} from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {Button, Card, CardContent, FormControl, Grid, MenuItem, Paper, TextField, Typography} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../../api\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport PatientCard from \"../PatientCard\";\r\nimport ClientDashboard from \"./index\";\r\nimport PersonDemographics from \"../PersonDemographics\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport CheckIn from \"./CheckIn\";\r\nimport {Tab} from \"semantic-ui-react\";\r\nimport MaterialTable from \"material-table\";\r\nimport Biometrics from \"../Biometrics\";\r\nimport moment from \"moment\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        marginBottom: 20,\r\n        flexGrow: 1,\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    icon: {\r\n        verticalAlign: 'bottom',\r\n        height: 20,\r\n        width: 20,\r\n    },\r\n    details: {\r\n        alignItems: 'center',\r\n    },\r\n    column: {\r\n        flexBasis: '20.33%',\r\n    },\r\n    helper: {\r\n        borderLeft: `2px solid ${theme.palette.divider}`,\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\r\n    },\r\n    link: {\r\n        color: theme.palette.primary.main,\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n        },\r\n    },\r\n    checkinModal:{\r\n        \"& .modal-dialog\":{\r\n            maxWidth:\"1000px\"\r\n        },\r\n        \"& .ui.label\":{\r\n            backgroundColor:\"#fff\",\r\n            fontSize:'16px',\r\n            color:'#014d88',\r\n            fontWeight:'bold',\r\n            textAlign:'left'\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    checkInDatePicker:{\r\n        '& .MuiFormControl-root.MuiTextField-root':{\r\n            border:'1px solid #eee'\r\n        }\r\n    }\r\n}));\r\nfunction Index(props) {\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const [loading, setLoading] = useState('');\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {};\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [patientBiometricStatus, setPatientBiometricStatus]= useState(patientObj.biometricStatus);\r\n    const [biometricsModuleInstalled,setBiometricsModuleInstalled]=useState(false);\r\n    const [patientVisits, setPatientVisits]= useState([]);\r\n    const [checkinStatus, setCheckinStatus]= useState(false)\r\n\r\n\r\n\r\n    const updatePatientBiometricStatus = (bioStatus) =>{\r\n        setPatientBiometricStatus(bioStatus);\r\n    }\r\n    const panes = [\r\n        { menuItem: 'Visits', render: () =>\r\n                <Tab.Pane>\r\n                    <MaterialTable\r\n                        title=\"\"\r\n                        columns={[\r\n                            {\r\n                                title: \"Check-In Date\",\r\n                                field: \"checkInDate\", filtering: false,\r\n                                headerStyle: {\r\n                                    backgroundColor: \"#039be5\",\r\n                                    border:'2px solid #fff',\r\n                                    paddingRight:'30px'\r\n                                }\r\n                            },\r\n                            { title: \"Check-Out Date\", field: \"checkOutDate\", filtering: false  },\r\n                            { title: \"Service\", field: \"service\", filtering: false  },\r\n                            { title: \"Status\", field: \"status\", filtering: false },\r\n                        ]}\r\n                        isLoading={loading}\r\n                        data={patientVisits.map((row) => ({\r\n                            checkInDate: moment(row.checkInDate).format(\"YYYY-MM-DD h:mm a\"),\r\n                            checkOutDate: row.checkOutDate?moment(row.checkOutDate).format(\"YYYY-MM-DD h:mm a\"):\"Visit Ongoing\",\r\n                            service:row.service,\r\n                            status:(<h6 style={{color:row.status ==='COMPLETED' ? 'green' : 'red'}}>{row.status}</h6>),\r\n\r\n                        }))}\r\n\r\n                        options={{\r\n                            headerStyle: {\r\n                                backgroundColor: \"#014d88\",\r\n                                color: \"#fff\",\r\n                                fontSize:'16px',\r\n                                padding:'10px',\r\n                                fontWeight:'bold'\r\n                            },\r\n                            rowStyle: {\r\n                                color: 'rgba(0,0,0,.87)',\r\n                                fontFamily:`'poppins', sans-serif`\r\n                            },\r\n                            searchFieldStyle: {\r\n                                width : '200%',\r\n                                margingLeft: '250px',\r\n                            },\r\n                            filtering: false,\r\n                            exportButton: false,\r\n                            searchFieldAlignment: 'left',\r\n                            pageSizeOptions:[10,20,100],\r\n                            pageSize:10,\r\n                            debounceInterval: 400\r\n                        }}\r\n                    />\r\n                </Tab.Pane>\r\n        },\r\n\r\n        { menuItem: permissions.includes('view_patient_appointment') && biometricsModuleInstalled || permissions.includes(\"all_permission\")  && biometricsModuleInstalled? 'Biometrics' : \"\", render: () =>\r\n                permissions.includes('view_patient_appointment') || permissions.includes(\"all_permission\") ?\r\n                    <Tab.Pane>\r\n                        <div style={{ minHeight: 400, width: '100%' }}>\r\n                            <Biometrics patientId={patientObj.id} updatePatientBiometricStatus={updatePatientBiometricStatus}/>\r\n                        </div>\r\n                    </Tab.Pane>\r\n                    :\"\"\r\n        }\r\n\r\n\r\n\r\n    ];\r\n    const checkForBiometricsModule =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    setBiometricsModuleInstalled(true);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n    const loadPatientVisits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/visit/visit-by-patient/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setPatientVisits(response.data);\r\n            response.data.map((visits)=> {\r\n                if(visits.checkOutDate===null){\r\n                    setCheckinStatus(true)\r\n                }\r\n            })\r\n\r\n\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred fetching services!',\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        loadPatientVisits();\r\n        checkForBiometricsModule();\r\n    }, []);\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className=\"mb-6 col-md-6\" style={{paddingTop:\"10px\",paddingBottom:'10px'}} >\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Typography style={{color:'#992E62'}}>Patient</Typography>\r\n                    <Typography style={{color:'#014d88'}}>Dashboard</Typography>\r\n                </Breadcrumbs>\r\n\r\n            </div>\r\n            <Card>\r\n                <CardContent>\r\n                    <PersonDemographics patientObj={patientObj} permissions={permissions} patientBiometricStatus={patientObj.biometricStatus}/>\r\n                    <Card style={{marginTop:'5px'}}>\r\n                        <CardContent>\r\n                            <CheckIn props={props}/>\r\n                            <Tab panes={panes} />\r\n                        </CardContent>\r\n                    </Card>\r\n                </CardContent>\r\n            </Card>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index;","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\api.js",[],"C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\PatientCard.js",["228","229","230","231","232","233","234","235","236","237","238"],"import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Accordion, AccordionActions, AccordionDetails, AccordionSummary} from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {Button, Label} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {Col, Row, Modal} from \"reactstrap\";\r\nimport CaptureBiometric from './CaptureBiometric';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    icon: {\r\n        verticalAlign: 'bottom',\r\n        height: 20,\r\n        width: 20,\r\n    },\r\n    details: {\r\n        alignItems: 'center',\r\n    },\r\n    column: {\r\n        flexBasis: '20.33%',\r\n    },\r\n    helper: {\r\n        borderLeft: `2px solid ${theme.palette.divider}`,\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\r\n    },\r\n    link: {\r\n        color: theme.palette.primary.main,\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n        },\r\n    },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n    const { classes } = props;\r\n    const patientObj = props.patientObj ? props.patientObj : {};\r\n    console.log(\"obj\", patientObj)\r\n    const permissions= props.permissions ? props.permissions : [];\r\n    const [modal, setModal] = useState(false) //Modal to collect sample\r\n    const [patientBiometricStatus, setPatientBiometricStatus]= useState(props.patientBiometricStatus);\r\n    const toggleModal = () => setModal(!modal)\r\n\r\n    const [biometricStatus, setBiometricStatus] = useState(false);\r\n    const [devices, setDevices] = useState([]);\r\n    useEffect(() => {\r\n        setPatientBiometricStatus(props.patientBiometricStatus)\r\n        TemplateType();\r\n    }, [props.patientBiometricStatus]);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setBiometricStatus(response.data);\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    const calculate_age = dob => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getPhone = (contactPoint) => {\r\n        const phoneContact = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n        return phoneContact ? phoneContact.value : '';\r\n    };\r\n\r\n    const getAddress = (address) => {\r\n        const city = address && address.address && address.address.length > 0 ? address.address[0].city : null;\r\n        return city;\r\n    };\r\n\r\n\r\n    const handleBiometricCapture = (id) => {\r\n        let patientObjID= id\r\n        setModal(!modal)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                <Typography style={{color:'#992E62'}}>Patient</Typography>\r\n                <Typography style={{color:'#014d88'}}>Dashboard</Typography>\r\n            </Breadcrumbs>\r\n            <Accordion defaultExpanded>\r\n                <AccordionSummary>\r\n\r\n                    <Row>\r\n                        <Col md={11}>\r\n                            <Row className={\"mt-1\"}>\r\n                                <Col md={12} className={classes.root2} >\r\n                                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                                        {patientObj.surname + \", \" + patientObj.firstName + \" \" + patientObj.otherName !== null ? patientObj.otherName : \" \"}\r\n                                    </b>\r\n\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                    <span style={{color:'#000'}}>\r\n                                        {\" \"}\r\n                                        Hospital Number : <b style={{color:'#0B72AA'}}>{getHospitalNumber(patientObj.identifier) }</b>\r\n                                    </span>\r\n                                </Col>\r\n\r\n                                <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                    <span style={{color:'#000'}}>\r\n                                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dateOfBirth }</b>\r\n                                    </span>\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span style={{color:'#000'}}>\r\n                                    {\" \"}\r\n                                    Age : <b style={{color:'#0B72AA'}}>{calculate_age(patientObj.dateOfBirth) }</b>\r\n                                </span>\r\n                                </Col>\r\n                                <Col md={4} style={{marginTop:\"10px\"}}>\r\n                                    <span  style={{color:'#000'}}>\r\n                                        {\" \"}\r\n                                        Sex :{\" \"}\r\n                                        <b style={{color:'#0B72AA',fontFamily:`'poppins', sans-serif`,fontWeight:'bolder'}}>{patientObj.sex }</b>\r\n                                    </span>\r\n\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span style={{color:'#000'}}>\r\n                                    {\" \"}\r\n                                    Phone Number : <b style={{color:'#0B72AA'}}>{getPhone(patientObj.contactPoint)}</b>\r\n                                </span>\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span style={{color:'#000'}}>\r\n                                    {\" \"}\r\n                                    Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)} </b>\r\n                                </span>\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n                        </Col>\r\n\r\n\r\n\r\n                    </Row>\r\n\r\n                </AccordionSummary>\r\n                <AccordionDetails className={classes.details}>\r\n                    {biometricStatus===true ? (\r\n                            <>\r\n                                <div >\r\n                                    <Typography variant=\"caption\">\r\n                                        <Label  style={{height:'30px', fontSize:'14px'}} color={patientBiometricStatus===true? \"green\" : \"red\"} size={\"large\"}>\r\n                                            Biometric Status\r\n                                            <Label.Detail>{patientBiometricStatus===true? \"Captured\" : \"Not Captured\"}</Label.Detail>\r\n                                        </Label>\r\n                                        {patientBiometricStatus!==true ? (\r\n\r\n                                                <>\r\n                                                    {permissions.includes('patient_check_in') || permissions.includes(\"all_permission\") ? (\r\n                                                            <>\r\n                                                                <Label style={{height:'30px', fontSize:'14px'}} as='a' color='teal' onClick={() => handleBiometricCapture(patientObj.id)} tag>\r\n                                                                    Capture Now\r\n                                                                </Label>\r\n                                                            </>\r\n                                                        )\r\n                                                        :\"\"\r\n                                                    }\r\n                                                </>\r\n                                            )\r\n                                            :\"\"\r\n                                        }\r\n\r\n                                    </Typography>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div >\r\n                                <Typography variant=\"caption\">\r\n                                    <Label color={\"red\"} style={{height:'30px', fontSize:'14px'}}>\r\n                                        Biometrics Module Not Install\r\n\r\n                                    </Label>\r\n\r\n                                </Typography>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </AccordionDetails>\r\n            </Accordion>\r\n{/*\r\n            <CaptureBiometric  modalstatus={modal} togglestatus={toggleModal} patientId={patientObj.id} biometricDevices={devices} setPatientBiometricStatus={setPatientBiometricStatus} />\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\Biometrics.js",["239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from '../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            // console.log(\"getPersonBiometrics error\")\r\n            // console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices?active=true`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            console.log(response.data.find((x) => x.active===true))\r\n                            setDevices(response.data.find((x) => x.active===true));\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        //temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            setLoading(true);\r\n            // console.log(biometricDevices)\r\n            // console.log(devices)\r\n            // axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            axios.post(`${devices.url}?reader=${devices.name}`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(false);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n                {/*{permissions.includes('capture_patient_biometrics')|| permissions.includes(\"all_permission\")?*/}\r\n                {permissions.includes('capture_patient_biometrics')|| permissions.includes(\"all_permission\") ?\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}> Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        //onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                        disabled\r\n                                    >\r\n                                        {biometricDevices.map(({ id, name,active, url }) => (\r\n                                            <option key={id} value={url} >\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={12}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={12}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                                disabled={loading}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                    :\"\"\r\n\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\Home\\PatientList.js",["269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309"],"import React, {useState, useEffect, useCallback, useRef} from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../../api\";\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Card,CardBody,} from 'reactstrap';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport {FaEye, FaUserPlus} from \"react-icons/fa\";\r\nimport { MdDashboard, MdDeleteForever, MdModeEdit,MdPerson} from \"react-icons/md\";\r\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Label } from 'semantic-ui-react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"../patient.css\";\r\nimport SplitActionButton from '../SplitActionButton';\r\n\r\nimport { forwardRef } from 'react';\r\n//import { Button} from \"react-bootstrap\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        '& a':{\r\n            textDecoration:'none !important'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\nconst PatientList = (props) => {\r\n    const tableRef = useRef(null);\r\n    const classes = useStyles();\r\n    const [patients, setPatients] = useState([]);\r\n    const [permissions, setPermissions] = useState(props.permissions);\r\n    const [loading, setLoading] = useState('');\r\n    const [modal, setModal] = useState(false);\r\n    const [patient, setPatient] = useState(false);\r\n    const [enablePPI, setEnablePPI] = useState(true);\r\n    const [searchParams,setSearchParams] = useState('*');\r\n    const [totalPages,setTotalPages] = useState(0);\r\n    const [totalRecords,setTotalRecords] = useState(0);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [currentPage,setCurrentPage] = useState(1);\r\n    const history = useHistory();\r\n    const toggle = (id) => {\r\n//        const patient = patients.find(obj => obj.id == id);\r\n//        setPatient(patient);\r\n        localStorage.setItem(\"patientID\", JSON.stringify(id));\r\n        setModal(!modal);\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        const patientId = localStorage.getItem(\"patientID\");\r\n        axios\r\n            .delete(`${baseUrl}patient/${patientId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                localStorage.removeItem(\"patientID\")\r\n                Swal.fire({\r\n                      icon: 'success',\r\n                      text: 'Patient Deleted Successfully',\r\n                      timer: 1500\r\n                 });\r\n\r\n                setModal(false);\r\n                history.push('/')\r\n            })\r\n            .catch((error) => {\r\n                 Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'An error occurred while deleting!!!',\r\n                });\r\n            });\r\n    }\r\n\r\n    function actionItems(row){\r\n        return  [\r\n            {\r\n                name:'View',\r\n                type:'link',\r\n                icon:<FaEye  size=\"22\"/>,\r\n                to:{\r\n                    pathname: \"/view-patient\",\r\n                    state: { patientId : row.id, permissions:permissions  }\r\n                }\r\n            },\r\n            {...(permissions.includes('view_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Dashboard',\r\n                        type:'link',\r\n                        icon:<MdPerson size=\"20\" color='rgb(4, 196, 217)' />,\r\n                        to:{\r\n                            pathname: \"/patient-dashboard\",\r\n                            state: { patientObj: row, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )},\r\n            {...(permissions.includes('edit_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Edit',\r\n                        type:'link',\r\n                        icon:<MdModeEdit size=\"20\" color='rgb(4, 196, 217)' />,\r\n                        to:{\r\n                            pathname: \"/register-patient\",\r\n                            state: { patientId : row.id, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )},\r\n            {...(permissions.includes('delete_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Delete',\r\n                        type:'link',\r\n                        icon:<MdDeleteForever size=\"20\" color='rgb(4, 196, 217)'  />,\r\n                        deleteAction: () => {toggle(row.id)},\r\n                        to:{\r\n                            pathname: \"/#\",\r\n                            state: { patientObj: row, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )}\r\n        ]\r\n    }\r\n    const handleRemoteData = query =>\r\n        new Promise((resolve, reject) => {\r\n            axios.get(`${baseUrl}patient?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                .then(response => response)\r\n                .then(result => {\r\n                     if (result.data === \"\") {\r\n                        resolve({\r\n                          data: [],\r\n                          page: 0,\r\n                          totalCount: 0,\r\n                        });\r\n                      } else {\r\n                        resolve({\r\n                            data: result.data.records.map((row) => ({\r\n                                name: [row.firstName, row.otherName, row.surname].filter(Boolean).join(\", \"),\r\n                                id: getHospitalNumber(row.identifier),\r\n                                sex:row.sex.toLowerCase().charAt(0).toUpperCase() + row.sex.slice(1).toLowerCase(),\r\n                                dateOfBirth: row.dateOfBirth,\r\n                                age: (row.dateOfBirth === 0 ||\r\n                                    row.dateOfBirth === undefined ||\r\n                                    row.dateOfBirth === null ||\r\n                                    row.dateOfBirth === \"\" )\r\n                                    ? 0\r\n                                    : calculate_age(row.dateOfBirth),\r\n                                actions:\r\n                                    <div>\r\n                                        {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n                                            <SplitActionButton actions={actionItems(row)} />\r\n                                        ):\"\"\r\n                                        }\r\n                                    </div>\r\n                            })),\r\n                            page: query.page,\r\n                            totalCount:result.data.totalRecords\r\n                        });\r\n                      }\r\n                });\r\n        })\r\n\r\n\r\n    const onDelete = async (id) => {\r\n        try {\r\n            if (id) {\r\n                const response = await axios.delete(`${baseUrl}patient/${id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                window.location.reload();\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const onCancelDelete = () => {\r\n        setModal(false);\r\n    }\r\n\r\n    const calculate_age = dob => {\r\n\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    const getAddress = (address) => {\r\n        const city = address && address.address && address.address.length > 0 ? address.address[0].city : null;\r\n        return city;\r\n    };\r\n\r\n    const getGender = (gender) => {\r\n        return gender.display;\r\n    };\r\n\r\n\r\n\r\n    const enablePPIColumns = () =>{\r\n        setEnablePPI(!enablePPI)\r\n    }\r\n    const PPISelect = () => <div>\r\n        {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n            <FormGroup className=\" float-right mr-1\">\r\n                <FormControlLabel  control={\r\n                    <Checkbox\r\n                        onChange={enablePPIColumns}\r\n                        checked={!enablePPI}\r\n                        style={{color:'#014d88',fontWeight:'bold'}}\r\n                    />\r\n                } label=\"Show PII\" style={{color:'#014d88',fontWeight:'bolder'}} />\r\n            </FormGroup>\r\n        ):<h5 style={{color:'#3d4465',fontWeight:'bold'}}>Patients</h5>\r\n        }\r\n    </div>;\r\n\r\n\r\n    const handleChangePage = (page) => {\r\n        setCurrentPage(page + 1);\r\n    };\r\n    const localization = {\r\n        pagination: {\r\n            labelDisplayedRows: `${currentPage} - 10 of 2022`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <MaterialTable\r\n                tableRef={tableRef}\r\n                /*onSearchChange={(e) => {\r\n                    handleSearchChange(e);\r\n                }}*/\r\n                icons={tableIcons}\r\n                title={<PPISelect/>}\r\n                columns={[\r\n                    {\r\n                        title: \"Name\",\r\n                        field: \"name\",\r\n                        filtering: false,\r\n                        hidden:enablePPI\r\n                    },\r\n                    { title: \"Hosp. Number\", field: \"id\" , filtering: false},\r\n                    { title: \"Sex\", field: \"sex\", filtering: false },\r\n                    { title: \"Date Of Birth\", field: \"dateOfBirth\", filtering: false },\r\n                    { title: \"Age\", field: \"age\", filtering: false },\r\n                    /*{ title: \"Address\", field: \"address\", filtering: false },*/\r\n                    /*{ title: \"Status\", field: \"status\", filtering: false },*/\r\n                    {title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={loading}\r\n                data={handleRemoteData}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                        fontSize:'16px',\r\n                        padding:'10px',\r\n                        fontWeight:'bolder'\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '50%'\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400,\r\n\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                //localization={localization}\r\n\r\n            />\r\n            <Modal isOpen={modal} toggle={onCancelDelete}>\r\n                <ModalHeader toggle={onCancelDelete}>Delete Patient</ModalHeader>\r\n                <ModalBody>\r\n                    Are you sure you want to delete this record? { patient ? patient.surname +  ', ' + patient.firstname +  ' ' + patient.otherName : '' }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" type=\"button\" onClick={handleDelete}>Yes</Button>{' '}\r\n                    <Button color=\"secondary\" type=\"button\" onClick={(e) => onCancelDelete()}>No</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientList;\r\n\r\n\r\n","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\Home\\BiometricsList.js",["310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330"],"//List of patients without biometrics\r\nimport React, {forwardRef, useCallback, useEffect, useState} from 'react';\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport MaterialTable from \"material-table\";\r\nimport SplitActionButton from \"../SplitActionButton\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../../api\";\r\nimport {FaEye} from \"react-icons/fa\";\r\nimport {MdDeleteForever, MdModeEdit, MdPerson} from \"react-icons/md\";\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        '& a':{\r\n            textDecoration:'none !important'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nfunction BiometricsList(props) {\r\n    const classes = useStyles();\r\n    const [patients, setPatients] = useState([]);\r\n    const [permissions, setPermissions] = useState([]);\r\n    const [loading, setLoading] = useState('');\r\n    const [patient, setPatient] = useState(false);\r\n    const [enablePPI, setEnablePPI] = useState(true);\r\n    const [currentPage,setCurrentPage] = useState(1);\r\n\r\n\r\n    //Get list of Finger index\r\n    const userPermission =()=>{\r\n        axios\r\n            .get(`${baseUrl}account`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setPermissions(response.data.permissions);\r\n\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    const loadPatients = useCallback(async () => {\r\n        try {\r\n            await axios.get(`${baseUrl}patient/getall-patients-without-biometric`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                .then((response)=>{\r\n                    if(response.data){\r\n                        setPatients(response.data);\r\n                    }\r\n                })\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n    function actionItems(row){\r\n        return  [\r\n            {\r\n                name:'View',\r\n                type:'link',\r\n                icon:<FaEye  size=\"22\"/>,\r\n                to:{\r\n                    pathname: \"/register-patient\",\r\n                    state: { patientId : row.id, permissions:permissions  }\r\n                }\r\n            },\r\n            {...(permissions.includes('view_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Dashboard',\r\n                        type:'link',\r\n                        icon:<MdPerson size=\"20\" color='rgb(4, 196, 217)' />,\r\n                        to:{\r\n                            pathname: \"/patient-dashboard\",\r\n                            state: { patientObj: row, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )},\r\n            {...(permissions.includes('edit_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Edit',\r\n                        type:'link',\r\n                        icon:<MdModeEdit size=\"20\" color='rgb(4, 196, 217)' />,\r\n                        to:{\r\n                            pathname: \"/register-patient\",\r\n                            state: { patientId : row.id, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )},\r\n            {...(permissions.includes('delete_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Delete',\r\n                        type:'link',\r\n                        icon:<MdDeleteForever size=\"20\" color='rgb(4, 196, 217)'  />,\r\n                        to:{\r\n                            pathname: \"/#\",\r\n                            state: { patientObj: row, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )}\r\n        ]\r\n    }\r\n\r\n    const handleRemoteData = query =>\r\n        new Promise((resolve, reject) => {\r\n            axios.get(`${baseUrl}patient/getall-patients-without-biometric?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                .then(response => response)\r\n                .then(result => {\r\n                    resolve({\r\n                        data: result.data.records.map((row) => ({\r\n                            name: [row.firstName, row.otherName, row.surname].filter(Boolean).join(\", \"),\r\n                            id: getHospitalNumber(row.identifier),\r\n                            sex: row.sex.toLowerCase().charAt(0).toUpperCase() + row.sex.slice(1).toLowerCase(),\r\n                            dateOfBirth: row.dateOfBirth,\r\n                            age: (row.dateOfBirth === 0 ||\r\n                                row.dateOfBirth === undefined ||\r\n                                row.dateOfBirth === null ||\r\n                                row.dateOfBirth === \"\" )\r\n                                ? 0\r\n                                : calculate_age(row.dateOfBirth),\r\n                            actions:\r\n                                <div>\r\n                                    {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n                                        <SplitActionButton actions={actionItems(row)} />\r\n                                    ):\"\"\r\n                                    }\r\n                                </div>\r\n                        })),\r\n                        page: query.page,\r\n                        totalCount: result.data.totalRecords\r\n                    });\r\n                });\r\n        })\r\n    useEffect(() => {\r\n        userPermission();\r\n        loadPatients();\r\n    }, []);\r\n    const calculate_age = dob => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n\r\n    \r\n    const enablePPIColumns = () =>{\r\n        setEnablePPI(!enablePPI)\r\n    }\r\n    const PPISelect = () => <div>\r\n        {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n            <FormGroup className=\" float-right mr-1\">\r\n                <FormControlLabel  control={\r\n                    <Checkbox\r\n                        onChange={enablePPIColumns}\r\n                        checked={!enablePPI}\r\n                        style={{color:'#014d88',fontWeight:'bold'}}\r\n                    />\r\n                } label=\"Show PII\" style={{color:'#014d88',fontWeight:'bolder'}} />\r\n            </FormGroup>\r\n        ):<h5 style={{color:'#3d4465',fontWeight:'bold'}}>Patients</h5>\r\n        }\r\n    </div>;\r\n    const handleChangePage = (page) => {\r\n        setCurrentPage(page + 1);\r\n    };\r\n    const localization = {\r\n        pagination: {\r\n            labelDisplayedRows: `Page: ${currentPage}`\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {/*<ToastContainer autoClose={3000} hideProgressBar />*/}\r\n            <h3>Patients without biometrics</h3>\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title={<PPISelect/>}\r\n                columns={[\r\n                    {\r\n                        title: \"Name\",\r\n                        field: \"name\",\r\n                        filtering: false,\r\n                        hidden:enablePPI\r\n                    },\r\n                    { title: \"Hosp. Number\", field: \"id\" , filtering: false},\r\n                    { title: \"Sex\", field: \"sex\", filtering: false },\r\n                    { title: \"Date Of Birth\", field: \"dateOfBirth\", filtering: false },\r\n                    { title: \"Age\", field: \"age\", filtering: false }\r\n                ]}\r\n                isLoading={loading}\r\n                data={handleRemoteData}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                        fontSize:'16px',\r\n                        padding:'10px',\r\n                        fontWeight:'bolder'\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '50%'\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400,\r\n\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                //localization={localization}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BiometricsList;","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\Home\\CheckedInPatients.js",["331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369"],"import React, {useState, useEffect, useCallback, useRef} from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../../api\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Card,CardBody,} from 'reactstrap';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport {FaEye, FaUserPlus} from \"react-icons/fa\";\r\nimport { MdDashboard, MdDeleteForever, MdModeEdit,MdPerson} from \"react-icons/md\";\r\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Label } from 'semantic-ui-react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"../patient.css\";\r\nimport SplitActionButton from '../SplitActionButton';\r\n\r\nimport { forwardRef } from 'react';\r\n//import { Button} from \"react-bootstrap\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\n\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        '& a':{\r\n            textDecoration:'none !important'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst CheckedInPatients = (props) => {\r\n    const tableRef = useRef(null);\r\n    const classes = useStyles();\r\n    const [patients, setPatients] = useState([]);\r\n    const [permissions, setPermissions] = useState(props.permissions);\r\n    const [loading, setLoading] = useState('');\r\n    const [modal, setModal] = useState(false);\r\n    const [patient, setPatient] = useState(false);\r\n    const [enablePPI, setEnablePPI] = useState(true);\r\n    const [searchParams,setSearchParams] = useState('*');\r\n    const [totalPages,setTotalPages] = useState(0);\r\n    const [totalRecords,setTotalRecords] = useState(0);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [currentPage,setCurrentPage] = useState(1);\r\n    const toggle = (id) => {\r\n        const patient = patients.find(obj => obj.id == id);\r\n        setPatient(patient);\r\n        setModal(!modal);\r\n    }\r\n\r\n\r\n    function actionItems(row){\r\n        return  [\r\n            {\r\n                name:'View',\r\n                type:'link',\r\n                icon:<FaEye  size=\"22\"/>,\r\n                to:{\r\n                    pathname: \"/register-patient\",\r\n                    state: { patientId : row.id, permissions:permissions  }\r\n                }\r\n            },\r\n            {...(permissions.includes('view_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Dashboard',\r\n                        type:'link',\r\n                        icon:<MdPerson size=\"20\" color='rgb(4, 196, 217)' />,\r\n                        to:{\r\n                            pathname: \"/patient-dashboard\",\r\n                            state: { patientObj: row, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )},\r\n            {...(permissions.includes('edit_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Edit',\r\n                        type:'link',\r\n                        icon:<MdModeEdit size=\"20\" color='rgb(4, 196, 217)' />,\r\n                        to:{\r\n                            pathname: \"/register-patient\",\r\n                            state: { patientId : row.id, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )},\r\n            {...(permissions.includes('delete_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Delete',\r\n                        type:'link',\r\n                        icon:<MdDeleteForever size=\"20\" color='rgb(4, 196, 217)'  />,\r\n                        to:{\r\n                            pathname: \"/#\",\r\n                            state: { patientObj: row, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )}\r\n        ]\r\n    }\r\n    const handleRemoteData = query =>\r\n        new Promise((resolve, reject) => {\r\n            axios.get(`${baseUrl}patient/checked-in?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                .then(response => response)\r\n                .then(result => {\r\n                    resolve({\r\n                        data: result.data.records.map((row) => ({\r\n                            name: [row.firstName, row.otherName, row.surname].filter(Boolean).join(\", \"),\r\n                            id: getHospitalNumber(row.identifier),\r\n                            sex: row.sex.toLowerCase().charAt(0).toUpperCase() + row.sex.slice(1).toLowerCase(),\r\n                            dateOfBirth: row.dateOfBirth,\r\n                            age: (row.dateOfBirth === 0 ||\r\n                                row.dateOfBirth === undefined ||\r\n                                row.dateOfBirth === null ||\r\n                                row.dateOfBirth === \"\" )\r\n                                ? 0\r\n                                : calculate_age(row.dateOfBirth),\r\n                            actions:\r\n                                <div>\r\n                                    {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n                                        <SplitActionButton actions={actionItems(row)} />\r\n                                    ):\"\"\r\n                                    }\r\n                                </div>\r\n                        })),\r\n                        page: query.page,\r\n                        totalCount: result.data.totalRecords\r\n                    });\r\n                });\r\n        })\r\n\r\n\r\n    const onDelete = async (id) => {\r\n        try {\r\n            if (id) {\r\n                const response = await axios.delete(`${baseUrl}patient/${id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                window.location.reload();\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const onCancelDelete = () => {\r\n        setModal(false);\r\n    }\r\n\r\n    const calculate_age = dob => {\r\n\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    const getAddress = (address) => {\r\n        const city = address && address.address && address.address.length > 0 ? address.address[0].city : null;\r\n        return city;\r\n    };\r\n\r\n    const getGender = (gender) => {\r\n        return gender.display;\r\n    };\r\n\r\n\r\n\r\n    const enablePPIColumns = () =>{\r\n        setEnablePPI(!enablePPI)\r\n    }\r\n    const PPISelect = () => <div>\r\n        {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n            <FormGroup className=\" float-right mr-1\">\r\n                <FormControlLabel  control={\r\n                    <Checkbox\r\n                        onChange={enablePPIColumns}\r\n                        checked={!enablePPI}\r\n                        style={{color:'#014d88',fontWeight:'bold'}}\r\n                    />\r\n                } label=\"Show PII\" style={{color:'#014d88',fontWeight:'bolder'}} />\r\n            </FormGroup>\r\n        ):<h5 style={{color:'#3d4465',fontWeight:'bold'}}>Patients</h5>\r\n        }\r\n    </div>;\r\n\r\n\r\n    const handleChangePage = (page) => {\r\n        setCurrentPage(page + 1);\r\n    };\r\n    const localization = {\r\n        pagination: {\r\n            labelDisplayedRows: `Page: ${currentPage}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <MaterialTable\r\n                tableRef={tableRef}\r\n                /*onSearchChange={(e) => {\r\n                    handleSearchChange(e);\r\n                }}*/\r\n                icons={tableIcons}\r\n                title={<PPISelect/>}\r\n                columns={[\r\n                    {\r\n                        title: \"Name\",\r\n                        field: \"name\",\r\n                        filtering: false,\r\n                        hidden:enablePPI\r\n                    },\r\n                    { title: \"Hosp. Number\", field: \"id\" , filtering: false},\r\n                    { title: \"Sex\", field: \"sex\", filtering: false },\r\n                    { title: \"Date Of Birth\", field: \"dateOfBirth\", filtering: false },\r\n                    { title: \"Age\", field: \"age\", filtering: false },\r\n                    /*{ title: \"Address\", field: \"address\", filtering: false },*/\r\n                    /*{ title: \"Status\", field: \"status\", filtering: false },*/\r\n                    {title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={loading}\r\n                data={handleRemoteData}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                        fontSize:'16px',\r\n                        padding:'10px',\r\n                        fontWeight:'bolder'\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '50%'\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400,\r\n\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                //localization={localization}\r\n\r\n            />\r\n            <Modal isOpen={modal} toggle={onCancelDelete}>\r\n                <ModalHeader toggle={onCancelDelete}>Delete Patient</ModalHeader>\r\n                <ModalBody>\r\n                    Are you sure to delete this record? { patient ? patient.surname +  ', ' + patient.firstname +  ' ' + patient.otherName : '' }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" type=\"button\" onClick={(e) => onDelete(patient.id)}>Yes</Button>{' '}\r\n                    <Button color=\"secondary\" type=\"button\" onClick={(e) => onCancelDelete()}>No</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckedInPatients;\r\n\r\n\r\n","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\CaptureBiometric.js",["370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    //Get the default device\r\n    const selectedDevice=biometricDevices.find((x)=> x.active ===\"true\" )\r\n    console.log(biometricDevices)\r\n    checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     //console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           // .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n            .get(`${checkUrl}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            // axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            axios.post(`${checkUrl}`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    //onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                    disabled\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name} >\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\MigrationDQA\\index.js",["386","387","388","389"],"import React, {useEffect, useState} from 'react';\r\nimport {Tab} from \"semantic-ui-react\";\r\nimport PatientList from \"../Home/PatientList\";\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport DuplicateHospitalNumbers from \"./DuplicateHospitalNumbers\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../../api\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FaUserPlus} from \"react-icons/fa\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        '& a':{\r\n            textDecoration:'none !important'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\nfunction Index(props) {\r\n    const classes = useStyles();\r\n    const [permissions, setPermissions] = useState([]);\r\n    useEffect(() => {\r\n        userPermission();\r\n    }, []);\r\n    //Get list of Finger index\r\n    const userPermission =()=>{\r\n        axios\r\n            .get(`${baseUrl}account`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setPermissions(response.data.permissions);\r\n\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    const panes = [\r\n        { menuItem: 'Duplicate Hospital Numbers', render: () =>\r\n                <Tab.Pane>\r\n                    <DuplicateHospitalNumbers permissions={permissions}/>\r\n                </Tab.Pane>\r\n        }\r\n    ];\r\n    return (\r\n        <div className={classes.root}>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n                <Tab panes={panes} />\r\n            ):\"\"\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index;","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\PersonDemographics\\index.js",["390","391","392","393","394","395","396","397","398"],"import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../../api\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Accordion, AccordionDetails, AccordionSummary} from \"@material-ui/core\";\r\nimport {Col, Row} from \"reactstrap\";\r\nimport {Label} from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    icon: {\r\n        verticalAlign: 'bottom',\r\n        height: 20,\r\n        width: 20,\r\n    },\r\n    details: {\r\n        alignItems: 'center',\r\n    },\r\n    column: {\r\n        flexBasis: '20.33%',\r\n    },\r\n    helper: {\r\n        borderLeft: `2px solid ${theme.palette.divider}`,\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\r\n    },\r\n    link: {\r\n        color: theme.palette.primary.main,\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n        },\r\n    },\r\n});\r\nfunction Index(props) {\r\n    const { classes } = props;\r\n    const patientObj = props.patientObj ? props.patientObj : {};\r\n    const permissions= props.permissions ? props.permissions : [];\r\n    const [modal, setModal] = useState(false) //Modal to collect sample\r\n    const [patientBiometricStatus, setPatientBiometricStatus]= useState(props.patientBiometricStatus);\r\n    const toggleModal = () => setModal(!modal)\r\n\r\n    const [biometricStatus, setBiometricStatus] = useState(false);\r\n    const [devices, setDevices] = useState([]);\r\n    useEffect(() => {\r\n        setPatientBiometricStatus(props.patientBiometricStatus)\r\n        TemplateType();\r\n    }, [props.patientBiometricStatus]);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setBiometricStatus(response.data);\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    const calculate_age = dob => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getPhone = (contactPoint) => {\r\n        const phoneContact = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n        return phoneContact ? phoneContact.value : '';\r\n    };\r\n\r\n    const getAddress = (address) => {\r\n        const city = address && address.address && address.address.length > 0 ? `${address.address[0].line[0]}, ${address.address[0].city}` : null;\r\n        return city;\r\n    };\r\n\r\n\r\n    const handleBiometricCapture = (id) => {\r\n        let patientObjID= id\r\n        setModal(!modal)\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <Accordion defaultExpanded>\r\n                <AccordionSummary>\r\n\r\n                    <Row>\r\n                        <Col md={11}>\r\n                            <Row className={\"mt-1\"}>\r\n                                <Col md={12} className={classes.root2} >\r\n                                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                                        {patientObj.surname + \", \" + patientObj.firstName}\r\n                                    </b>\r\n\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                    <span style={{color:'#000'}}>\r\n                                        {\" \"}\r\n                                        Hospital Number : <b style={{color:'#0B72AA'}}>{getHospitalNumber(patientObj.identifier) }</b>\r\n                                    </span>\r\n                                </Col>\r\n\r\n                                <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                    <span style={{color:'#000'}}>\r\n                                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dateOfBirth }</b>\r\n                                    </span>\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span style={{color:'#000'}}>\r\n                                    {\" \"}\r\n                                    Age : <b style={{color:'#0B72AA'}}>{calculate_age(patientObj.dateOfBirth) }</b>\r\n                                </span>\r\n                                </Col>\r\n                                <Col md={4} style={{marginTop:\"10px\"}}>\r\n                                    <span  style={{color:'#000'}}>\r\n                                        {\" \"}\r\n                                        Sex :{\" \"}\r\n                                        <b style={{color:'#0B72AA',fontFamily:`'poppins', sans-serif`,fontWeight:'bolder'}}>{patientObj.sex }</b>\r\n                                    </span>\r\n\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span style={{color:'#000'}}>\r\n                                    {\" \"}\r\n                                    Phone Number : <b style={{color:'#0B72AA'}}>{getPhone(patientObj.contactPoint)}</b>\r\n                                </span>\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span style={{color:'#000'}}>\r\n                                    {\" \"}\r\n                                    Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)} </b>\r\n                                </span>\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n                        </Col>\r\n\r\n\r\n\r\n                    </Row>\r\n\r\n                </AccordionSummary>\r\n                <AccordionDetails className={classes.details}>\r\n                    {biometricStatus===true ? (\r\n                            <>\r\n                                <div >\r\n                                    <Typography variant=\"caption\">\r\n                                        <Label  style={{height:'30px', fontSize:'14px'}} color={patientBiometricStatus===true? \"green\" : \"red\"} size={\"large\"}>\r\n                                            Biometrics {patientBiometricStatus===true? \"Captured\" : \"Not Captured\"}\r\n                                        </Label>\r\n                                    </Typography>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div >\r\n                                <Typography variant=\"caption\">\r\n                                    <Label color={\"red\"} style={{height:'30px', fontSize:'14px'}}>\r\n                                        Biometrics Module Not Install\r\n\r\n                                    </Label>\r\n\r\n                                </Typography>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            {/*\r\n            <CaptureBiometric  modalstatus={modal} togglestatus={toggleModal} patientId={patientObj.id} biometricDevices={devices} setPatientBiometricStatus={setPatientBiometricStatus} />\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nIndex.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Index);","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\ClientDashboard\\CheckIn\\index.js",["399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421"],"import React, {useCallback, useEffect, useState} from 'react';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport {TiArrowBack} from \"react-icons/ti\";\r\nimport {Button, Grid, MenuItem, Paper, TextField} from \"@mui/material\";\r\nimport {Modal, ModalBody, ModalHeader} from \"reactstrap\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport {LocalizationProvider} from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport {AdapterDateFns} from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport {Label} from \"semantic-ui-react\";\r\nimport {DesktopDateTimePicker} from \"@mui/x-date-pickers/DesktopDateTimePicker\";\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../../../api\";\r\nimport {toast} from \"react-toastify\";\r\nimport _ from \"lodash\";\r\nimport Swal from \"sweetalert2\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {format} from \"date-fns\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport moment from \"moment\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        marginBottom: 20,\r\n        flexGrow: 1,\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    icon: {\r\n        verticalAlign: 'bottom',\r\n        height: 20,\r\n        width: 20,\r\n    },\r\n    details: {\r\n        alignItems: 'center',\r\n    },\r\n    column: {\r\n        flexBasis: '20.33%',\r\n    },\r\n    helper: {\r\n        borderLeft: `2px solid ${theme.palette.divider}`,\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\r\n    },\r\n    link: {\r\n        color: theme.palette.primary.main,\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n        },\r\n    },\r\n    checkinModal:{\r\n        \"& .modal-dialog\":{\r\n            maxWidth:\"1000px\"\r\n        },\r\n        \"& .ui.label\":{\r\n            backgroundColor:\"#fff\",\r\n            fontSize:'16px',\r\n            color:'#014d88',\r\n            fontWeight:'bold',\r\n            textAlign:'left'\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    checkInDatePicker:{\r\n        '& .MuiFormControl-root.MuiTextField-root':{\r\n            border:'1px solid #eee'\r\n        }\r\n    }\r\n}));\r\nlet newDate = new Date()\r\nfunction Index(props) {\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const [loading, setLoading] = useState('');\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [checkInDate,setCheckInDate]=useState(new Date());\r\n    const [checkOutDate,setCheckOutDate]=useState(new Date());\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {};\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const { handleSubmit, control } = useForm();\r\n    const [modal, setModal] = useState(false);\r\n    const [allServices, setAllServices] = useState(null);\r\n    const [checkinStatus, setCheckinStatus]= useState(false)\r\n    const [modalCheckOut, setModalCheckOut] = useState(false);\r\n    const [services, setServices]= useState([]);\r\n    const [selectedServices, setSelectedServices]= useState({\"selected\":[]});\r\n    const [patientVisits, setPatientVisits]= useState([]);\r\n    const [patientBiometricStatus, setPatientBiometricStatus]= useState(patientObj.biometricStatus);\r\n    const [biometricsModuleInstalled,setBiometricsModuleInstalled]=useState(false);\r\n\r\n    const [checkOutObj, setCheckOutObj] = useState({\r\n        personId: \"\",\r\n        visitStartDate:format(new Date(newDate), 'yyyy-MM-dd hh:mm')\r\n    })\r\n    const [checkInObj, setCheckInObj] = useState({\r\n        serviceIds:\"\",\r\n        visitDto: {\r\n            personId: patientObj.id,\r\n            checkInDate: format(new Date(newDate), 'yyyy-MM-dd hh:mm')\r\n        }\r\n    })\r\n    const loadServices = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/post-service`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            //setServices(response.data);\r\n            setAllServices(response.data);\r\n            setServices(\r\n                Object.entries(response.data).map(([key, value]) => ({\r\n                    label: value.moduleServiceName,\r\n                    value: value.moduleServiceCode,\r\n                }))\r\n            );\r\n            /*            setSelectedServices(\r\n                            _.uniq(_.map(userDetail.applicationUserOrganisationUnits, 'organisationUnitName'))\r\n                        )*/\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred fetching services!',\r\n            });\r\n        }\r\n    }, []);\r\n    const loadPatientVisits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/visit/visit-by-patient/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setPatientVisits(response.data);\r\n            response.data.map((visits)=> {\r\n                if(visits.checkOutDate===null){\r\n                    setCheckinStatus(true)\r\n                }\r\n            })\r\n\r\n\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred fetching services!',\r\n            });\r\n        }\r\n    }, []);\r\n    let visitTypesRows = null;\r\n    if (services && services.length > 0) {\r\n        visitTypesRows = services.map((service, index) => (\r\n            <MenuItem key={service.moduleServiceCode} value={service.moduleServiceCode}>{service.moduleServiceName}</MenuItem>\r\n        ));\r\n    }\r\n\r\n    const onChangeDate = (date) => {\r\n        console.log(date.target.value)\r\n        const newDate = moment(new Date(date.target.value)).format(\"yyyy-MM-dd hh:mm\");\r\n        setCheckInDate(newDate);\r\n        console.log(newDate);\r\n    };\r\n    const handleCheckIn = () => {\r\n        setModal(true);\r\n    };\r\n    const handleCheckOut = () => {\r\n        setModalCheckOut(true);\r\n    };\r\n\r\n    const onCancelCheckIn = () => {\r\n        setModal(false);\r\n    };\r\n    const onCancelCheckOut = () => {\r\n        setModalCheckOut(false);\r\n    };\r\n    const onDelete = () => {\r\n\r\n    };\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            const today = new Date();\r\n            const visitDetails = await axios.get(`${baseUrl}patient/visit/visit-detail/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            const visitDetail = visitDetails.data;\r\n            const pendingVisit = visitDetail.find(obj => obj.status == \"PENDING\");\r\n            let visit = null;\r\n            if (!pendingVisit) {\r\n                const visitResponse = await axios.post(`${baseUrl}patient/visit`, {\r\n                    \"personId\": patientObj.id,\r\n                    \"visitStartDate\": today\r\n                }, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                visit = visitResponse.data;\r\n            } else {\r\n                visit = pendingVisit;\r\n            }\r\n            await axios.post(`${baseUrl}patient/encounter`, {\r\n                \"encounterDate\": today,\r\n                \"personId\": patientObj.id,\r\n                \"serviceCode\": data.VisitType,\r\n                \"status\": \"PENDING\",\r\n                \"visitId\": visit.id\r\n            }, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setModal(false);\r\n            await Swal.fire({\r\n                icon: 'success',\r\n                text: 'CheckedIn successfully',\r\n                timer: 1500\r\n            });\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred while checking in Patient!',\r\n            });\r\n        }\r\n    };\r\n    const onError = async () => {\r\n        await Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'An error occurred while checking in Patient!',\r\n        });\r\n    };\r\n    let checkInServicesID = [];\r\n    /**** Submit Button For CheckIN  */\r\n    const handleSubmitCheckIn = (e) => {\r\n        e.preventDefault();\r\n        //Check if selected service object is empty before creating visit and posting.\r\n        let m = moment(checkInDate, \"yyyy-MM-DD hh:mm\").format('yyyy-MM-DD H:mm');\r\n        if(selectedServices.selected.length > 0 && moment(m).isValid()){\r\n            selectedServices.selected.length > 0 && selectedServices.selected.map((service)=> {\r\n                checkInServicesID.push(_.find(allServices,{moduleServiceCode:service}).id)\r\n            });\r\n\r\n            checkInObj.serviceIds= checkInServicesID\r\n            //Ensure date time is in 24hr format\r\n            checkInObj.visitDto.checkInDate = moment(checkInDate, \"yyyy-MM-DD hh:mm\").format('yyyy-MM-DD HH:mm');\r\n            axios.post(`${baseUrl}patient/visit/checkin`, checkInObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Patient Check-In successful\");\r\n                    setCheckinStatus(true)\r\n                    onCancelCheckIn()\r\n                    loadPatientVisits()\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    toast.error(\"Something went wrong\");\r\n                    onCancelCheckIn()\r\n                });\r\n        }else{\r\n            toast.error(\"Kindly check the form for a valid date and selected services\");\r\n        }\r\n\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmitCheckOut = (e) => {\r\n        e.preventDefault();\r\n        const getVisitID= patientVisits.find((visits)=> visits.status==='PENDING')\r\n\r\n        axios.put(`${baseUrl}patient/visit/checkout/${getVisitID.id}`,getVisitID.id,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n        )\r\n            .then(response => {\r\n                toast.success(\"Record save successful\");\r\n                setCheckinStatus(false)\r\n                onCancelCheckOut()\r\n                loadPatientVisits()\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                toast.error(\"Something went wrong\");\r\n                onCancelCheckOut()\r\n            });\r\n    }\r\n    const onServiceSelect = (selectedValues) => {\r\n        setSelectedServices({\"selected\":selectedValues});\r\n    };\r\n    useEffect(() => {\r\n        loadServices();\r\n        loadPatientVisits();\r\n    }, [loadServices, loadPatientVisits]);\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"mb-3 col-md-3\">\r\n                    &nbsp;\r\n                </div>\r\n                <div className=\"mb-3 col-md-3\">\r\n                    &nbsp;\r\n                </div>\r\n                <div className=\"mb-3 col-md-3\">\r\n                    &nbsp;\r\n                </div>\r\n                <div className=\"mb-3 col-md-3\">\r\n                    <Link to={\"/\"} >\r\n                        <MatButton\r\n                            className=\" float-right mr-1\"\r\n                            variant=\"contained\"\r\n                            floated=\"left\"\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </MatButton>\r\n                    </Link>\r\n\r\n                    {permissions.includes('patient_check_in') || permissions.includes(\"all_permission\") ? (\r\n                            <>\r\n                                {checkinStatus===false ? (\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            style={{ backgroundColor: \"rgb(4, 196, 217)\", fontSize:'14PX', fontWeight:'bold', height:'35px' }}\r\n                                            onClick={handleCheckIn}\r\n                                            className=\" float-right mr-1\"\r\n                                        >\r\n                                            <span style={{ textTransform: \"capitalize\" }}>CheckIn</span>\r\n                                        </Button>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </>\r\n                        )\r\n                        :\"\"\r\n                    }\r\n                    {checkinStatus===true ? (\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                style={{ backgroundColor: \"green\", fontSize:'14PX', fontWeight:'bold', height:'35px' }}\r\n                                onClick={handleCheckOut}\r\n                                className=\" float-right mr-1\"\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Check Out</span>\r\n                            </Button>\r\n                        )\r\n                        :\r\n                        \"\"\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n            <Modal  size=\"lg\" style={{maxWidth: '900px'}} isOpen={modal} toggle={onCancelCheckIn}  className={classes.checkinModal}>\r\n                <ModalHeader toggle={onCancelCheckIn}><h5 style={{fontWeight:\"bold\",fontSize:'30px',color:'#992E62'}}>Select Check-In Service</h5></ModalHeader>\r\n                <ModalBody>\r\n                    <form onSubmit={handleSubmitCheckIn}>\r\n                        <Paper\r\n                            style={{\r\n                                display: \"grid\",\r\n                                gridRowGap: \"20px\",\r\n                                padding: \"20px\",\r\n                                margin: \"10px 10px\",\r\n                            }}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <FormGroup style={{width:'100%'}} className={classes.checkInDatePicker}>\r\n                                        <LocalizationProvider dateAdapter={AdapterDateFns} >\r\n                                            <Label for=\"post-services\" style={{color:'#014d88',fontWeight:'bolder',fontSize:'18px'}}>Check-In Date *</Label>\r\n                                            <DesktopDateTimePicker\r\n                                                renderInput={(params) =>\r\n                                                    <TextField\r\n                                                        {...params}\r\n\r\n                                                        sx={{\r\n                                                            /*label:{ color:'#014d88',fontWeight:'bolder',fontSize:'18px' }*/\r\n                                                            input:{fontSize:'14px'},\r\n                                                        }}\r\n                                                        fullWidth\r\n                                                    />\r\n                                                }\r\n                                                value={checkInDate}\r\n                                                onChange={(newValue) => {\r\n                                                    setCheckInDate(newValue);\r\n                                                }}\r\n                                                maxDate={new Date()}\r\n                                                maxTime={new Date()}\r\n                                                style={{width:'100%'}}\r\n                                            />\r\n                                        </LocalizationProvider>\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                {/*                                <Grid item xs={8}>\r\n\r\n                                    <FormControl >\r\n                                        <Label for=\"dateOfRegistration\">Select service </Label>\r\n                                        <Autocomplete\r\n                                            multiple\r\n                                            id=\"checkboxes-tags-demo\"\r\n                                            options={services}\r\n                                            //disableCloseOnSelect\r\n                                            getOptionLabel={(option) => option.moduleServiceName}\r\n                                            onChange={(e, i) => {\r\n                                                console.log(i)\r\n                                                setSelectedServices({ ...selectedServices, checkInServices: i });\r\n                                            }}\r\n                                            renderOption={(props, option, { selected }) => (\r\n                                                <li {...props}>\r\n                                                    <Checkbox\r\n                                                        icon={icon}\r\n                                                        checkedIcon={checkedIcon}\r\n                                                        style={{ marginRight: 8 }}\r\n                                                        checked={selected}\r\n                                                    />\r\n                                                    {option.moduleServiceName}\r\n                                                </li>\r\n                                            )}\r\n                                            style={{ width: 400 }}\r\n                                            renderInput={(params) => (\r\n                                                <TextField {...params} label=\"Services\" />\r\n                                            )}\r\n                                        />\r\n\r\n                                    </FormControl>\r\n                                </Grid>*/}\r\n                                <Grid item xs={12}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"post-services\" style={{color:'#014d88',fontWeight:'bolder',fontSize:'18px'}}><h5 style={{fontWeight:\"bold\",fontSize:'30px',color:'#992E62'}}>Check-In Service *</h5></Label>\r\n                                        <DualListBox\r\n                                            options={services}\r\n                                            onChange={onServiceSelect}\r\n                                            selected={selectedServices.selected}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Button type={\"submit\"} variant=\"contained\" color={\"primary\"}>Submit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </form>\r\n                </ModalBody>\r\n            </Modal>\r\n            {/* Modal for CheckOut Patient */}\r\n            <Modal isOpen={modalCheckOut} toggle={onCancelCheckOut} className={classes.checkinModal} style={{maxWidth: '900px',height:\"800px\"}}>\r\n                <ModalHeader toggle={onCancelCheckOut}><h5 style={{fontWeight:\"bold\",fontSize:'30px',color:'#014d88'}}>Check Out </h5></ModalHeader>\r\n                <ModalBody>\r\n                    <form >\r\n                        <Paper\r\n                            style={{\r\n                                display: \"grid\",\r\n                                gridRowGap: \"20px\",\r\n                                padding: \"20px\",\r\n                                margin: \"10px 10px\",\r\n                            }}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <h5 style={{color:'#992E62',fontSize:\"20px\", fontWeight:'bold'}}>Are you sure you want to check-out patient?</h5>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <FormGroup style={{width:'100%'}} className={classes.checkInDatePicker}>\r\n                                        <LocalizationProvider dateAdapter={AdapterDateFns} >\r\n                                            <Label for=\"post-services\" style={{color:'#014d88',fontWeight:'bolder',fontSize:'16px'}}>Check-Out Date *</Label>\r\n                                            <DesktopDateTimePicker\r\n                                                renderInput={(params) =>\r\n                                                    <TextField\r\n                                                        {...params}\r\n\r\n                                                        sx={{\r\n                                                            /*label:{ color:'#014d88',fontWeight:'bolder',fontSize:'18px' }*/\r\n                                                            input:{fontSize:'14px'},\r\n                                                        }}\r\n                                                        fullWidth\r\n                                                    />\r\n                                                }\r\n                                                value={checkOutDate}\r\n                                                onChange={(newValue) => {\r\n                                                    setCheckOutDate(newValue);\r\n                                                }}\r\n                                                maxDate={new Date()}\r\n                                                maxTime={new Date()}\r\n                                                style={{width:'100%'}}\r\n                                            />\r\n                                        </LocalizationProvider>\r\n                                    </FormGroup>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Button type={\"submit\"} onClick={handleSubmitCheckOut} variant=\"contained\" color={\"primary\"}>Yes</Button>\r\n                                    <Button  onClick={onCancelCheckOut} variant=\"contained\" style={{backgroundColor:'#992E62',color:\"#fff\",marginLeft:\"10px\"}}>Cancel</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </form>\r\n                </ModalBody>\r\n            </Modal>\r\n            {/* End of Checkout Modal */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Index;","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\MigrationDQA\\DuplicateHospitalNumbers.js",["422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450"],"import React, {forwardRef, useCallback, useEffect, useRef, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../../api\";\r\nimport MaterialTable from \"material-table\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport {FaEye} from \"react-icons/fa\";\r\nimport {MdDeleteForever, MdModeEdit, MdPerson} from \"react-icons/md\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SplitActionButton from \"../SplitActionButton\";\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        '& a':{\r\n            textDecoration:'none !important'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\nfunction DuplicateHospitalNumbers(props) {\r\n    const tableRef = useRef(null);\r\n    const classes = useStyles();\r\n    const [patients, setPatients] = useState([]);\r\n    const [permissions, setPermissions] = useState(props.permissions);\r\n    const [loading, setLoading] = useState('');\r\n    const [modal, setModal] = useState(false);\r\n    const [patient, setPatient] = useState(false);\r\n    const [enablePPI, setEnablePPI] = useState(true);\r\n    const [searchParams,setSearchParams] = useState('*');\r\n    const [totalPages,setTotalPages] = useState(0);\r\n    const [totalRecords,setTotalRecords] = useState(0);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [currentPage,setCurrentPage] = useState(1);\r\n    const toggle = (id) => {\r\n        const patient = patients.find(obj => obj.id == id);\r\n        setPatient(patient);\r\n        setModal(!modal);\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        axios\r\n            .delete(`${baseUrl}patient/delete/${id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                Swal.fire({\r\n                      icon: 'success',\r\n                      text: 'DQA Deleted Successfully',\r\n                      timer: 1500\r\n                 });\r\n            })\r\n            .catch((error) => {\r\n                 Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'An error occurred while deleting!!!',\r\n                });\r\n            });\r\n    }\r\n\r\n    function actionItems(row){\r\n        return  [\r\n            {\r\n                name:'View',\r\n                type:'link',\r\n                icon:<FaEye  size=\"22\"/>,\r\n                to:{\r\n                    pathname: \"/register-patient\",\r\n                    state: { patientId : row.id, permissions:permissions  }\r\n                }\r\n            },\r\n            {...(permissions.includes('edit_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Edit',\r\n                        type:'link',\r\n                        icon:<MdModeEdit size=\"20\" color='rgb(4, 196, 217)' />,\r\n                        to:{\r\n                            pathname: \"/register-patient\",\r\n                            state: { patientId : row.id, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )},\r\n             {...(permissions.includes('delete_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Delete',\r\n                        type:'link',\r\n                        icon:<MdDeleteForever size=\"20\" color='rgb(4, 196, 217)'  />,\r\n                        deleteAction: () => {handleDelete(row.id)},\r\n                        to:{\r\n                            pathname: \"/#\",\r\n                            state: { patientObj: row, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )}\r\n        ]\r\n    }\r\n    const handleRemoteData = query =>\r\n        new Promise((resolve, reject) => {\r\n            axios.get(`${baseUrl}patient/get-duplicate-hospital_numbers?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                .then(response => response)\r\n                .then(result => {\r\n                  if (result.data === \"\") {\r\n                    resolve({\r\n                      data: [],\r\n                      page: 0,\r\n                      totalCount: 0,\r\n                    });\r\n                  } else {\r\n                      resolve({\r\n                        data: result.data.records.map((row) => ({\r\n                            name: [row.firstName, row.otherName, row.surname].filter(Boolean).join(\", \"),\r\n                            id: getHospitalNumber(row.identifier),\r\n                            sex: row.sex,\r\n                            dateOfBirth: row.dateOfBirth,\r\n                            status:row.archived == 1?'Archived':\"Active\",\r\n                            age: (row.dateOfBirth === 0 ||\r\n                                row.dateOfBirth === undefined ||\r\n                                row.dateOfBirth === null ||\r\n                                row.dateOfBirth === \"\" )\r\n                                ? 0\r\n                                : calculate_age(row.dateOfBirth),\r\n                            actions:\r\n                                <div>\r\n                                    {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n                                        <SplitActionButton actions={actionItems(row)} />\r\n                                    ):\"\"\r\n                                    }\r\n                                </div>\r\n                        })),\r\n                        page: query.page,\r\n                        totalCount: result.data.totalRecords\r\n                    });\r\n                  }\r\n                });\r\n        })\r\n\r\n\r\n    const onDelete = async (id) => {\r\n        try {\r\n            if (id) {\r\n                const response = await axios.delete(`${baseUrl}patient/${id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                window.location.reload();\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const onCancelDelete = () => {\r\n        setModal(false);\r\n    }\r\n\r\n    const calculate_age = dob => {\r\n\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    const getAddress = (address) => {\r\n        const city = address && address.address && address.address.length > 0 ? address.address[0].city : null;\r\n        return city;\r\n    };\r\n\r\n    const getGender = (gender) => {\r\n        return gender.display;\r\n    };\r\n\r\n\r\n\r\n    const enablePPIColumns = () =>{\r\n        setEnablePPI(!enablePPI)\r\n    }\r\n    const PPISelect = () => <div>\r\n        {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n            <FormGroup className=\" float-right mr-1\">\r\n                <FormControlLabel  control={\r\n                    <Checkbox\r\n                        onChange={enablePPIColumns}\r\n                        checked={!enablePPI}\r\n                        style={{color:'#014d88',fontWeight:'bold'}}\r\n                    />\r\n                } label=\"Show PII\" style={{color:'#014d88',fontWeight:'bolder'}} />\r\n            </FormGroup>\r\n        ):<h5 style={{color:'#3d4465',fontWeight:'bold'}}>Patients</h5>\r\n        }\r\n    </div>;\r\n\r\n\r\n    const handleChangePage = (page) => {\r\n        setCurrentPage(page + 1);\r\n    };\r\n    const localization = {\r\n        pagination: {\r\n            labelDisplayedRows: `Page: ${currentPage}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <MaterialTable\r\n                tableRef={tableRef}\r\n                /*onSearchChange={(e) => {\r\n                    handleSearchChange(e);\r\n                }}*/\r\n                icons={tableIcons}\r\n                title={<PPISelect/>}\r\n                columns={[\r\n                    {\r\n                        title: \"Name\",\r\n                        field: \"name\",\r\n                        filtering: false,\r\n                        hidden:enablePPI\r\n                    },\r\n                    { title: \"Hosp. Number\", field: \"id\" , filtering: false},\r\n                    { title: \"Sex\", field: \"sex\", filtering: false },\r\n                    { title: \"Date Of Birth\", field: \"dateOfBirth\", filtering: false },\r\n                    { title: \"Age\", field: \"age\", filtering: false },\r\n                    /*{ title: \"Address\", field: \"address\", filtering: false },*/\r\n                    { title: \"Status\", field: \"status\", filtering: false },\r\n                    {title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={loading}\r\n                data={handleRemoteData}\r\n\r\n                options={{\r\n                    rowStyle: rowData => {\r\n                        if(rowData.status === 'Archived') {\r\n                            return {\r\n                                backgroundColor: '#ceeef5',\r\n                                border:'2px solid #fff'\r\n                            };\r\n                        }\r\n\r\n                        return {border:'2px solid #eee'};\r\n                    },\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                        fontSize:'16px',\r\n                        padding:'10px',\r\n                        fontWeight:'bolder'\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '50%'\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400,\r\n\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                //localization={localization}\r\n\r\n            />\r\n            <Modal isOpen={modal} toggle={onCancelDelete}>\r\n                <ModalHeader toggle={onCancelDelete}>Delete Patient</ModalHeader>\r\n                <ModalBody>\r\n                    Are you sure to delete this record? { patient ? patient.surname +  ', ' + patient.firstname +  ' ' + patient.otherName : '' }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" type=\"button\" onClick={(e) => onDelete(patient.id)}>Yes</Button>{' '}\r\n                    <Button color=\"secondary\" type=\"button\" onClick={(e) => onCancelDelete()}>No</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DuplicateHospitalNumbers;","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\SplitActionButton.js",["451","452","453","454","455","456","457","458"],"import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ContentCut from '@mui/icons-material/ContentCut';\r\nimport Typography from '@mui/material/Typography';\r\nimport {FaEye, FaCaretDown } from \"react-icons/fa\";\r\nimport Divider from '@mui/material/Divider';\r\nimport {useRef} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst options = ['Delete', 'Edit'];\r\n\r\n\r\n\r\nexport default function SplitActionButton(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n    const handleClick = () => {\r\n        console.info(`You clicked ${options[selectedIndex]}`);\r\n    };\r\n\r\n    const handleMenuItemClick = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup variant=\"contained\" ref={anchorRef} style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'150px'}} >\r\n                <Link to={props.actions[0].to} style={{borderRight:'20px solid #fff !important'}}>\r\n                    <Button size=\"small\" onClick={handleClick} variant=\"contained\" startIcon={props.actions[0].icon} style={{backgroundColor:'rgb(153, 46, 98)'}}>\r\n                        <Typography variant=\"h7\" style={{fontWeight:'bolder'}}>{props.actions[0].name}</Typography>\r\n                    </Button>\r\n                </Link>\r\n\r\n                <Divider orientation=\"vertical\" flexItem style={{borderRight:'20px solid #fff !important', backgroundColor:'#fff',width:'1px', height:'26px',marginTop:'2px'}}>\r\n                    1\r\n                </Divider>\r\n                <Button\r\n                    size=\"medium\"\r\n                    aria-controls={open ? 'split-button-menu' : undefined}\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    aria-label=\"select merge strategy\"\r\n                    aria-haspopup=\"menu\"\r\n                    onClick={handleToggle}\r\n                    style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                >\r\n                    <FaCaretDown size='24' />\r\n                </Button>\r\n            </ButtonGroup>\r\n            <Popper\r\n                open={open}\r\n                anchorEl={anchorRef.current}\r\n                role={undefined}\r\n                transition\r\n                disablePortal\r\n                style={{ zIndex:'10000' }}\r\n            >\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                        {...TransitionProps}\r\n                        style={{\r\n                            transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                            zIndex:'1000'\r\n                        }}\r\n                    >\r\n                        {/*width: 130,*/}\r\n                        <Paper sx={{ minWidth:'130px', maxWidth: '150px', marginTop:'2px', zIndex:'1000' }}>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MenuList id=\"split-button-menu\" autoFocusItem>\r\n                                    {props.actions.slice(1).map((option, index) => (\r\n                                        <MenuItem\r\n                                            key={Math.random()}\r\n                                        >\r\n                                            <Link\r\n                                                to={option.to}\r\n                                                onClick={option.deleteAction}\r\n                                            >\r\n                                                {option.icon}<span style={{color: 'rgb(153, 46, 98)', fontWeight:'bolder', fontSize:'12px'}}>{option.name}</span>\r\n                                            </Link>\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\Home\\Biometrics.js",["459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495"],"import React, {useState, useEffect, useCallback, useRef} from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../../api\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Card,CardBody,} from 'reactstrap';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport {FaEye, FaUserPlus} from \"react-icons/fa\";\r\nimport { MdDashboard, MdDeleteForever, MdModeEdit,MdPerson} from \"react-icons/md\";\r\nimport {Menu,MenuList,MenuButton} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Label } from 'semantic-ui-react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"../patient.css\";\r\nimport SplitActionButton from '../SplitActionButton';\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport BiometricsList from './BiometricsList';\r\nimport NotCaptured from './NotCaptured';\r\n\r\nimport { forwardRef } from 'react';\r\n//import { Button} from \"react-bootstrap\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TablePagination from '@mui/material/TablePagination';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        '& a':{\r\n            textDecoration:'none !important'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst Biometrics = (props) => {\r\n    const tableRef = useRef(null);\r\n    const classes = useStyles();\r\n    const [patients, setPatients] = useState([]);\r\n    const [permissions, setPermissions] = useState(props.permissions);\r\n    const [loading, setLoading] = useState('');\r\n    const [modal, setModal] = useState(false);\r\n    const [patient, setPatient] = useState(false);\r\n    const [enablePPI, setEnablePPI] = useState(true);\r\n    const [searchParams,setSearchParams] = useState('*');\r\n    const [totalPages,setTotalPages] = useState(0);\r\n    const [totalRecords,setTotalRecords] = useState(0);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [currentPage,setCurrentPage] = useState(1);\r\n    const [status, setStatus] = useState(1);\r\n    const toggle = (id) => {\r\n        const patient = patients.find(obj => obj.id == id);\r\n        setPatient(patient);\r\n        setModal(!modal);\r\n    }\r\n\r\n    function actionItems(row){\r\n        return  [\r\n            {\r\n                name:'View',\r\n                type:'link',\r\n                icon:<FaEye  size=\"22\"/>,\r\n                to:{\r\n                    pathname: \"/patient-biometrics\",\r\n                    state: { patientObj: row, permissions:permissions  }\r\n                }\r\n            },\r\n            {...(permissions.includes('view_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Dashboard',\r\n                        type:'link',\r\n                        icon:<MdPerson size=\"20\" color='rgb(4, 196, 217)' />,\r\n                        to:{\r\n                            pathname: \"/patient-biometrics\",\r\n                            state: { patientObj: row, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )},\r\n//            {...(permissions.includes('edit_patient') || permissions.includes(\"all_permission\")&&\r\n//                    {\r\n//                        name:'Edit',\r\n//                        type:'link',\r\n//                        icon:<MdModeEdit size=\"20\" color='rgb(4, 196, 217)' />,\r\n//                        to:{\r\n//                            pathname: \"/register-patient\",\r\n//                            state: { patientId : row.id, permissions:permissions  }\r\n//                        }\r\n//                    }\r\n//                )},\r\n//            {...(permissions.includes('delete_patient') || permissions.includes(\"all_permission\")&&\r\n//                    {\r\n//                        name:'Delete',\r\n//                        type:'link',\r\n//                        icon:<MdDeleteForever size=\"20\" color='rgb(4, 196, 217)'  />,\r\n//                        to:{\r\n//                            pathname: \"/#\",\r\n//                            state: { patientObj: row, permissions:permissions  }\r\n//                        }\r\n//                    }\r\n//                )}\r\n        ]\r\n    }\r\n    const handleRemoteData = query =>\r\n        new Promise((resolve, reject) => {\r\n            axios.get(`${baseUrl}patient/getall-patients-with-biometric?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                .then(response => response)\r\n                .then(result => {\r\n                    resolve({\r\n                        data: result.data.records.map((row) => ({\r\n                            name: [row.firstName, row.otherName, row.surname].filter(Boolean).join(\", \"),\r\n                            id: getHospitalNumber(row.identifier),\r\n                            sex:row.sex.toLowerCase().charAt(0).toUpperCase() + row.sex.slice(1).toLowerCase(),\r\n                            dateOfBirth: row.dateOfBirth,\r\n                            age: (row.dateOfBirth === 0 ||\r\n                                row.dateOfBirth === undefined ||\r\n                                row.dateOfBirth === null ||\r\n                                row.dateOfBirth === \"\" )\r\n                                ? 0\r\n                                : calculate_age(row.dateOfBirth),\r\n                            actions:\r\n                                <div>\r\n                                    {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n                                        <SplitActionButton actions={actionItems(row)} />\r\n                                    ):\"\"\r\n                                    }\r\n                                </div>\r\n                        })),\r\n                        page: query.page,\r\n                        totalCount:result.data.totalRecords\r\n                    });\r\n                });\r\n        })\r\n\r\n\r\n    const onDelete = async (id) => {\r\n        try {\r\n            if (id) {\r\n                const response = await axios.delete(`${baseUrl}patient/${id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                window.location.reload();\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const onCancelDelete = () => {\r\n        setModal(false);\r\n    }\r\n\r\n    const calculate_age = dob => {\r\n\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    const getAddress = (address) => {\r\n        const city = address && address.address && address.address.length > 0 ? address.address[0].city : null;\r\n        return city;\r\n    };\r\n\r\n    const getGender = (gender) => {\r\n        return gender.display;\r\n    };\r\n\r\n\r\n\r\n    const enablePPIColumns = () =>{\r\n        setEnablePPI(!enablePPI)\r\n    }\r\n    const PPISelect = () => <div>\r\n        {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n            <FormGroup className=\" float-right mr-1\">\r\n                <FormControlLabel  control={\r\n                    <Checkbox\r\n                        onChange={enablePPIColumns}\r\n                        checked={!enablePPI}\r\n                        style={{color:'#014d88',fontWeight:'bold'}}\r\n                    />\r\n                } label=\"Show PII\" style={{color:'#014d88',fontWeight:'bolder'}} />\r\n            </FormGroup>\r\n        ):<h5 style={{color:'#3d4465',fontWeight:'bold'}}>Patients</h5>\r\n        }\r\n    </div>;\r\n\r\n\r\n    const handleChangePage = (page) => {\r\n        setCurrentPage(page + 1);\r\n    };\r\n    const localization = {\r\n        pagination: {\r\n            labelDisplayedRows: `${currentPage} - 10 of 2022`\r\n        }\r\n    }\r\n\r\n    const handleChangeStatus = (e) => {\r\n        let count = e.target.value;\r\n        if (count === \"1\") {\r\n            setStatus(1)\r\n        } else if (count === \"2\") {\r\n            setStatus(2)\r\n        }else if (count === \"3\") {\r\n            setStatus(3)\r\n        }else {\r\n            setStatus(1)\r\n        }\r\n       \r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <TextField\r\n                  id=\"biometrics\"\r\n                  select\r\n                  label=\"Select\"\r\n                  defaultValue=\"1\"\r\n                  helperText=\"Select patient biometric status\"\r\n                  onChange={(e) => handleChangeStatus(e)}\r\n                >\r\n                    <MenuItem key=\"1\" value=\"1\">\r\n                     With Biometrics\r\n                    </MenuItem>\r\n                    <MenuItem key=\"2\" value=\"2\">\r\n                     Without Biometrics\r\n                    </MenuItem>\r\n                    <MenuItem key=\"3\" value=\"3\">\r\n                     Not captured\r\n                    </MenuItem>\r\n            </TextField>\r\n            { status === 1 ?\r\n            <>\r\n             <h3>Patients with biometrics</h3>\r\n            <MaterialTable\r\n                tableRef={tableRef}\r\n                /*onSearchChange={(e) => {\r\n                    handleSearchChange(e);\r\n                }}*/\r\n                icons={tableIcons}\r\n                title={<PPISelect/>}\r\n                columns={[\r\n                    {\r\n                        title: \"Name\",\r\n                        field: \"name\",\r\n                        filtering: false,\r\n                        hidden:enablePPI\r\n                    },\r\n                    { title: \"Hosp. Number\", field: \"id\" , filtering: false},\r\n                    { title: \"Sex\", field: \"sex\", filtering: false },\r\n                    { title: \"Date Of Birth\", field: \"dateOfBirth\", filtering: false },\r\n                    { title: \"Age\", field: \"age\", filtering: false },\r\n                    /*{ title: \"Address\", field: \"address\", filtering: false },*/\r\n                    /*{ title: \"Status\", field: \"status\", filtering: false },*/\r\n                    {title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={loading}\r\n                data={handleRemoteData}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                        fontSize:'16px',\r\n                        padding:'10px',\r\n                        fontWeight:'bolder'\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '50%'\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400,\r\n\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                //localization={localization}\r\n\r\n            />\r\n            </>\r\n            : status === 2 ?\r\n            <BiometricsList />\r\n            : status === 3 ?\r\n            <NotCaptured /> : \"\"\r\n            }\r\n\r\n            <Modal isOpen={modal} toggle={onCancelDelete}>\r\n                <ModalHeader toggle={onCancelDelete}>Delete Patient</ModalHeader>\r\n                <ModalBody>\r\n                    Are you sure to delete this record? { patient ? patient.surname +  ', ' + patient.firstname +  ' ' + patient.otherName : '' }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" type=\"button\" onClick={(e) => onDelete(patient.id)}>Yes</Button>{' '}\r\n                    <Button color=\"secondary\" type=\"button\" onClick={(e) => onCancelDelete()}>No</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;\r\n\r\n\r\n","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\biometrics\\index.js",["496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520"],"import React, {useCallback, useEffect, useState} from 'react';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport {TiArrowBack} from \"react-icons/ti\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {Button, Card, CardContent, FormControl, Grid, MenuItem, Paper, TextField, Typography} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../../api\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport PatientCard from \"../PatientCard\";\r\nimport ClientDashboard from \"./index\";\r\nimport PersonDemographics from \"../PersonDemographics\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport {Tab} from \"semantic-ui-react\";\r\nimport MaterialTable from \"material-table\";\r\nimport Biometrics from \"../Biometrics\";\r\nimport moment from \"moment\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        marginBottom: 20,\r\n        flexGrow: 1,\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    icon: {\r\n        verticalAlign: 'bottom',\r\n        height: 20,\r\n        width: 20,\r\n    },\r\n    details: {\r\n        alignItems: 'center',\r\n    },\r\n    column: {\r\n        flexBasis: '20.33%',\r\n    },\r\n    helper: {\r\n        borderLeft: `2px solid ${theme.palette.divider}`,\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\r\n    },\r\n    link: {\r\n        color: theme.palette.primary.main,\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n        },\r\n    },\r\n    checkinModal:{\r\n        \"& .modal-dialog\":{\r\n            maxWidth:\"1000px\"\r\n        },\r\n        \"& .ui.label\":{\r\n            backgroundColor:\"#fff\",\r\n            fontSize:'16px',\r\n            color:'#014d88',\r\n            fontWeight:'bold',\r\n            textAlign:'left'\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    checkInDatePicker:{\r\n        '& .MuiFormControl-root.MuiTextField-root':{\r\n            border:'1px solid #eee'\r\n        }\r\n    }\r\n}));\r\nfunction Index(props) {\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const [loading, setLoading] = useState('');\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {};\r\n    console.log(\"data\",patientObj)\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [patientBiometricStatus, setPatientBiometricStatus]= useState(patientObj.biometricStatus);\r\n    const [biometricsModuleInstalled,setBiometricsModuleInstalled]=useState(false);\r\n    const [patientVisits, setPatientVisits]= useState([]);\r\n    const [checkinStatus, setCheckinStatus]= useState(false)\r\n\r\n    const updatePatientBiometricStatus = (bioStatus) =>{\r\n        setPatientBiometricStatus(bioStatus);\r\n    }\r\n    const panes = [\r\n//        { menuItem: 'Patient Biometric Details', render: () =>\r\n//                <Tab.Pane>\r\n//                    <p>Patient biometric captured finger prints </p>\r\n//                </Tab.Pane>\r\n//        },\r\n\r\n        { menuItem: permissions.includes('view_patient_appointment') && biometricsModuleInstalled || permissions.includes(\"all_permission\")  && biometricsModuleInstalled? 'Biometrics' : \"\", render: () =>\r\n                permissions.includes('view_patient_appointment') || permissions.includes(\"all_permission\") ?\r\n                    <Tab.Pane>\r\n                        <div style={{ minHeight: 400, width: '100%' }}>\r\n                            <Biometrics patientId={patientObj.id} updatePatientBiometricStatus={updatePatientBiometricStatus}/>\r\n                        </div>\r\n                    </Tab.Pane>\r\n                    :\"\"\r\n        }\r\n\r\n\r\n\r\n    ];\r\n    const checkForBiometricsModule =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    setBiometricsModuleInstalled(true);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkForBiometricsModule();\r\n    }, []);\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className=\"mb-6 col-md-6\" style={{paddingTop:\"10px\",paddingBottom:'10px'}} >\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Typography style={{color:'#992E62'}}>Patient</Typography>\r\n                    <Typography style={{color:'#014d88'}}>Dashboard</Typography>\r\n                </Breadcrumbs>\r\n\r\n            </div>\r\n            <Card>\r\n                <CardContent>\r\n                    <PersonDemographics patientObj={patientObj} permissions={permissions} patientBiometricStatus={patientObj.biometricStatus}/>\r\n                    <Card style={{marginTop:'5px'}}>\r\n                       <div>\r\n                            <Link to={\"/\"} >\r\n                                <MatButton\r\n                                    className=\" float-right mr-1\"\r\n                                    variant=\"contained\"\r\n                                    floated=\"left\"\r\n                                    startIcon={<TiArrowBack  />}\r\n                                    style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n                                >\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                                </MatButton>\r\n                            </Link>\r\n                        </div>\r\n                        <CardContent>\r\n                            <Tab panes={panes} />\r\n                        </CardContent>\r\n                    </Card>\r\n                </CardContent>\r\n            </Card>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index;","C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\ViewPatient.js",["521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573"],"C:\\Users\\victor.ajor\\projects\\patient-module\\src\\main\\webapp\\components\\Home\\NotCaptured.js",["574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594"],"//List of patients without biometrics\r\nimport React, {forwardRef, useCallback, useEffect, useState} from 'react';\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport MaterialTable from \"material-table\";\r\nimport SplitActionButton from \"../SplitActionButton\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../../api\";\r\nimport {FaEye} from \"react-icons/fa\";\r\nimport {MdDeleteForever, MdModeEdit, MdPerson} from \"react-icons/md\";\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        '& a':{\r\n            textDecoration:'none !important'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nfunction NotCaptured(props) {\r\n    const classes = useStyles();\r\n    const [patients, setPatients] = useState([]);\r\n    const [permissions, setPermissions] = useState([]);\r\n    const [loading, setLoading] = useState('');\r\n    const [patient, setPatient] = useState(false);\r\n    const [enablePPI, setEnablePPI] = useState(true);\r\n    const [currentPage,setCurrentPage] = useState(1);\r\n\r\n\r\n    //Get list of Finger index\r\n    const userPermission =()=>{\r\n        axios\r\n            .get(`${baseUrl}account`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setPermissions(response.data.permissions);\r\n\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    const loadPatients = useCallback(async () => {\r\n        try {\r\n            await axios.get(`${baseUrl}patient/getall-patients-with-no-biometric`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                .then((response)=>{\r\n                    if(response.data){\r\n                        setPatients(response.data);\r\n                    }\r\n                })\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n    function actionItems(row){\r\n        return  [\r\n            {\r\n                name:'View',\r\n                type:'link',\r\n                icon:<FaEye  size=\"22\"/>,\r\n                to:{\r\n                    pathname: \"/register-patient\",\r\n                    state: { patientId : row.id, permissions:permissions  }\r\n                }\r\n            },\r\n            {...(permissions.includes('view_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Dashboard',\r\n                        type:'link',\r\n                        icon:<MdPerson size=\"20\" color='rgb(4, 196, 217)' />,\r\n                        to:{\r\n                            pathname: \"/patient-dashboard\",\r\n                            state: { patientObj: row, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )},\r\n            {...(permissions.includes('edit_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Edit',\r\n                        type:'link',\r\n                        icon:<MdModeEdit size=\"20\" color='rgb(4, 196, 217)' />,\r\n                        to:{\r\n                            pathname: \"/register-patient\",\r\n                            state: { patientId : row.id, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )},\r\n            {...(permissions.includes('delete_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Delete',\r\n                        type:'link',\r\n                        icon:<MdDeleteForever size=\"20\" color='rgb(4, 196, 217)'  />,\r\n                        to:{\r\n                            pathname: \"/#\",\r\n                            state: { patientObj: row, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )}\r\n        ]\r\n    }\r\n\r\n    const handleRemoteData = query =>\r\n        new Promise((resolve, reject) => {\r\n            axios.get(`${baseUrl}patient/getall-patients-with-no-biometric?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                .then(response => response)\r\n                .then(result => {\r\n                    resolve({\r\n                        data: result.data.records.map((row) => ({\r\n                            name: [row.firstName, row.otherName, row.surname].filter(Boolean).join(\", \"),\r\n                            id: getHospitalNumber(row.identifier),\r\n                            sex: row.sex.toLowerCase().charAt(0).toUpperCase() + row.sex.slice(1).toLowerCase(),\r\n                            dateOfBirth: row.dateOfBirth,\r\n                            age: (row.dateOfBirth === 0 ||\r\n                                row.dateOfBirth === undefined ||\r\n                                row.dateOfBirth === null ||\r\n                                row.dateOfBirth === \"\" )\r\n                                ? 0\r\n                                : calculate_age(row.dateOfBirth),\r\n                            actions:\r\n                                <div>\r\n                                    {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n                                        <SplitActionButton actions={actionItems(row)} />\r\n                                    ):\"\"\r\n                                    }\r\n                                </div>\r\n                        })),\r\n                        page: query.page,\r\n                        totalCount: result.data.totalRecords\r\n                    });\r\n                });\r\n        })\r\n    useEffect(() => {\r\n        userPermission();\r\n        loadPatients();\r\n    }, []);\r\n    const calculate_age = dob => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n\r\n    \r\n    const enablePPIColumns = () =>{\r\n        setEnablePPI(!enablePPI)\r\n    }\r\n    const PPISelect = () => <div>\r\n        {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n            <FormGroup className=\" float-right mr-1\">\r\n                <FormControlLabel  control={\r\n                    <Checkbox\r\n                        onChange={enablePPIColumns}\r\n                        checked={!enablePPI}\r\n                        style={{color:'#014d88',fontWeight:'bold'}}\r\n                    />\r\n                } label=\"Show PII\" style={{color:'#014d88',fontWeight:'bolder'}} />\r\n            </FormGroup>\r\n        ):<h5 style={{color:'#3d4465',fontWeight:'bold'}}>Patients</h5>\r\n        }\r\n    </div>;\r\n    const handleChangePage = (page) => {\r\n        setCurrentPage(page + 1);\r\n    };\r\n    const localization = {\r\n        pagination: {\r\n            labelDisplayedRows: `Page: ${currentPage}`\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {/*<ToastContainer autoClose={3000} hideProgressBar />*/}\r\n            <h3>Patients not captured</h3>\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title={<PPISelect/>}\r\n                columns={[\r\n                    {\r\n                        title: \"Name\",\r\n                        field: \"name\",\r\n                        filtering: false,\r\n                        hidden:enablePPI\r\n                    },\r\n                    { title: \"Hosp. Number\", field: \"id\" , filtering: false},\r\n                    { title: \"Sex\", field: \"sex\", filtering: false },\r\n                    { title: \"Date Of Birth\", field: \"dateOfBirth\", filtering: false },\r\n                    { title: \"Age\", field: \"age\", filtering: false }\r\n                ]}\r\n                isLoading={loading}\r\n                data={handleRemoteData}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                        fontSize:'16px',\r\n                        padding:'10px',\r\n                        fontWeight:'bolder'\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '50%'\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400,\r\n\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                //localization={localization}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotCaptured;",{"ruleId":"595","replacedBy":"596"},{"ruleId":"597","replacedBy":"598"},{"ruleId":"599","severity":1,"message":"600","line":1,"column":16,"nodeType":"601","messageId":"602","endLine":1,"endColumn":27},{"ruleId":"599","severity":1,"message":"603","line":1,"column":29,"nodeType":"601","messageId":"602","endLine":1,"endColumn":38},{"ruleId":"599","severity":1,"message":"604","line":1,"column":40,"nodeType":"601","messageId":"602","endLine":1,"endColumn":48},{"ruleId":"599","severity":1,"message":"605","line":9,"column":8,"nodeType":"601","messageId":"602","endLine":9,"endColumn":24},{"ruleId":"599","severity":1,"message":"606","line":18,"column":8,"nodeType":"601","messageId":"602","endLine":18,"endColumn":19},{"ruleId":"599","severity":1,"message":"607","line":2,"column":8,"nodeType":"601","messageId":"602","endLine":2,"endColumn":17},{"ruleId":"599","severity":1,"message":"608","line":3,"column":21,"nodeType":"601","messageId":"602","endLine":3,"endColumn":31},{"ruleId":"599","severity":1,"message":"609","line":5,"column":8,"nodeType":"601","messageId":"602","endLine":5,"endColumn":17},{"ruleId":"599","severity":1,"message":"610","line":7,"column":10,"nodeType":"601","messageId":"602","endLine":7,"endColumn":13},{"ruleId":"599","severity":1,"message":"611","line":8,"column":10,"nodeType":"601","messageId":"602","endLine":8,"endColumn":14},{"ruleId":"599","severity":1,"message":"612","line":8,"column":23,"nodeType":"601","messageId":"602","endLine":8,"endColumn":30},{"ruleId":"599","severity":1,"message":"613","line":8,"column":32,"nodeType":"601","messageId":"602","endLine":8,"endColumn":36},{"ruleId":"599","severity":1,"message":"614","line":12,"column":10,"nodeType":"601","messageId":"602","endLine":12,"endColumn":18},{"ruleId":"599","severity":1,"message":"615","line":13,"column":8,"nodeType":"601","messageId":"602","endLine":13,"endColumn":11},{"ruleId":"599","severity":1,"message":"616","line":14,"column":41,"nodeType":"601","messageId":"602","endLine":14,"endColumn":52},{"ruleId":"599","severity":1,"message":"617","line":16,"column":8,"nodeType":"601","messageId":"602","endLine":16,"endColumn":24},{"ruleId":"599","severity":1,"message":"618","line":17,"column":8,"nodeType":"601","messageId":"602","endLine":17,"endColumn":16},{"ruleId":"599","severity":1,"message":"619","line":21,"column":9,"nodeType":"601","messageId":"602","endLine":21,"endColumn":19},{"ruleId":"599","severity":1,"message":"620","line":22,"column":36,"nodeType":"601","messageId":"602","endLine":22,"endColumn":47},{"ruleId":"599","severity":1,"message":"621","line":22,"column":83,"nodeType":"601","messageId":"602","endLine":22,"endColumn":93},{"ruleId":"599","severity":1,"message":"622","line":26,"column":8,"nodeType":"601","messageId":"602","endLine":26,"endColumn":20},{"ruleId":"599","severity":1,"message":"623","line":40,"column":10,"nodeType":"601","messageId":"602","endLine":40,"endColumn":24},{"ruleId":"599","severity":1,"message":"624","line":41,"column":8,"nodeType":"601","messageId":"602","endLine":41,"endColumn":13},{"ruleId":"599","severity":1,"message":"625","line":43,"column":7,"nodeType":"601","messageId":"602","endLine":43,"endColumn":11},{"ruleId":"599","severity":1,"message":"626","line":44,"column":7,"nodeType":"601","messageId":"602","endLine":44,"endColumn":18},{"ruleId":"599","severity":1,"message":"627","line":124,"column":7,"nodeType":"601","messageId":"602","endLine":124,"endColumn":25},{"ruleId":"599","severity":1,"message":"628","line":148,"column":7,"nodeType":"601","messageId":"602","endLine":148,"endColumn":19},{"ruleId":"599","severity":1,"message":"629","line":156,"column":11,"nodeType":"601","messageId":"602","endLine":156,"endColumn":21},{"ruleId":"599","severity":1,"message":"630","line":157,"column":21,"nodeType":"601","messageId":"602","endLine":157,"endColumn":31},{"ruleId":"599","severity":1,"message":"631","line":162,"column":12,"nodeType":"601","messageId":"602","endLine":162,"endColumn":17},{"ruleId":"599","severity":1,"message":"632","line":162,"column":19,"nodeType":"601","messageId":"602","endLine":162,"endColumn":27},{"ruleId":"599","severity":1,"message":"633","line":165,"column":13,"nodeType":"601","messageId":"602","endLine":165,"endColumn":25},{"ruleId":"599","severity":1,"message":"634","line":165,"column":27,"nodeType":"601","messageId":"602","endLine":165,"endColumn":34},{"ruleId":"599","severity":1,"message":"635","line":176,"column":12,"nodeType":"601","messageId":"602","endLine":176,"endColumn":23},{"ruleId":"599","severity":1,"message":"636","line":176,"column":25,"nodeType":"601","messageId":"602","endLine":176,"endColumn":39},{"ruleId":"599","severity":1,"message":"637","line":180,"column":24,"nodeType":"601","messageId":"602","endLine":180,"endColumn":37},{"ruleId":"638","severity":1,"message":"639","line":217,"column":39,"nodeType":"640","messageId":"641","endLine":217,"endColumn":41},{"ruleId":"642","severity":1,"message":"643","line":231,"column":8,"nodeType":"644","endLine":231,"endColumn":10,"suggestions":"645"},{"ruleId":"599","severity":1,"message":"646","line":265,"column":9,"nodeType":"601","messageId":"602","endLine":265,"endColumn":23},{"ruleId":"599","severity":1,"message":"647","line":270,"column":11,"nodeType":"601","messageId":"602","endLine":270,"endColumn":23},{"ruleId":"599","severity":1,"message":"648","line":278,"column":11,"nodeType":"601","messageId":"602","endLine":278,"endColumn":18},{"ruleId":"649","severity":1,"message":"650","line":378,"column":78,"nodeType":"651","messageId":"652","endLine":378,"endColumn":80},{"ruleId":"649","severity":1,"message":"650","line":378,"column":107,"nodeType":"651","messageId":"652","endLine":378,"endColumn":109},{"ruleId":"649","severity":1,"message":"653","line":378,"column":107,"nodeType":"651","messageId":"652","endLine":378,"endColumn":109},{"ruleId":"649","severity":1,"message":"653","line":378,"column":150,"nodeType":"651","messageId":"652","endLine":378,"endColumn":152},{"ruleId":"599","severity":1,"message":"654","line":405,"column":11,"nodeType":"601","messageId":"602","endLine":405,"endColumn":19},{"ruleId":"599","severity":1,"message":"655","line":413,"column":11,"nodeType":"601","messageId":"602","endLine":413,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":418,"column":69,"nodeType":"658","messageId":"659","endLine":418,"endColumn":71},{"ruleId":"599","severity":1,"message":"660","line":450,"column":11,"nodeType":"601","messageId":"602","endLine":450,"endColumn":18},{"ruleId":"638","severity":1,"message":"639","line":465,"column":92,"nodeType":"640","messageId":"641","endLine":465,"endColumn":94},{"ruleId":"599","severity":1,"message":"661","line":31,"column":9,"nodeType":"601","messageId":"602","endLine":31,"endColumn":19},{"ruleId":"599","severity":1,"message":"662","line":131,"column":21,"nodeType":"601","messageId":"602","endLine":131,"endColumn":33},{"ruleId":"599","severity":1,"message":"663","line":132,"column":11,"nodeType":"601","messageId":"602","endLine":132,"endColumn":23},{"ruleId":"599","severity":1,"message":"664","line":133,"column":11,"nodeType":"601","messageId":"602","endLine":133,"endColumn":30},{"ruleId":"599","severity":1,"message":"665","line":134,"column":11,"nodeType":"601","messageId":"602","endLine":134,"endColumn":34},{"ruleId":"599","severity":1,"message":"666","line":135,"column":11,"nodeType":"601","messageId":"602","endLine":135,"endColumn":23},{"ruleId":"599","severity":1,"message":"632","line":136,"column":19,"nodeType":"601","messageId":"602","endLine":136,"endColumn":27},{"ruleId":"599","severity":1,"message":"667","line":137,"column":19,"nodeType":"601","messageId":"602","endLine":137,"endColumn":28},{"ruleId":"599","severity":1,"message":"668","line":140,"column":20,"nodeType":"601","messageId":"602","endLine":140,"endColumn":29},{"ruleId":"599","severity":1,"message":"669","line":144,"column":12,"nodeType":"601","messageId":"602","endLine":144,"endColumn":19},{"ruleId":"599","severity":1,"message":"670","line":144,"column":21,"nodeType":"601","messageId":"602","endLine":144,"endColumn":31},{"ruleId":"599","severity":1,"message":"671","line":154,"column":12,"nodeType":"601","messageId":"602","endLine":154,"endColumn":25},{"ruleId":"656","severity":1,"message":"657","line":174,"column":69,"nodeType":"658","messageId":"659","endLine":174,"endColumn":71},{"ruleId":"656","severity":1,"message":"672","line":184,"column":19,"nodeType":"658","messageId":"659","endLine":184,"endColumn":21},{"ruleId":"599","severity":1,"message":"673","line":191,"column":15,"nodeType":"601","messageId":"602","endLine":191,"endColumn":24},{"ruleId":"656","severity":1,"message":"657","line":213,"column":80,"nodeType":"658","messageId":"659","endLine":213,"endColumn":82},{"ruleId":"656","severity":1,"message":"657","line":214,"column":97,"nodeType":"658","messageId":"659","endLine":214,"endColumn":99},{"ruleId":"656","severity":1,"message":"657","line":215,"column":74,"nodeType":"658","messageId":"659","endLine":215,"endColumn":76},{"ruleId":"656","severity":1,"message":"657","line":216,"column":100,"nodeType":"658","messageId":"659","endLine":216,"endColumn":102},{"ruleId":"599","severity":1,"message":"674","line":218,"column":19,"nodeType":"601","messageId":"602","endLine":218,"endColumn":25},{"ruleId":"642","severity":1,"message":"675","line":256,"column":8,"nodeType":"644","endLine":256,"endColumn":10,"suggestions":"676"},{"ruleId":"599","severity":1,"message":"677","line":273,"column":11,"nodeType":"601","messageId":"602","endLine":273,"endColumn":19},{"ruleId":"599","severity":1,"message":"678","line":294,"column":15,"nodeType":"601","messageId":"602","endLine":294,"endColumn":27},{"ruleId":"656","severity":1,"message":"657","line":405,"column":62,"nodeType":"658","messageId":"659","endLine":405,"endColumn":64},{"ruleId":"599","severity":1,"message":"679","line":429,"column":27,"nodeType":"601","messageId":"602","endLine":429,"endColumn":35},{"ruleId":"599","severity":1,"message":"679","line":431,"column":27,"nodeType":"601","messageId":"602","endLine":431,"endColumn":35},{"ruleId":"656","severity":1,"message":"657","line":557,"column":28,"nodeType":"658","messageId":"659","endLine":557,"endColumn":30},{"ruleId":"656","severity":1,"message":"657","line":559,"column":35,"nodeType":"658","messageId":"659","endLine":559,"endColumn":37},{"ruleId":"599","severity":1,"message":"680","line":589,"column":9,"nodeType":"601","messageId":"602","endLine":589,"endColumn":19},{"ruleId":"656","severity":1,"message":"672","line":705,"column":123,"nodeType":"658","messageId":"659","endLine":705,"endColumn":125},{"ruleId":"599","severity":1,"message":"681","line":3,"column":25,"nodeType":"601","messageId":"602","endLine":3,"endColumn":30},{"ruleId":"599","severity":1,"message":"682","line":3,"column":32,"nodeType":"601","messageId":"602","endLine":3,"endColumn":41},{"ruleId":"599","severity":1,"message":"616","line":3,"column":43,"nodeType":"601","messageId":"602","endLine":3,"endColumn":54},{"ruleId":"599","severity":1,"message":"683","line":3,"column":56,"nodeType":"601","messageId":"602","endLine":3,"endColumn":67},{"ruleId":"599","severity":1,"message":"684","line":7,"column":8,"nodeType":"601","messageId":"602","endLine":7,"endColumn":17},{"ruleId":"599","severity":1,"message":"617","line":8,"column":8,"nodeType":"601","messageId":"602","endLine":8,"endColumn":24},{"ruleId":"599","severity":1,"message":"618","line":9,"column":8,"nodeType":"601","messageId":"602","endLine":9,"endColumn":16},{"ruleId":"599","severity":1,"message":"685","line":10,"column":8,"nodeType":"601","messageId":"602","endLine":10,"endColumn":21},{"ruleId":"599","severity":1,"message":"686","line":15,"column":8,"nodeType":"601","messageId":"602","endLine":15,"endColumn":18},{"ruleId":"599","severity":1,"message":"687","line":18,"column":8,"nodeType":"601","messageId":"602","endLine":18,"endColumn":22},{"ruleId":"599","severity":1,"message":"688","line":72,"column":22,"nodeType":"601","messageId":"602","endLine":72,"endColumn":33},{"ruleId":"599","severity":1,"message":"689","line":74,"column":12,"nodeType":"601","messageId":"602","endLine":74,"endColumn":19},{"ruleId":"599","severity":1,"message":"630","line":74,"column":21,"nodeType":"601","messageId":"602","endLine":74,"endColumn":31},{"ruleId":"599","severity":1,"message":"690","line":76,"column":12,"nodeType":"601","messageId":"602","endLine":76,"endColumn":19},{"ruleId":"599","severity":1,"message":"691","line":78,"column":11,"nodeType":"601","messageId":"602","endLine":78,"endColumn":17},{"ruleId":"656","severity":1,"message":"657","line":79,"column":53,"nodeType":"658","messageId":"659","endLine":79,"endColumn":55},{"ruleId":"599","severity":1,"message":"692","line":100,"column":11,"nodeType":"601","messageId":"602","endLine":100,"endColumn":27},{"ruleId":"599","severity":1,"message":"693","line":3,"column":9,"nodeType":"601","messageId":"602","endLine":3,"endColumn":16},{"ruleId":"599","severity":1,"message":"694","line":4,"column":9,"nodeType":"601","messageId":"602","endLine":4,"endColumn":15},{"ruleId":"599","severity":1,"message":"620","line":4,"column":36,"nodeType":"601","messageId":"602","endLine":4,"endColumn":47},{"ruleId":"599","severity":1,"message":"695","line":4,"column":49,"nodeType":"601","messageId":"602","endLine":4,"endColumn":53},{"ruleId":"599","severity":1,"message":"696","line":4,"column":55,"nodeType":"601","messageId":"602","endLine":4,"endColumn":63},{"ruleId":"599","severity":1,"message":"697","line":4,"column":65,"nodeType":"601","messageId":"602","endLine":4,"endColumn":70},{"ruleId":"599","severity":1,"message":"698","line":4,"column":72,"nodeType":"601","messageId":"602","endLine":4,"endColumn":81},{"ruleId":"599","severity":1,"message":"699","line":8,"column":8,"nodeType":"601","messageId":"602","endLine":8,"endColumn":19},{"ruleId":"599","severity":1,"message":"700","line":9,"column":8,"nodeType":"601","messageId":"602","endLine":9,"endColumn":23},{"ruleId":"599","severity":1,"message":"629","line":98,"column":11,"nodeType":"601","messageId":"602","endLine":98,"endColumn":21},{"ruleId":"599","severity":1,"message":"630","line":99,"column":21,"nodeType":"601","messageId":"602","endLine":99,"endColumn":31},{"ruleId":"599","severity":1,"message":"701","line":104,"column":12,"nodeType":"601","messageId":"602","endLine":104,"endColumn":34},{"ruleId":"599","severity":1,"message":"702","line":107,"column":12,"nodeType":"601","messageId":"602","endLine":107,"endColumn":25},{"ruleId":"649","severity":1,"message":"650","line":169,"column":70,"nodeType":"651","messageId":"652","endLine":169,"endColumn":72},{"ruleId":"649","severity":1,"message":"650","line":169,"column":99,"nodeType":"651","messageId":"652","endLine":169,"endColumn":101},{"ruleId":"649","severity":1,"message":"653","line":169,"column":99,"nodeType":"651","messageId":"652","endLine":169,"endColumn":101},{"ruleId":"649","severity":1,"message":"653","line":169,"column":142,"nodeType":"651","messageId":"652","endLine":169,"endColumn":144},{"ruleId":"638","severity":1,"message":"639","line":201,"column":39,"nodeType":"640","messageId":"641","endLine":201,"endColumn":41},{"ruleId":"642","severity":1,"message":"643","line":215,"column":8,"nodeType":"644","endLine":215,"endColumn":10,"suggestions":"703"},{"ruleId":"642","severity":1,"message":"704","line":220,"column":8,"nodeType":"644","endLine":220,"endColumn":10,"suggestions":"705"},{"ruleId":"599","severity":1,"message":"706","line":4,"column":20,"nodeType":"601","messageId":"602","endLine":4,"endColumn":36},{"ruleId":"599","severity":1,"message":"707","line":6,"column":8,"nodeType":"601","messageId":"602","endLine":6,"endColumn":15},{"ruleId":"599","severity":1,"message":"694","line":7,"column":9,"nodeType":"601","messageId":"602","endLine":7,"endColumn":15},{"ruleId":"599","severity":1,"message":"681","line":9,"column":19,"nodeType":"601","messageId":"602","endLine":9,"endColumn":24},{"ruleId":"599","severity":1,"message":"708","line":10,"column":8,"nodeType":"601","messageId":"602","endLine":10,"endColumn":24},{"ruleId":"599","severity":1,"message":"709","line":57,"column":11,"nodeType":"601","messageId":"602","endLine":57,"endColumn":22},{"ruleId":"599","severity":1,"message":"710","line":60,"column":12,"nodeType":"601","messageId":"602","endLine":60,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":94,"column":75,"nodeType":"658","messageId":"659","endLine":94,"endColumn":77},{"ruleId":"599","severity":1,"message":"673","line":100,"column":15,"nodeType":"601","messageId":"602","endLine":100,"endColumn":24},{"ruleId":"656","severity":1,"message":"657","line":114,"column":77,"nodeType":"658","messageId":"659","endLine":114,"endColumn":79},{"ruleId":"599","severity":1,"message":"711","line":125,"column":13,"nodeType":"601","messageId":"602","endLine":125,"endColumn":25},{"ruleId":"599","severity":1,"message":"712","line":1,"column":38,"nodeType":"601","messageId":"602","endLine":1,"endColumn":44},{"ruleId":"599","severity":1,"message":"681","line":2,"column":9,"nodeType":"601","messageId":"602","endLine":2,"endColumn":14},{"ruleId":"599","severity":1,"message":"683","line":2,"column":15,"nodeType":"601","messageId":"602","endLine":2,"endColumn":26},{"ruleId":"599","severity":1,"message":"682","line":2,"column":28,"nodeType":"601","messageId":"602","endLine":2,"endColumn":37},{"ruleId":"599","severity":1,"message":"713","line":2,"column":38,"nodeType":"601","messageId":"602","endLine":2,"endColumn":42},{"ruleId":"599","severity":1,"message":"714","line":3,"column":15,"nodeType":"601","messageId":"602","endLine":3,"endColumn":19},{"ruleId":"599","severity":1,"message":"715","line":3,"column":20,"nodeType":"601","messageId":"602","endLine":3,"endColumn":28},{"ruleId":"599","severity":1,"message":"716","line":3,"column":44,"nodeType":"601","messageId":"602","endLine":3,"endColumn":54},{"ruleId":"599","severity":1,"message":"717","line":7,"column":8,"nodeType":"601","messageId":"602","endLine":7,"endColumn":14},{"ruleId":"599","severity":1,"message":"718","line":13,"column":10,"nodeType":"601","messageId":"602","endLine":13,"endColumn":17},{"ruleId":"599","severity":1,"message":"719","line":15,"column":8,"nodeType":"601","messageId":"602","endLine":15,"endColumn":19},{"ruleId":"599","severity":1,"message":"720","line":19,"column":17,"nodeType":"601","messageId":"602","endLine":19,"endColumn":20},{"ruleId":"599","severity":1,"message":"721","line":20,"column":10,"nodeType":"601","messageId":"602","endLine":20,"endColumn":16},{"ruleId":"599","severity":1,"message":"722","line":20,"column":18,"nodeType":"601","messageId":"602","endLine":20,"endColumn":24},{"ruleId":"599","severity":1,"message":"723","line":20,"column":26,"nodeType":"601","messageId":"602","endLine":20,"endColumn":31},{"ruleId":"599","severity":1,"message":"612","line":20,"column":33,"nodeType":"601","messageId":"602","endLine":20,"endColumn":40},{"ruleId":"599","severity":1,"message":"615","line":22,"column":8,"nodeType":"601","messageId":"602","endLine":22,"endColumn":11},{"ruleId":"599","severity":1,"message":"724","line":23,"column":8,"nodeType":"601","messageId":"602","endLine":23,"endColumn":24},{"ruleId":"599","severity":1,"message":"694","line":24,"column":8,"nodeType":"601","messageId":"602","endLine":24,"endColumn":14},{"ruleId":"599","severity":1,"message":"725","line":25,"column":8,"nodeType":"601","messageId":"602","endLine":25,"endColumn":11},{"ruleId":"599","severity":1,"message":"726","line":26,"column":8,"nodeType":"601","messageId":"602","endLine":26,"endColumn":17},{"ruleId":"599","severity":1,"message":"621","line":29,"column":8,"nodeType":"601","messageId":"602","endLine":29,"endColumn":18},{"ruleId":"599","severity":1,"message":"727","line":38,"column":8,"nodeType":"601","messageId":"602","endLine":38,"endColumn":19},{"ruleId":"599","severity":1,"message":"728","line":122,"column":12,"nodeType":"601","messageId":"602","endLine":122,"endColumn":23},{"ruleId":"599","severity":1,"message":"729","line":123,"column":12,"nodeType":"601","messageId":"602","endLine":123,"endColumn":20},{"ruleId":"599","severity":1,"message":"730","line":129,"column":12,"nodeType":"601","messageId":"602","endLine":129,"endColumn":27},{"ruleId":"599","severity":1,"message":"731","line":131,"column":11,"nodeType":"601","messageId":"602","endLine":131,"endColumn":19},{"ruleId":"642","severity":1,"message":"732","line":191,"column":8,"nodeType":"644","endLine":191,"endColumn":10,"suggestions":"733"},{"ruleId":"599","severity":1,"message":"734","line":223,"column":11,"nodeType":"601","messageId":"602","endLine":223,"endColumn":27},{"ruleId":"599","severity":1,"message":"735","line":236,"column":11,"nodeType":"601","messageId":"602","endLine":236,"endColumn":22},{"ruleId":"599","severity":1,"message":"603","line":1,"column":26,"nodeType":"601","messageId":"602","endLine":1,"endColumn":35},{"ruleId":"599","severity":1,"message":"600","line":1,"column":37,"nodeType":"601","messageId":"602","endLine":1,"endColumn":48},{"ruleId":"599","severity":1,"message":"736","line":5,"column":10,"nodeType":"601","messageId":"602","endLine":5,"endColumn":14},{"ruleId":"599","severity":1,"message":"714","line":6,"column":10,"nodeType":"601","messageId":"602","endLine":6,"endColumn":14},{"ruleId":"599","severity":1,"message":"715","line":6,"column":15,"nodeType":"601","messageId":"602","endLine":6,"endColumn":23},{"ruleId":"599","severity":1,"message":"661","line":11,"column":16,"nodeType":"601","messageId":"602","endLine":11,"endColumn":26},{"ruleId":"599","severity":1,"message":"737","line":12,"column":10,"nodeType":"601","messageId":"602","endLine":12,"endColumn":21},{"ruleId":"599","severity":1,"message":"738","line":13,"column":9,"nodeType":"601","messageId":"602","endLine":13,"endColumn":13},{"ruleId":"599","severity":1,"message":"739","line":13,"column":14,"nodeType":"601","messageId":"602","endLine":13,"endColumn":22},{"ruleId":"599","severity":1,"message":"740","line":13,"column":23,"nodeType":"601","messageId":"602","endLine":13,"endColumn":33},{"ruleId":"599","severity":1,"message":"696","line":13,"column":34,"nodeType":"601","messageId":"602","endLine":13,"endColumn":42},{"ruleId":"599","severity":1,"message":"741","line":16,"column":10,"nodeType":"601","messageId":"602","endLine":16,"endColumn":15},{"ruleId":"599","severity":1,"message":"742","line":41,"column":8,"nodeType":"601","messageId":"602","endLine":41,"endColumn":23},{"ruleId":"599","severity":1,"message":"743","line":113,"column":12,"nodeType":"601","messageId":"602","endLine":113,"endColumn":20},{"ruleId":"599","severity":1,"message":"688","line":113,"column":22,"nodeType":"601","messageId":"602","endLine":113,"endColumn":33},{"ruleId":"599","severity":1,"message":"744","line":114,"column":25,"nodeType":"601","messageId":"602","endLine":114,"endColumn":39},{"ruleId":"599","severity":1,"message":"630","line":115,"column":21,"nodeType":"601","messageId":"602","endLine":115,"endColumn":31},{"ruleId":"599","severity":1,"message":"745","line":117,"column":21,"nodeType":"601","messageId":"602","endLine":117,"endColumn":31},{"ruleId":"599","severity":1,"message":"746","line":119,"column":12,"nodeType":"601","messageId":"602","endLine":119,"endColumn":24},{"ruleId":"599","severity":1,"message":"747","line":119,"column":25,"nodeType":"601","messageId":"602","endLine":119,"endColumn":40},{"ruleId":"599","severity":1,"message":"748","line":120,"column":12,"nodeType":"601","messageId":"602","endLine":120,"endColumn":22},{"ruleId":"599","severity":1,"message":"749","line":120,"column":23,"nodeType":"601","messageId":"602","endLine":120,"endColumn":36},{"ruleId":"599","severity":1,"message":"750","line":121,"column":12,"nodeType":"601","messageId":"602","endLine":121,"endColumn":24},{"ruleId":"599","severity":1,"message":"751","line":121,"column":25,"nodeType":"601","messageId":"602","endLine":121,"endColumn":40},{"ruleId":"599","severity":1,"message":"752","line":122,"column":12,"nodeType":"601","messageId":"602","endLine":122,"endColumn":16},{"ruleId":"599","severity":1,"message":"753","line":122,"column":18,"nodeType":"601","messageId":"602","endLine":122,"endColumn":25},{"ruleId":"599","severity":1,"message":"754","line":123,"column":12,"nodeType":"601","messageId":"602","endLine":123,"endColumn":23},{"ruleId":"599","severity":1,"message":"755","line":123,"column":25,"nodeType":"601","messageId":"602","endLine":123,"endColumn":39},{"ruleId":"649","severity":1,"message":"653","line":170,"column":55,"nodeType":"651","messageId":"652","endLine":170,"endColumn":57},{"ruleId":"649","severity":1,"message":"653","line":170,"column":96,"nodeType":"651","messageId":"652","endLine":170,"endColumn":98},{"ruleId":"649","severity":1,"message":"653","line":181,"column":55,"nodeType":"651","messageId":"652","endLine":181,"endColumn":57},{"ruleId":"649","severity":1,"message":"653","line":181,"column":96,"nodeType":"651","messageId":"652","endLine":181,"endColumn":98},{"ruleId":"649","severity":1,"message":"653","line":192,"column":57,"nodeType":"651","messageId":"652","endLine":192,"endColumn":59},{"ruleId":"649","severity":1,"message":"653","line":192,"column":98,"nodeType":"651","messageId":"652","endLine":192,"endColumn":100},{"ruleId":"599","severity":1,"message":"654","line":246,"column":11,"nodeType":"601","messageId":"602","endLine":246,"endColumn":19},{"ruleId":"599","severity":1,"message":"679","line":249,"column":23,"nodeType":"601","messageId":"602","endLine":249,"endColumn":31},{"ruleId":"599","severity":1,"message":"673","line":264,"column":15,"nodeType":"601","messageId":"602","endLine":264,"endColumn":24},{"ruleId":"656","severity":1,"message":"657","line":278,"column":75,"nodeType":"658","messageId":"659","endLine":278,"endColumn":77},{"ruleId":"599","severity":1,"message":"756","line":282,"column":11,"nodeType":"601","messageId":"602","endLine":282,"endColumn":21},{"ruleId":"599","severity":1,"message":"757","line":287,"column":11,"nodeType":"601","messageId":"602","endLine":287,"endColumn":20},{"ruleId":"599","severity":1,"message":"758","line":315,"column":11,"nodeType":"601","messageId":"602","endLine":315,"endColumn":23},{"ruleId":"599","severity":1,"message":"759","line":3,"column":9,"nodeType":"601","messageId":"602","endLine":3,"endColumn":23},{"ruleId":"599","severity":1,"message":"681","line":6,"column":9,"nodeType":"601","messageId":"602","endLine":6,"endColumn":14},{"ruleId":"599","severity":1,"message":"682","line":6,"column":16,"nodeType":"601","messageId":"602","endLine":6,"endColumn":25},{"ruleId":"599","severity":1,"message":"616","line":6,"column":27,"nodeType":"601","messageId":"602","endLine":6,"endColumn":38},{"ruleId":"599","severity":1,"message":"683","line":6,"column":40,"nodeType":"601","messageId":"602","endLine":6,"endColumn":51},{"ruleId":"599","severity":1,"message":"694","line":7,"column":8,"nodeType":"601","messageId":"602","endLine":7,"endColumn":14},{"ruleId":"599","severity":1,"message":"760","line":101,"column":11,"nodeType":"601","messageId":"602","endLine":101,"endColumn":18},{"ruleId":"599","severity":1,"message":"743","line":102,"column":12,"nodeType":"601","messageId":"602","endLine":102,"endColumn":20},{"ruleId":"599","severity":1,"message":"630","line":104,"column":21,"nodeType":"601","messageId":"602","endLine":104,"endColumn":31},{"ruleId":"599","severity":1,"message":"690","line":105,"column":12,"nodeType":"601","messageId":"602","endLine":105,"endColumn":19},{"ruleId":"599","severity":1,"message":"745","line":105,"column":21,"nodeType":"601","messageId":"602","endLine":105,"endColumn":31},{"ruleId":"649","severity":1,"message":"653","line":153,"column":55,"nodeType":"651","messageId":"652","endLine":153,"endColumn":57},{"ruleId":"649","severity":1,"message":"653","line":153,"column":96,"nodeType":"651","messageId":"652","endLine":153,"endColumn":98},{"ruleId":"649","severity":1,"message":"653","line":164,"column":55,"nodeType":"651","messageId":"652","endLine":164,"endColumn":57},{"ruleId":"649","severity":1,"message":"653","line":164,"column":96,"nodeType":"651","messageId":"652","endLine":164,"endColumn":98},{"ruleId":"649","severity":1,"message":"653","line":175,"column":57,"nodeType":"651","messageId":"652","endLine":175,"endColumn":59},{"ruleId":"649","severity":1,"message":"653","line":175,"column":98,"nodeType":"651","messageId":"652","endLine":175,"endColumn":100},{"ruleId":"642","severity":1,"message":"761","line":222,"column":8,"nodeType":"644","endLine":222,"endColumn":10,"suggestions":"762"},{"ruleId":"599","severity":1,"message":"673","line":225,"column":15,"nodeType":"601","messageId":"602","endLine":225,"endColumn":24},{"ruleId":"656","severity":1,"message":"657","line":238,"column":75,"nodeType":"658","messageId":"659","endLine":238,"endColumn":77},{"ruleId":"599","severity":1,"message":"758","line":264,"column":11,"nodeType":"601","messageId":"602","endLine":264,"endColumn":23},{"ruleId":"599","severity":1,"message":"603","line":1,"column":26,"nodeType":"601","messageId":"602","endLine":1,"endColumn":35},{"ruleId":"599","severity":1,"message":"600","line":1,"column":37,"nodeType":"601","messageId":"602","endLine":1,"endColumn":48},{"ruleId":"599","severity":1,"message":"736","line":5,"column":10,"nodeType":"601","messageId":"602","endLine":5,"endColumn":14},{"ruleId":"599","severity":1,"message":"714","line":6,"column":10,"nodeType":"601","messageId":"602","endLine":6,"endColumn":14},{"ruleId":"599","severity":1,"message":"715","line":6,"column":15,"nodeType":"601","messageId":"602","endLine":6,"endColumn":23},{"ruleId":"599","severity":1,"message":"661","line":11,"column":16,"nodeType":"601","messageId":"602","endLine":11,"endColumn":26},{"ruleId":"599","severity":1,"message":"737","line":12,"column":10,"nodeType":"601","messageId":"602","endLine":12,"endColumn":21},{"ruleId":"599","severity":1,"message":"738","line":13,"column":9,"nodeType":"601","messageId":"602","endLine":13,"endColumn":13},{"ruleId":"599","severity":1,"message":"739","line":13,"column":14,"nodeType":"601","messageId":"602","endLine":13,"endColumn":22},{"ruleId":"599","severity":1,"message":"740","line":13,"column":23,"nodeType":"601","messageId":"602","endLine":13,"endColumn":33},{"ruleId":"599","severity":1,"message":"696","line":13,"column":34,"nodeType":"601","messageId":"602","endLine":13,"endColumn":42},{"ruleId":"599","severity":1,"message":"741","line":16,"column":10,"nodeType":"601","messageId":"602","endLine":16,"endColumn":15},{"ruleId":"599","severity":1,"message":"688","line":117,"column":22,"nodeType":"601","messageId":"602","endLine":117,"endColumn":33},{"ruleId":"599","severity":1,"message":"744","line":118,"column":25,"nodeType":"601","messageId":"602","endLine":118,"endColumn":39},{"ruleId":"599","severity":1,"message":"630","line":119,"column":21,"nodeType":"601","messageId":"602","endLine":119,"endColumn":31},{"ruleId":"599","severity":1,"message":"746","line":123,"column":12,"nodeType":"601","messageId":"602","endLine":123,"endColumn":24},{"ruleId":"599","severity":1,"message":"747","line":123,"column":25,"nodeType":"601","messageId":"602","endLine":123,"endColumn":40},{"ruleId":"599","severity":1,"message":"748","line":124,"column":12,"nodeType":"601","messageId":"602","endLine":124,"endColumn":22},{"ruleId":"599","severity":1,"message":"749","line":124,"column":23,"nodeType":"601","messageId":"602","endLine":124,"endColumn":36},{"ruleId":"599","severity":1,"message":"750","line":125,"column":12,"nodeType":"601","messageId":"602","endLine":125,"endColumn":24},{"ruleId":"599","severity":1,"message":"751","line":125,"column":25,"nodeType":"601","messageId":"602","endLine":125,"endColumn":40},{"ruleId":"599","severity":1,"message":"752","line":126,"column":12,"nodeType":"601","messageId":"602","endLine":126,"endColumn":16},{"ruleId":"599","severity":1,"message":"753","line":126,"column":18,"nodeType":"601","messageId":"602","endLine":126,"endColumn":25},{"ruleId":"599","severity":1,"message":"754","line":127,"column":12,"nodeType":"601","messageId":"602","endLine":127,"endColumn":23},{"ruleId":"599","severity":1,"message":"755","line":127,"column":25,"nodeType":"601","messageId":"602","endLine":127,"endColumn":39},{"ruleId":"599","severity":1,"message":"691","line":129,"column":11,"nodeType":"601","messageId":"602","endLine":129,"endColumn":17},{"ruleId":"656","severity":1,"message":"657","line":130,"column":53,"nodeType":"658","messageId":"659","endLine":130,"endColumn":55},{"ruleId":"649","severity":1,"message":"653","line":147,"column":55,"nodeType":"651","messageId":"652","endLine":147,"endColumn":57},{"ruleId":"649","severity":1,"message":"653","line":147,"column":96,"nodeType":"651","messageId":"652","endLine":147,"endColumn":98},{"ruleId":"649","severity":1,"message":"653","line":158,"column":55,"nodeType":"651","messageId":"652","endLine":158,"endColumn":57},{"ruleId":"649","severity":1,"message":"653","line":158,"column":96,"nodeType":"651","messageId":"652","endLine":158,"endColumn":98},{"ruleId":"649","severity":1,"message":"653","line":169,"column":57,"nodeType":"651","messageId":"652","endLine":169,"endColumn":59},{"ruleId":"649","severity":1,"message":"653","line":169,"column":98,"nodeType":"651","messageId":"652","endLine":169,"endColumn":100},{"ruleId":"599","severity":1,"message":"679","line":217,"column":23,"nodeType":"601","messageId":"602","endLine":217,"endColumn":31},{"ruleId":"599","severity":1,"message":"673","line":232,"column":15,"nodeType":"601","messageId":"602","endLine":232,"endColumn":24},{"ruleId":"656","severity":1,"message":"657","line":246,"column":75,"nodeType":"658","messageId":"659","endLine":246,"endColumn":77},{"ruleId":"599","severity":1,"message":"756","line":250,"column":11,"nodeType":"601","messageId":"602","endLine":250,"endColumn":21},{"ruleId":"599","severity":1,"message":"757","line":255,"column":11,"nodeType":"601","messageId":"602","endLine":255,"endColumn":20},{"ruleId":"599","severity":1,"message":"758","line":283,"column":11,"nodeType":"601","messageId":"602","endLine":283,"endColumn":23},{"ruleId":"599","severity":1,"message":"712","line":1,"column":38,"nodeType":"601","messageId":"602","endLine":1,"endColumn":44},{"ruleId":"599","severity":1,"message":"716","line":3,"column":48,"nodeType":"601","messageId":"602","endLine":3,"endColumn":58},{"ruleId":"599","severity":1,"message":"717","line":7,"column":8,"nodeType":"601","messageId":"602","endLine":7,"endColumn":14},{"ruleId":"599","severity":1,"message":"718","line":13,"column":10,"nodeType":"601","messageId":"602","endLine":13,"endColumn":17},{"ruleId":"599","severity":1,"message":"613","line":13,"column":19,"nodeType":"601","messageId":"602","endLine":13,"endColumn":23},{"ruleId":"599","severity":1,"message":"719","line":15,"column":8,"nodeType":"601","messageId":"602","endLine":15,"endColumn":19},{"ruleId":"599","severity":1,"message":"721","line":20,"column":10,"nodeType":"601","messageId":"602","endLine":20,"endColumn":16},{"ruleId":"599","severity":1,"message":"722","line":20,"column":18,"nodeType":"601","messageId":"602","endLine":20,"endColumn":24},{"ruleId":"599","severity":1,"message":"723","line":20,"column":26,"nodeType":"601","messageId":"602","endLine":20,"endColumn":31},{"ruleId":"599","severity":1,"message":"612","line":20,"column":33,"nodeType":"601","messageId":"602","endLine":20,"endColumn":40},{"ruleId":"599","severity":1,"message":"694","line":24,"column":8,"nodeType":"601","messageId":"602","endLine":24,"endColumn":14},{"ruleId":"599","severity":1,"message":"710","line":83,"column":12,"nodeType":"601","messageId":"602","endLine":83,"endColumn":19},{"ruleId":"599","severity":1,"message":"763","line":83,"column":21,"nodeType":"601","messageId":"602","endLine":83,"endColumn":31},{"ruleId":"642","severity":1,"message":"764","line":108,"column":10,"nodeType":"644","endLine":108,"endColumn":12,"suggestions":"765"},{"ruleId":"599","severity":1,"message":"735","line":124,"column":12,"nodeType":"601","messageId":"602","endLine":124,"endColumn":23},{"ruleId":"656","severity":1,"message":"657","line":159,"column":49,"nodeType":"658","messageId":"659","endLine":159,"endColumn":51},{"ruleId":"599","severity":1,"message":"766","line":3,"column":8,"nodeType":"601","messageId":"602","endLine":3,"endColumn":19},{"ruleId":"599","severity":1,"message":"736","line":9,"column":9,"nodeType":"601","messageId":"602","endLine":9,"endColumn":13},{"ruleId":"599","severity":1,"message":"694","line":10,"column":8,"nodeType":"601","messageId":"602","endLine":10,"endColumn":14},{"ruleId":"599","severity":1,"message":"661","line":11,"column":9,"nodeType":"601","messageId":"602","endLine":11,"endColumn":19},{"ruleId":"599","severity":1,"message":"767","line":4,"column":8,"nodeType":"601","messageId":"602","endLine":4,"endColumn":19},{"ruleId":"599","severity":1,"message":"768","line":49,"column":11,"nodeType":"601","messageId":"602","endLine":49,"endColumn":22},{"ruleId":"599","severity":1,"message":"709","line":52,"column":11,"nodeType":"601","messageId":"602","endLine":52,"endColumn":22},{"ruleId":"599","severity":1,"message":"710","line":55,"column":12,"nodeType":"601","messageId":"602","endLine":55,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":89,"column":75,"nodeType":"658","messageId":"659","endLine":89,"endColumn":77},{"ruleId":"599","severity":1,"message":"673","line":95,"column":15,"nodeType":"601","messageId":"602","endLine":95,"endColumn":24},{"ruleId":"656","severity":1,"message":"657","line":109,"column":77,"nodeType":"658","messageId":"659","endLine":109,"endColumn":79},{"ruleId":"599","severity":1,"message":"769","line":119,"column":11,"nodeType":"601","messageId":"602","endLine":119,"endColumn":33},{"ruleId":"599","severity":1,"message":"711","line":120,"column":13,"nodeType":"601","messageId":"602","endLine":120,"endColumn":25},{"ruleId":"599","severity":1,"message":"629","line":102,"column":11,"nodeType":"601","messageId":"602","endLine":102,"endColumn":21},{"ruleId":"599","severity":1,"message":"689","line":103,"column":12,"nodeType":"601","messageId":"602","endLine":103,"endColumn":19},{"ruleId":"599","severity":1,"message":"630","line":103,"column":21,"nodeType":"601","messageId":"602","endLine":103,"endColumn":31},{"ruleId":"599","severity":1,"message":"631","line":108,"column":12,"nodeType":"601","messageId":"602","endLine":108,"endColumn":17},{"ruleId":"599","severity":1,"message":"632","line":108,"column":19,"nodeType":"601","messageId":"602","endLine":108,"endColumn":27},{"ruleId":"599","severity":1,"message":"633","line":111,"column":13,"nodeType":"601","messageId":"602","endLine":111,"endColumn":25},{"ruleId":"599","severity":1,"message":"634","line":111,"column":27,"nodeType":"601","messageId":"602","endLine":111,"endColumn":34},{"ruleId":"599","severity":1,"message":"701","line":119,"column":12,"nodeType":"601","messageId":"602","endLine":119,"endColumn":34},{"ruleId":"599","severity":1,"message":"770","line":119,"column":36,"nodeType":"601","messageId":"602","endLine":119,"endColumn":61},{"ruleId":"599","severity":1,"message":"771","line":120,"column":12,"nodeType":"601","messageId":"602","endLine":120,"endColumn":37},{"ruleId":"599","severity":1,"message":"772","line":120,"column":38,"nodeType":"601","messageId":"602","endLine":120,"endColumn":66},{"ruleId":"599","severity":1,"message":"635","line":122,"column":12,"nodeType":"601","messageId":"602","endLine":122,"endColumn":23},{"ruleId":"599","severity":1,"message":"636","line":122,"column":25,"nodeType":"601","messageId":"602","endLine":122,"endColumn":39},{"ruleId":"599","severity":1,"message":"637","line":126,"column":24,"nodeType":"601","messageId":"602","endLine":126,"endColumn":37},{"ruleId":"638","severity":1,"message":"639","line":159,"column":39,"nodeType":"640","messageId":"641","endLine":159,"endColumn":41},{"ruleId":"642","severity":1,"message":"643","line":173,"column":8,"nodeType":"644","endLine":173,"endColumn":10,"suggestions":"773"},{"ruleId":"599","severity":1,"message":"646","line":176,"column":9,"nodeType":"601","messageId":"602","endLine":176,"endColumn":23},{"ruleId":"599","severity":1,"message":"647","line":181,"column":11,"nodeType":"601","messageId":"602","endLine":181,"endColumn":23},{"ruleId":"599","severity":1,"message":"654","line":200,"column":11,"nodeType":"601","messageId":"602","endLine":200,"endColumn":19},{"ruleId":"599","severity":1,"message":"655","line":203,"column":11,"nodeType":"601","messageId":"602","endLine":203,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":208,"column":69,"nodeType":"658","messageId":"659","endLine":208,"endColumn":71},{"ruleId":"599","severity":1,"message":"660","line":240,"column":11,"nodeType":"601","messageId":"602","endLine":240,"endColumn":18},{"ruleId":"638","severity":1,"message":"639","line":254,"column":92,"nodeType":"640","messageId":"641","endLine":254,"endColumn":94},{"ruleId":"599","severity":1,"message":"600","line":1,"column":28,"nodeType":"601","messageId":"602","endLine":1,"endColumn":39},{"ruleId":"599","severity":1,"message":"603","line":1,"column":41,"nodeType":"601","messageId":"602","endLine":1,"endColumn":50},{"ruleId":"599","severity":1,"message":"774","line":8,"column":38,"nodeType":"601","messageId":"602","endLine":8,"endColumn":46},{"ruleId":"599","severity":1,"message":"688","line":103,"column":22,"nodeType":"601","messageId":"602","endLine":103,"endColumn":33},{"ruleId":"599","severity":1,"message":"744","line":104,"column":25,"nodeType":"601","messageId":"602","endLine":104,"endColumn":39},{"ruleId":"599","severity":1,"message":"630","line":105,"column":21,"nodeType":"601","messageId":"602","endLine":105,"endColumn":31},{"ruleId":"599","severity":1,"message":"746","line":109,"column":12,"nodeType":"601","messageId":"602","endLine":109,"endColumn":24},{"ruleId":"599","severity":1,"message":"747","line":109,"column":25,"nodeType":"601","messageId":"602","endLine":109,"endColumn":40},{"ruleId":"599","severity":1,"message":"748","line":110,"column":12,"nodeType":"601","messageId":"602","endLine":110,"endColumn":22},{"ruleId":"599","severity":1,"message":"749","line":110,"column":23,"nodeType":"601","messageId":"602","endLine":110,"endColumn":36},{"ruleId":"599","severity":1,"message":"750","line":111,"column":12,"nodeType":"601","messageId":"602","endLine":111,"endColumn":24},{"ruleId":"599","severity":1,"message":"751","line":111,"column":25,"nodeType":"601","messageId":"602","endLine":111,"endColumn":40},{"ruleId":"599","severity":1,"message":"752","line":112,"column":12,"nodeType":"601","messageId":"602","endLine":112,"endColumn":16},{"ruleId":"599","severity":1,"message":"753","line":112,"column":18,"nodeType":"601","messageId":"602","endLine":112,"endColumn":25},{"ruleId":"599","severity":1,"message":"754","line":113,"column":12,"nodeType":"601","messageId":"602","endLine":113,"endColumn":23},{"ruleId":"599","severity":1,"message":"755","line":113,"column":25,"nodeType":"601","messageId":"602","endLine":113,"endColumn":39},{"ruleId":"599","severity":1,"message":"691","line":115,"column":11,"nodeType":"601","messageId":"602","endLine":115,"endColumn":17},{"ruleId":"656","severity":1,"message":"657","line":116,"column":53,"nodeType":"658","messageId":"659","endLine":116,"endColumn":55},{"ruleId":"649","severity":1,"message":"653","line":153,"column":55,"nodeType":"651","messageId":"652","endLine":153,"endColumn":57},{"ruleId":"649","severity":1,"message":"653","line":153,"column":96,"nodeType":"651","messageId":"652","endLine":153,"endColumn":98},{"ruleId":"649","severity":1,"message":"653","line":164,"column":58,"nodeType":"651","messageId":"652","endLine":164,"endColumn":60},{"ruleId":"649","severity":1,"message":"653","line":164,"column":99,"nodeType":"651","messageId":"652","endLine":164,"endColumn":101},{"ruleId":"656","severity":1,"message":"657","line":196,"column":49,"nodeType":"658","messageId":"659","endLine":196,"endColumn":51},{"ruleId":"599","severity":1,"message":"679","line":222,"column":23,"nodeType":"601","messageId":"602","endLine":222,"endColumn":31},{"ruleId":"599","severity":1,"message":"673","line":237,"column":15,"nodeType":"601","messageId":"602","endLine":237,"endColumn":24},{"ruleId":"656","severity":1,"message":"657","line":251,"column":75,"nodeType":"658","messageId":"659","endLine":251,"endColumn":77},{"ruleId":"599","severity":1,"message":"756","line":255,"column":11,"nodeType":"601","messageId":"602","endLine":255,"endColumn":21},{"ruleId":"599","severity":1,"message":"757","line":260,"column":11,"nodeType":"601","messageId":"602","endLine":260,"endColumn":20},{"ruleId":"599","severity":1,"message":"758","line":288,"column":11,"nodeType":"601","messageId":"602","endLine":288,"endColumn":23},{"ruleId":"599","severity":1,"message":"775","line":4,"column":8,"nodeType":"601","messageId":"602","endLine":4,"endColumn":25},{"ruleId":"599","severity":1,"message":"776","line":11,"column":8,"nodeType":"601","messageId":"602","endLine":11,"endColumn":22},{"ruleId":"599","severity":1,"message":"777","line":12,"column":8,"nodeType":"601","messageId":"602","endLine":12,"endColumn":20},{"ruleId":"599","severity":1,"message":"778","line":13,"column":8,"nodeType":"601","messageId":"602","endLine":13,"endColumn":20},{"ruleId":"599","severity":1,"message":"779","line":14,"column":8,"nodeType":"601","messageId":"602","endLine":14,"endColumn":18},{"ruleId":"599","severity":1,"message":"780","line":16,"column":9,"nodeType":"601","messageId":"602","endLine":16,"endColumn":14},{"ruleId":"599","severity":1,"message":"781","line":30,"column":27,"nodeType":"601","messageId":"602","endLine":30,"endColumn":43},{"ruleId":"599","severity":1,"message":"782","line":36,"column":11,"nodeType":"601","messageId":"602","endLine":36,"endColumn":30},{"ruleId":"599","severity":1,"message":"603","line":1,"column":26,"nodeType":"601","messageId":"602","endLine":1,"endColumn":35},{"ruleId":"599","severity":1,"message":"600","line":1,"column":37,"nodeType":"601","messageId":"602","endLine":1,"endColumn":48},{"ruleId":"599","severity":1,"message":"736","line":5,"column":10,"nodeType":"601","messageId":"602","endLine":5,"endColumn":14},{"ruleId":"599","severity":1,"message":"714","line":6,"column":10,"nodeType":"601","messageId":"602","endLine":6,"endColumn":14},{"ruleId":"599","severity":1,"message":"715","line":6,"column":15,"nodeType":"601","messageId":"602","endLine":6,"endColumn":23},{"ruleId":"599","severity":1,"message":"661","line":11,"column":16,"nodeType":"601","messageId":"602","endLine":11,"endColumn":26},{"ruleId":"599","severity":1,"message":"737","line":12,"column":10,"nodeType":"601","messageId":"602","endLine":12,"endColumn":21},{"ruleId":"599","severity":1,"message":"783","line":12,"column":23,"nodeType":"601","messageId":"602","endLine":12,"endColumn":38},{"ruleId":"599","severity":1,"message":"784","line":12,"column":40,"nodeType":"601","messageId":"602","endLine":12,"endColumn":50},{"ruleId":"599","severity":1,"message":"738","line":13,"column":9,"nodeType":"601","messageId":"602","endLine":13,"endColumn":13},{"ruleId":"599","severity":1,"message":"739","line":13,"column":14,"nodeType":"601","messageId":"602","endLine":13,"endColumn":22},{"ruleId":"599","severity":1,"message":"740","line":13,"column":23,"nodeType":"601","messageId":"602","endLine":13,"endColumn":33},{"ruleId":"599","severity":1,"message":"741","line":16,"column":10,"nodeType":"601","messageId":"602","endLine":16,"endColumn":15},{"ruleId":"599","severity":1,"message":"742","line":45,"column":8,"nodeType":"601","messageId":"602","endLine":45,"endColumn":23},{"ruleId":"599","severity":1,"message":"688","line":118,"column":22,"nodeType":"601","messageId":"602","endLine":118,"endColumn":33},{"ruleId":"599","severity":1,"message":"744","line":119,"column":25,"nodeType":"601","messageId":"602","endLine":119,"endColumn":39},{"ruleId":"599","severity":1,"message":"630","line":120,"column":21,"nodeType":"601","messageId":"602","endLine":120,"endColumn":31},{"ruleId":"599","severity":1,"message":"746","line":124,"column":12,"nodeType":"601","messageId":"602","endLine":124,"endColumn":24},{"ruleId":"599","severity":1,"message":"747","line":124,"column":25,"nodeType":"601","messageId":"602","endLine":124,"endColumn":40},{"ruleId":"599","severity":1,"message":"748","line":125,"column":12,"nodeType":"601","messageId":"602","endLine":125,"endColumn":22},{"ruleId":"599","severity":1,"message":"749","line":125,"column":23,"nodeType":"601","messageId":"602","endLine":125,"endColumn":36},{"ruleId":"599","severity":1,"message":"750","line":126,"column":12,"nodeType":"601","messageId":"602","endLine":126,"endColumn":24},{"ruleId":"599","severity":1,"message":"751","line":126,"column":25,"nodeType":"601","messageId":"602","endLine":126,"endColumn":40},{"ruleId":"599","severity":1,"message":"752","line":127,"column":12,"nodeType":"601","messageId":"602","endLine":127,"endColumn":16},{"ruleId":"599","severity":1,"message":"753","line":127,"column":18,"nodeType":"601","messageId":"602","endLine":127,"endColumn":25},{"ruleId":"599","severity":1,"message":"754","line":128,"column":12,"nodeType":"601","messageId":"602","endLine":128,"endColumn":23},{"ruleId":"599","severity":1,"message":"755","line":128,"column":25,"nodeType":"601","messageId":"602","endLine":128,"endColumn":39},{"ruleId":"599","severity":1,"message":"691","line":131,"column":11,"nodeType":"601","messageId":"602","endLine":131,"endColumn":17},{"ruleId":"656","severity":1,"message":"657","line":132,"column":53,"nodeType":"658","messageId":"659","endLine":132,"endColumn":55},{"ruleId":"649","severity":1,"message":"653","line":148,"column":55,"nodeType":"651","messageId":"652","endLine":148,"endColumn":57},{"ruleId":"649","severity":1,"message":"653","line":148,"column":96,"nodeType":"651","messageId":"652","endLine":148,"endColumn":98},{"ruleId":"599","severity":1,"message":"679","line":218,"column":23,"nodeType":"601","messageId":"602","endLine":218,"endColumn":31},{"ruleId":"599","severity":1,"message":"673","line":233,"column":15,"nodeType":"601","messageId":"602","endLine":233,"endColumn":24},{"ruleId":"656","severity":1,"message":"657","line":247,"column":75,"nodeType":"658","messageId":"659","endLine":247,"endColumn":77},{"ruleId":"599","severity":1,"message":"756","line":251,"column":11,"nodeType":"601","messageId":"602","endLine":251,"endColumn":21},{"ruleId":"599","severity":1,"message":"757","line":256,"column":11,"nodeType":"601","messageId":"602","endLine":256,"endColumn":20},{"ruleId":"599","severity":1,"message":"758","line":284,"column":11,"nodeType":"601","messageId":"602","endLine":284,"endColumn":23},{"ruleId":"599","severity":1,"message":"600","line":1,"column":16,"nodeType":"601","messageId":"602","endLine":1,"endColumn":27},{"ruleId":"599","severity":1,"message":"693","line":5,"column":9,"nodeType":"601","messageId":"602","endLine":5,"endColumn":16},{"ruleId":"599","severity":1,"message":"694","line":6,"column":9,"nodeType":"601","messageId":"602","endLine":6,"endColumn":15},{"ruleId":"599","severity":1,"message":"620","line":6,"column":36,"nodeType":"601","messageId":"602","endLine":6,"endColumn":47},{"ruleId":"599","severity":1,"message":"695","line":6,"column":49,"nodeType":"601","messageId":"602","endLine":6,"endColumn":53},{"ruleId":"599","severity":1,"message":"696","line":6,"column":55,"nodeType":"601","messageId":"602","endLine":6,"endColumn":63},{"ruleId":"599","severity":1,"message":"697","line":6,"column":65,"nodeType":"601","messageId":"602","endLine":6,"endColumn":70},{"ruleId":"599","severity":1,"message":"698","line":6,"column":72,"nodeType":"601","messageId":"602","endLine":6,"endColumn":81},{"ruleId":"599","severity":1,"message":"699","line":10,"column":8,"nodeType":"601","messageId":"602","endLine":10,"endColumn":19},{"ruleId":"599","severity":1,"message":"700","line":11,"column":8,"nodeType":"601","messageId":"602","endLine":11,"endColumn":23},{"ruleId":"599","severity":1,"message":"685","line":15,"column":8,"nodeType":"601","messageId":"602","endLine":15,"endColumn":21},{"ruleId":"599","severity":1,"message":"785","line":17,"column":8,"nodeType":"601","messageId":"602","endLine":17,"endColumn":14},{"ruleId":"599","severity":1,"message":"786","line":18,"column":8,"nodeType":"601","messageId":"602","endLine":18,"endColumn":12},{"ruleId":"599","severity":1,"message":"629","line":99,"column":11,"nodeType":"601","messageId":"602","endLine":99,"endColumn":21},{"ruleId":"599","severity":1,"message":"689","line":100,"column":12,"nodeType":"601","messageId":"602","endLine":100,"endColumn":19},{"ruleId":"599","severity":1,"message":"630","line":100,"column":21,"nodeType":"601","messageId":"602","endLine":100,"endColumn":31},{"ruleId":"599","severity":1,"message":"701","line":106,"column":12,"nodeType":"601","messageId":"602","endLine":106,"endColumn":34},{"ruleId":"599","severity":1,"message":"787","line":108,"column":12,"nodeType":"601","messageId":"602","endLine":108,"endColumn":25},{"ruleId":"599","severity":1,"message":"788","line":108,"column":27,"nodeType":"601","messageId":"602","endLine":108,"endColumn":43},{"ruleId":"599","severity":1,"message":"702","line":109,"column":12,"nodeType":"601","messageId":"602","endLine":109,"endColumn":25},{"ruleId":"599","severity":1,"message":"789","line":109,"column":27,"nodeType":"601","messageId":"602","endLine":109,"endColumn":43},{"ruleId":"649","severity":1,"message":"650","line":121,"column":70,"nodeType":"651","messageId":"652","endLine":121,"endColumn":72},{"ruleId":"649","severity":1,"message":"650","line":121,"column":99,"nodeType":"651","messageId":"652","endLine":121,"endColumn":101},{"ruleId":"649","severity":1,"message":"653","line":121,"column":99,"nodeType":"651","messageId":"652","endLine":121,"endColumn":101},{"ruleId":"649","severity":1,"message":"653","line":121,"column":142,"nodeType":"651","messageId":"652","endLine":121,"endColumn":144},{"ruleId":"599","severity":1,"message":"790","line":4,"column":8,"nodeType":"601","messageId":"602","endLine":4,"endColumn":17},{"ruleId":"599","severity":1,"message":"791","line":8,"column":9,"nodeType":"601","messageId":"602","endLine":8,"endColumn":24},{"ruleId":"599","severity":1,"message":"792","line":16,"column":8,"nodeType":"601","messageId":"602","endLine":16,"endColumn":16},{"ruleId":"599","severity":1,"message":"793","line":17,"column":8,"nodeType":"601","messageId":"602","endLine":17,"endColumn":15},{"ruleId":"599","severity":1,"message":"794","line":18,"column":8,"nodeType":"601","messageId":"602","endLine":18,"endColumn":18},{"ruleId":"599","severity":1,"message":"661","line":31,"column":9,"nodeType":"601","messageId":"602","endLine":31,"endColumn":19},{"ruleId":"599","severity":1,"message":"662","line":132,"column":21,"nodeType":"601","messageId":"602","endLine":132,"endColumn":33},{"ruleId":"599","severity":1,"message":"663","line":133,"column":11,"nodeType":"601","messageId":"602","endLine":133,"endColumn":23},{"ruleId":"599","severity":1,"message":"664","line":134,"column":11,"nodeType":"601","messageId":"602","endLine":134,"endColumn":30},{"ruleId":"599","severity":1,"message":"665","line":135,"column":11,"nodeType":"601","messageId":"602","endLine":135,"endColumn":34},{"ruleId":"599","severity":1,"message":"666","line":136,"column":11,"nodeType":"601","messageId":"602","endLine":136,"endColumn":23},{"ruleId":"599","severity":1,"message":"632","line":137,"column":19,"nodeType":"601","messageId":"602","endLine":137,"endColumn":27},{"ruleId":"599","severity":1,"message":"667","line":138,"column":19,"nodeType":"601","messageId":"602","endLine":138,"endColumn":28},{"ruleId":"599","severity":1,"message":"668","line":141,"column":20,"nodeType":"601","messageId":"602","endLine":141,"endColumn":29},{"ruleId":"599","severity":1,"message":"669","line":145,"column":12,"nodeType":"601","messageId":"602","endLine":145,"endColumn":19},{"ruleId":"599","severity":1,"message":"670","line":145,"column":21,"nodeType":"601","messageId":"602","endLine":145,"endColumn":31},{"ruleId":"599","severity":1,"message":"671","line":155,"column":12,"nodeType":"601","messageId":"602","endLine":155,"endColumn":25},{"ruleId":"656","severity":1,"message":"657","line":176,"column":69,"nodeType":"658","messageId":"659","endLine":176,"endColumn":71},{"ruleId":"656","severity":1,"message":"672","line":190,"column":19,"nodeType":"658","messageId":"659","endLine":190,"endColumn":21},{"ruleId":"795","severity":1,"message":"796","line":190,"column":58,"nodeType":"797","messageId":"798","endLine":190,"endColumn":62},{"ruleId":"599","severity":1,"message":"673","line":197,"column":15,"nodeType":"601","messageId":"602","endLine":197,"endColumn":24},{"ruleId":"656","severity":1,"message":"657","line":221,"column":80,"nodeType":"658","messageId":"659","endLine":221,"endColumn":82},{"ruleId":"656","severity":1,"message":"657","line":222,"column":97,"nodeType":"658","messageId":"659","endLine":222,"endColumn":99},{"ruleId":"656","severity":1,"message":"657","line":223,"column":74,"nodeType":"658","messageId":"659","endLine":223,"endColumn":76},{"ruleId":"656","severity":1,"message":"657","line":224,"column":100,"nodeType":"658","messageId":"659","endLine":224,"endColumn":102},{"ruleId":"599","severity":1,"message":"674","line":226,"column":19,"nodeType":"601","messageId":"602","endLine":226,"endColumn":25},{"ruleId":"642","severity":1,"message":"675","line":264,"column":8,"nodeType":"644","endLine":264,"endColumn":10,"suggestions":"799"},{"ruleId":"599","severity":1,"message":"800","line":265,"column":11,"nodeType":"601","messageId":"602","endLine":265,"endColumn":28},{"ruleId":"599","severity":1,"message":"677","line":281,"column":11,"nodeType":"601","messageId":"602","endLine":281,"endColumn":19},{"ruleId":"599","severity":1,"message":"801","line":296,"column":11,"nodeType":"601","messageId":"602","endLine":296,"endColumn":33},{"ruleId":"599","severity":1,"message":"678","line":302,"column":15,"nodeType":"601","messageId":"602","endLine":302,"endColumn":27},{"ruleId":"599","severity":1,"message":"802","line":347,"column":11,"nodeType":"601","messageId":"602","endLine":347,"endColumn":39},{"ruleId":"656","severity":1,"message":"657","line":408,"column":62,"nodeType":"658","messageId":"659","endLine":408,"endColumn":64},{"ruleId":"599","severity":1,"message":"679","line":432,"column":27,"nodeType":"601","messageId":"602","endLine":432,"endColumn":35},{"ruleId":"599","severity":1,"message":"679","line":434,"column":27,"nodeType":"601","messageId":"602","endLine":434,"endColumn":35},{"ruleId":"599","severity":1,"message":"803","line":450,"column":11,"nodeType":"601","messageId":"602","endLine":450,"endColumn":29},{"ruleId":"599","severity":1,"message":"804","line":460,"column":11,"nodeType":"601","messageId":"602","endLine":460,"endColumn":31},{"ruleId":"599","severity":1,"message":"805","line":527,"column":11,"nodeType":"601","messageId":"602","endLine":527,"endColumn":26},{"ruleId":"599","severity":1,"message":"806","line":535,"column":11,"nodeType":"601","messageId":"602","endLine":535,"endColumn":24},{"ruleId":"656","severity":1,"message":"657","line":560,"column":28,"nodeType":"658","messageId":"659","endLine":560,"endColumn":30},{"ruleId":"656","severity":1,"message":"657","line":562,"column":35,"nodeType":"658","messageId":"659","endLine":562,"endColumn":37},{"ruleId":"642","severity":1,"message":"807","line":591,"column":8,"nodeType":"644","endLine":592,"endColumn":72,"suggestions":"808"},{"ruleId":"599","severity":1,"message":"680","line":594,"column":9,"nodeType":"601","messageId":"602","endLine":594,"endColumn":19},{"ruleId":"599","severity":1,"message":"809","line":604,"column":9,"nodeType":"601","messageId":"602","endLine":604,"endColumn":16},{"ruleId":"599","severity":1,"message":"810","line":609,"column":9,"nodeType":"601","messageId":"602","endLine":609,"endColumn":26},{"ruleId":"599","severity":1,"message":"811","line":614,"column":9,"nodeType":"601","messageId":"602","endLine":614,"endColumn":22},{"ruleId":"599","severity":1,"message":"812","line":619,"column":9,"nodeType":"601","messageId":"602","endLine":619,"endColumn":23},{"ruleId":"599","severity":1,"message":"813","line":629,"column":9,"nodeType":"601","messageId":"602","endLine":629,"endColumn":32},{"ruleId":"599","severity":1,"message":"814","line":634,"column":9,"nodeType":"601","messageId":"602","endLine":634,"endColumn":18},{"ruleId":"599","severity":1,"message":"815","line":639,"column":9,"nodeType":"601","messageId":"602","endLine":639,"endColumn":21},{"ruleId":"638","severity":1,"message":"639","line":647,"column":65,"nodeType":"640","messageId":"641","endLine":647,"endColumn":67},{"ruleId":"599","severity":1,"message":"816","line":657,"column":11,"nodeType":"601","messageId":"602","endLine":657,"endColumn":23},{"ruleId":"656","severity":1,"message":"672","line":722,"column":123,"nodeType":"658","messageId":"659","endLine":722,"endColumn":125},{"ruleId":"599","severity":1,"message":"759","line":3,"column":9,"nodeType":"601","messageId":"602","endLine":3,"endColumn":23},{"ruleId":"599","severity":1,"message":"681","line":6,"column":9,"nodeType":"601","messageId":"602","endLine":6,"endColumn":14},{"ruleId":"599","severity":1,"message":"682","line":6,"column":16,"nodeType":"601","messageId":"602","endLine":6,"endColumn":25},{"ruleId":"599","severity":1,"message":"616","line":6,"column":27,"nodeType":"601","messageId":"602","endLine":6,"endColumn":38},{"ruleId":"599","severity":1,"message":"683","line":6,"column":40,"nodeType":"601","messageId":"602","endLine":6,"endColumn":51},{"ruleId":"599","severity":1,"message":"694","line":7,"column":8,"nodeType":"601","messageId":"602","endLine":7,"endColumn":14},{"ruleId":"599","severity":1,"message":"760","line":101,"column":11,"nodeType":"601","messageId":"602","endLine":101,"endColumn":18},{"ruleId":"599","severity":1,"message":"743","line":102,"column":12,"nodeType":"601","messageId":"602","endLine":102,"endColumn":20},{"ruleId":"599","severity":1,"message":"630","line":104,"column":21,"nodeType":"601","messageId":"602","endLine":104,"endColumn":31},{"ruleId":"599","severity":1,"message":"690","line":105,"column":12,"nodeType":"601","messageId":"602","endLine":105,"endColumn":19},{"ruleId":"599","severity":1,"message":"745","line":105,"column":21,"nodeType":"601","messageId":"602","endLine":105,"endColumn":31},{"ruleId":"649","severity":1,"message":"653","line":153,"column":55,"nodeType":"651","messageId":"652","endLine":153,"endColumn":57},{"ruleId":"649","severity":1,"message":"653","line":153,"column":96,"nodeType":"651","messageId":"652","endLine":153,"endColumn":98},{"ruleId":"649","severity":1,"message":"653","line":164,"column":55,"nodeType":"651","messageId":"652","endLine":164,"endColumn":57},{"ruleId":"649","severity":1,"message":"653","line":164,"column":96,"nodeType":"651","messageId":"652","endLine":164,"endColumn":98},{"ruleId":"649","severity":1,"message":"653","line":175,"column":57,"nodeType":"651","messageId":"652","endLine":175,"endColumn":59},{"ruleId":"649","severity":1,"message":"653","line":175,"column":98,"nodeType":"651","messageId":"652","endLine":175,"endColumn":100},{"ruleId":"642","severity":1,"message":"761","line":222,"column":8,"nodeType":"644","endLine":222,"endColumn":10,"suggestions":"817"},{"ruleId":"599","severity":1,"message":"673","line":225,"column":15,"nodeType":"601","messageId":"602","endLine":225,"endColumn":24},{"ruleId":"656","severity":1,"message":"657","line":238,"column":75,"nodeType":"658","messageId":"659","endLine":238,"endColumn":77},{"ruleId":"599","severity":1,"message":"758","line":264,"column":11,"nodeType":"601","messageId":"602","endLine":264,"endColumn":23},"no-native-reassign",["818"],"no-negated-in-lhs",["819"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'PatientDashboard' is defined but never used.","'DualListBox' is defined but never used.","'PropTypes' is defined but never used.","'withStyles' is defined but never used.","'ButtonMui' is defined but never used.","'Col' is defined but never used.","'Step' is defined but never used.","'Segment' is defined but never used.","'Icon' is defined but never used.","'DataGrid' is defined but never used.","'Box' is defined but never used.","'ModalFooter' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Controller' is defined but never used.","'FormControl' is defined but never used.","'Typography' is defined but never used.","'Autocomplete' is defined but never used.","'DateTimePicker' is defined but never used.","'Stack' is defined but never used.","'icon' is assigned a value but never used.","'checkedIcon' is assigned a value but never used.","'appointmentColumns' is assigned a value but never used.","'appointments' is assigned a value but never used.","'userDetail' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'today' is assigned a value but never used.","'setToday' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'control' is assigned a value but never used.","'checkOutObj' is assigned a value but never used.","'setCheckOutObj' is assigned a value but never used.","'setCheckInObj' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'patientObj.id'. Either include it or remove the dependency array.","ArrayExpression",["820"],"'visitTypesRows' is assigned a value but never used.","'onChangeDate' is assigned a value but never used.","'columns' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","'onDelete' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'onError' is assigned a value but never used.","'FaUserPlus' is defined but never used.","'isSubmitting' is assigned a value but never used.","'watchPnumber' is assigned a value but never used.","'watchAltPhonenumber' is assigned a value but never used.","'watchContactPhoneNumber' is assigned a value but never used.","'watchShowAge' is assigned a value but never used.","'setMinDOB' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'genders' is assigned a value but never used.","'setGenders' is assigned a value but never used.","'checkNINError' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'dateParts' is assigned a value but never used.","'gender' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'patientId' and 'setValue'. Either include them or remove the dependency array.",["821"],"'checkNIN' is assigned a value but never used.","'contactEmail' is assigned a value but never used.","'response' is assigned a value but never used.","'genderRows' is assigned a value but never used.","'Modal' is defined but never used.","'ModalBody' is defined but never used.","'ModalHeader' is defined but never used.","'FormGroup' is defined but never used.","'MaterialTable' is defined but never used.","'Biometrics' is defined but never used.","'BiometricsList' is defined but never used.","'setPatients' is assigned a value but never used.","'loading' is assigned a value but never used.","'patient' is assigned a value but never used.","'toggle' is assigned a value but never used.","'enablePPIColumns' is assigned a value but never used.","'useForm' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'MenuItem' is defined but never used.","'Paper' is defined but never used.","'TextField' is defined but never used.","'PatientCard' is defined but never used.","'ClientDashboard' is defined but never used.","'patientBiometricStatus' is assigned a value but never used.","'checkinStatus' is assigned a value but never used.",["822"],"React Hook useEffect has a missing dependency: 'loadPatientVisits'. Either include it or remove the dependency array.",["823"],"'AccordionActions' is defined but never used.","'Divider' is defined but never used.","'CaptureBiometric' is defined but never used.","'toggleModal' is assigned a value but never used.","'devices' is assigned a value but never used.","'patientObjID' is assigned a value but never used.","'useRef' is defined but never used.","'Form' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardHeader' is defined but never used.","'Select' is defined but never used.","'Button2' is defined but never used.","'ThumbUpIcon' is defined but never used.","'red' is defined but never used.","'Dimmer' is defined but never used.","'Loader' is defined but never used.","'Image' is defined but never used.","'CircularProgress' is defined but never used.","'Fab' is defined but never used.","'CheckIcon' is defined but never used.","'UpgradeIcon' is defined but never used.","'showCapture' is assigned a value but never used.","'tryAgain' is assigned a value but never used.","'selectedFingers' is assigned a value but never used.","'buttonSx' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clear_storelist' and 'getPersonBiometrics'. Either include them or remove the dependency array.",["824"],"'biometricFingers' is assigned a value but never used.","'checkDevice' is assigned a value but never used.","'Link' is defined but never used.","'MdDashboard' is defined but never used.","'Menu' is defined but never used.","'MenuList' is defined but never used.","'MenuButton' is defined but never used.","'Label' is defined but never used.","'TablePagination' is defined but never used.","'patients' is assigned a value but never used.","'setPermissions' is assigned a value but never used.","'setPatient' is assigned a value but never used.","'searchParams' is assigned a value but never used.","'setSearchParams' is assigned a value but never used.","'totalPages' is assigned a value but never used.","'setTotalPages' is assigned a value but never used.","'totalRecords' is assigned a value but never used.","'setTotalRecords' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'rowsPerPage' is assigned a value but never used.","'setRowsPerPage' is assigned a value but never used.","'getAddress' is assigned a value but never used.","'getGender' is assigned a value but never used.","'localization' is assigned a value but never used.","'ToastContainer' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadPatients'. Either include it or remove the dependency array.",["825"],"'setDevices' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'objValues.device'. Either include it or remove the dependency array.",["826"],"'PatientList' is defined but never used.","'Breadcrumbs' is defined but never used.","'permissions' is assigned a value but never used.","'handleBiometricCapture' is assigned a value but never used.","'setPatientBiometricStatus' is assigned a value but never used.","'biometricsModuleInstalled' is assigned a value but never used.","'setBiometricsModuleInstalled' is assigned a value but never used.",["827"],"'MdPerson' is defined but never used.","'ArrowDropDownIcon' is defined but never used.","'VisibilityIcon' is defined but never used.","'ListItemText' is defined but never used.","'ListItemIcon' is defined but never used.","'ContentCut' is defined but never used.","'FaEye' is defined but never used.","'setSelectedIndex' is assigned a value but never used.","'handleMenuItemClick' is assigned a value but never used.","'MdDeleteForever' is defined but never used.","'MdModeEdit' is defined but never used.","'moment' is defined but never used.","'Swal' is defined but never used.","'patientVisits' is assigned a value but never used.","'setPatientVisits' is assigned a value but never used.","'setCheckinStatus' is assigned a value but never used.","'MatButton' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'SaveIcon' is defined but never used.","'AddIcon' is defined but never used.","'CancelIcon' is defined but never used.","valid-typeof","Invalid typeof comparison value.","Literal","invalidValue",["828"],"'handleAddRelative' is assigned a value but never used.","'handleSaveRelationship' is assigned a value but never used.","'handleCancelSaveRelationship' is assigned a value but never used.","'handleEditRelative' is assigned a value but never used.","'handleDeleteRelative' is assigned a value but never used.","'onCountryChange' is assigned a value but never used.","'onStateChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'districtValue'. Either include it or remove the dependency array.",["829"],"'sexRows' is assigned a value but never used.","'maritalStatusRows' is assigned a value but never used.","'educationRows' is assigned a value but never used.","'occupationRows' is assigned a value but never used.","'topLevelUnitCountryRows' is assigned a value but never used.","'stateRows' is assigned a value but never used.","'districtRows' is assigned a value but never used.","'handleCancel' is assigned a value but never used.",["830"],"no-global-assign","no-unsafe-negation",{"desc":"831","fix":"832"},{"desc":"833","fix":"834"},{"desc":"831","fix":"835"},{"desc":"836","fix":"837"},{"desc":"838","fix":"839"},{"desc":"840","fix":"841"},{"desc":"842","fix":"843"},{"desc":"831","fix":"844"},{"desc":"833","fix":"845"},{"desc":"846","fix":"847"},{"desc":"840","fix":"848"},"Update the dependencies array to be: [patientObj.id]",{"range":"849","text":"850"},"Update the dependencies array to be: [patientId, setValue]",{"range":"851","text":"852"},{"range":"853","text":"850"},"Update the dependencies array to be: [loadPatientVisits]",{"range":"854","text":"855"},"Update the dependencies array to be: [clear_storelist, getPersonBiometrics]",{"range":"856","text":"857"},"Update the dependencies array to be: [loadPatients]",{"range":"858","text":"859"},"Update the dependencies array to be: [objValues.device]",{"range":"860","text":"861"},{"range":"862","text":"850"},{"range":"863","text":"852"},"Update the dependencies array to be: [loadSexes, loadMaritalStatus, loadEducation, loadOccupation, loadRelationships, loadTopLevelCountry, getPatient, districtValue]",{"range":"864","text":"865"},{"range":"866","text":"859"},[8242,8244],"[patientObj.id]",[11563,11565],"[patientId, setValue]",[8173,8175],[8278,8280],"[loadPatientVisits]",[6966,6968],"[clear_storelist, getPersonBiometrics]",[8879,8881],"[loadPatients]",[3598,3600],"[objValues.device]",[6418,6420],[11768,11770],[25144,25262],"[loadSexes, loadMaritalStatus, loadEducation, loadOccupation, loadRelationships, loadTopLevelCountry, getPatient, districtValue]",[8876,8878]]