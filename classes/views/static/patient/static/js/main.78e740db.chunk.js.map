{"version":3,"sources":["api.js","main/webapp/components/RegisterPatient.js","main/webapp/components/PatientCard.js","main/webapp/components/PatientDashboard.js","main/webapp/components/SplitActionButton.js","main/webapp/components/Dashboard.js","main/webapp/components/PatientVitals.js","main/webapp/components/Add-Patient-Vitals.js","App.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","library","add","faCheckSquare","faCoffee","faEdit","faTrash","useStyles","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","flexGrow","maxWidth","demo","backgroundColor","palette","background","default","inline","schema","yup","shape","dateOfRegistration","required","hospitalNumber","firstName","middleName","nullable","lastName","sex","employmentStatus","highestQualification","maritalStatus","dob","dateOfBirth","age","pnumber","altPhonenumber","email","address","landmark","countryId","stateId","district","UserRegistration","props","patientId","_useForm","useForm","resolver","yupResolver","register","setValue","getValues","setError","handleSubmit","errors","formState","_useState","useState","Date","toISOString","substr","replace","_useState2","Object","slicedToArray","today","_useState3","_useState4","contacts","setContacts","_useState5","_useState6","saving","_useState7","_useState8","ageDisabled","setAgeDisabled","_useState9","_useState10","showRelative","setShowRelative","_useState11","_useState12","editRelative","setEditRelative","_useState13","_useState14","genders","setGenders","_useState15","_useState16","maritalStatusOptions","setMaritalStatusOptions","_useState17","_useState18","educationOptions","setEducationOptions","_useState19","_useState20","occupationOptions","setOccupationOptions","_useState21","_useState22","relationshipOptions","setRelationshipOptions","_useState23","_useState24","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","_useState25","_useState26","stateUnitOptions","setStateUnitOptions","_useState27","_useState28","districtUnitOptions","setDistrictUnitOptions","userDetail","state","user","classes","history","useHistory","locationState","useLocation","getPatient","useCallback","asyncToGenerator","regenerator_default","a","mark","_callee","response","patient","_contacts","identifiers","contactPoint","phone","altphone","country","gender","education","stateOptions","districtOptions","wrap","_context","prev","next","axios","concat","baseUrl","headers","Authorization","sent","data","contact","identifier","find","obj","type","length","otherName","surname","value","id","format","loadOrganisationUnitsByParentId","city","line","stop","onSubmit","_ref2","_callee2","patientForm","_context2","active","organisationUnitId","postalCode","deceased","deceasedDateTime","genderId","assignerId","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","push","put","post","t0","console","log","_x","apply","this","arguments","loadGenders","_callee3","_context3","loadMaritalStatus","_callee4","_context4","loadEducation","_callee5","_context5","loadOccupation","_callee6","_context6","loadRelationships","_callee7","_context7","loadTopLevelCountry","_callee8","_context8","_ref9","_callee9","parentId","_context9","abrupt","_x2","onCountryChange","_ref10","_callee10","e","_context10","target","_x3","onStateChange","_ref11","_callee11","_context11","_x4","handleDateOfBirthChange","useEffect","genderRows","maritalStatusRows","educationRows","occupationRows","relationshipRows","topLevelUnitCountryRows","stateRows","districtRows","map","index","react_default","createElement","key","maritalStatusOption","educationOption","occupationOption","relationshipOption","topLevelUnitCountryOption","name","stateUnitOption","districtUnitOption","Fragment","react_toastify","autoClose","hideProgressBar","Card","className","CardContent","react_router_dom","to","pathname","Button","variant","color","style","fontWeight","startIcon","index_esm","textTransform","Form","error","FormGroup","Label","for","assign","max","border","message","defaultChecked","onChange","birthDate","age_now","getFullYear","m","getMonth","getDate","handleDobChange","disabled","currentDate","setDate","setMonth","moment","toDate","handleAgeChange","placeholder","item","relationshipId","relationship","getRelationship","firstname","onClick","relative","handleEditRelative","index_es","icon","setTimeout","splice","handleDeleteRelative","relationshipType","cfirstName","cmiddleName","clastName","contactPhoneNumber","contactEmail","contactAddress","fullName","shouldFocus","Add_default","Spinner","Save_default","Cancel_default","withStyles","heading","fontSize","typography","pxToRem","secondaryHeading","text","secondary","verticalAlign","details","column","flexBasis","helper","link","primary","main","textDecoration","&:hover","patientObj","Accordion","defaultExpanded","AccordionSummary","Row","Col","md","root2","getHospitalNumber","split","calculate_age","phoneContact","getPhone","AccordionDetails","classNames","Typography","Label_Label","size","Detail","Divider","AccordionActions","CheckBoxOutlineBlank_default","checkedIcon","CheckBox_default","appointmentColumns","field","headerName","editable","description","sortable","valueGetter","params","row","appointments","newDate","borderLeft","divider","padding","loading","control","modal","setModal","checkinStatus","setCheckinStatus","modalCheckOut","setModalCheckOut","services","setServices","checkInServices","selectedServices","setSelectedServices","patientVisits","setPatientVisits","facilityId","personId","visitEndDate","visitStartDate","serviceIds","visitDto","checkInObj","loadServices","Swal","fire","title","loadPatientVisits","visits","checkOutDate","service","MenuItem","moduleServiceCode","moduleServiceName","panes","menuItem","render","Tab","Pane","dist_default","columns","filtering","isLoading","checkInDate","status","options","headerStyle","exportButton","searchFieldAlignment","pageSizeOptions","pageSize","debounceInterval","DataGrid","rows","rowsPerPageOptions","checkboxSelection","disableSelectionOnClick","onCancelCheckIn","onCancelCheckOut","checkInServicesID","Card_Card","CardContent_CardContent","components_PatientCard","Button_Button","Modal","isOpen","toggle","ModalHeader","ModalBody","preventDefault","then","toast","success","catch","Paper","gridRowGap","Grid","container","xs","FormControl","Autocomplete","multiple","getOptionLabel","option","i","objectSpread","renderOption","_ref5","selected","Checkbox","marginRight","checked","renderInput","TextField","label","getVisitID","SplitActionButton","_React$useState","React","_React$useState2","open","setOpen","anchorRef","useRef","_React$useState3","_React$useState4","selectedIndex","handleClose","react","ButtonGroup","ref","actions","info","Typography_Typography","Divider_Divider","orientation","flexItem","aria-controls","undefined","aria-expanded","aria-label","aria-haspopup","prevOpen","fa_index_esm","Popper","anchorEl","current","role","transition","disablePortal","zIndex","_ref","TransitionProps","placement","Grow","transformOrigin","sx","ClickAwayListener","onClickAway","MenuList","autoFocusItem","slice","Math","random","& > *","input","md_index_esm","SyncList","patients","setPatients","loadPatients","onDelete","delete","reload","onCancelDelete","actionItems","es_Card","CardBody","searchFieldStyle","margingLeft","ModalFooter","PatientVitals","Box","justifyContent","icons_material_Add_default","AddPatientVitals","InData","bodyWeight","Weight","diastolic","Diastolic","encounterDate","DateOfVitalSigns","Height","systolic","Systolic","timer","fullWidth","LocalizationProvider","dateAdapter","AdapterDateFns","dist_index_esm","defaultValue","_ref2$field","fieldState","DatePicker","helperText","_ref3","_ref3$field","_ref4","_ref4$field","_ref5$field","_ref6","_ref6$field","_ref7","_ref7$field","_ref8","_ref8$field","_ref9$field","App","react_router","path","RegisterPatientPage","PatientDashboardPage","PatientVitalsPage","AddPatientVitalsPage","Dashboard","components_PatientDashboard","RegisterPatient","components_PatientVitals","Add_Patient_Vitals","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78e740db.chunk.js","sourcesContent":["export const token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n\r\n/*\r\n export const url =  'http://localhost:8282/api/v1/';\r\n export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjU1NjczODM2fQ._I-j7beuVL644luQJnFiGD5cmVRVMJxw0Cp8X1_I9G8aUHSV-5gBbpyxcHzghgltRHsy9sdABJCLdtuZRir0qQ'\r\n*/\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Form, FormGroup, Label, Spinner,} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\nimport \"./patient.css\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n}));\r\n\r\nconst schema = yup.object().shape({\r\n    dateOfRegistration: yup.date().required(),\r\n    hospitalNumber: yup.string().required(),\r\n    firstName: yup.string().required(),\r\n    middleName: yup.string().nullable(),\r\n    lastName: yup.string().required(),\r\n    sex: yup.number().required(),\r\n    employmentStatus: yup.number().required(),\r\n    highestQualification: yup.number().required(),\r\n    maritalStatus: yup.number().required(),\r\n    dob: yup.date().required(),\r\n    dateOfBirth: yup.string().required(),\r\n    age: yup.number(),\r\n    pnumber: yup.string().required(),\r\n    altPhonenumber: yup.string().nullable(),\r\n    email: yup.string().nullable(),\r\n    address: yup.string().nullable(),\r\n    landmark: yup.string().nullable(),\r\n    countryId: yup.number().required(),\r\n    stateId: yup.number().required(),\r\n    district: yup.number().nullable(),\r\n});\r\n\r\nconst UserRegistration = (props) => {\r\n    const { register, setValue, getValues, setError, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [stateUnitOptions, setStateUnitOptions]= useState([]);\r\n    const [districtUnitOptions, setDistrictUnitOptions]= useState([]);\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const location = useLocation();\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n\r\n    const getNames = (relationship) => {\r\n        const surname = relationship.surname;\r\n        const firstName = relationship.firstname;\r\n        const otherName = relationship.otherName ? relationship.otherName : '';\r\n        return surname + ', ' + firstName + ' ' + otherName;\r\n    }\r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const getPhoneContactPoint = (contactPoint) => {\r\n        return contactPoint ? contactPoint.value : '';\r\n    };\r\n    const getAddress = (address) => {\r\n        return address && address.line && address.line.length > 0 ? address.line[0] : '';\r\n    };\r\n    const getPatient = useCallback(async () => {\r\n        if (patientId) {\r\n            const response = await axios.get(`${baseUrl}patient/${patientId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            const patient = response.data;\r\n            const contacts = patient.contact ? patient.contact : [];\r\n            setContacts(contacts.contact);\r\n            const identifiers = patient.identifier;\r\n            const address = patient.address;\r\n            const contactPoint = patient.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            const gender = patient.gender;\r\n            const employmentStatus = patient.employmentStatus;\r\n            const education = patient.education;\r\n            const maritalStatus = patient.maritalStatus;\r\n            setValue('dateOfRegistration', patient.dateOfRegistration);\r\n            setValue('firstName', patient.firstName);\r\n            setValue('middleName', patient.otherName);\r\n            setValue('lastName', patient.surname);\r\n            setValue('hospitalNumber', hospitalNumber ? hospitalNumber.value : '');\r\n            setValue('maritalStatus', maritalStatus.id);\r\n            setValue('employmentStatus', employmentStatus.id);\r\n            setValue('sex', gender.id);\r\n            setValue('highestQualification', education.id);\r\n            setValue('dob', format(new Date(patient.dateOfBirth), 'yyyy-MM-dd'));\r\n            if (country) {\r\n                setValue('countryId', country.countryId);\r\n                const stateOptions = await loadOrganisationUnitsByParentId(country.countryId);\r\n                setStateUnitOptions(stateOptions);\r\n                setValue('stateId', country.stateId);\r\n                const districtOptions = await loadOrganisationUnitsByParentId(country.stateId);\r\n                setDistrictUnitOptions(districtOptions);\r\n                setValue('district', country.district);\r\n                setValue('address', country.city);\r\n                setValue('landmark', country.line[0]);\r\n            }\r\n            setValue('pnumber', phone ? phone.value : null);\r\n            setValue('email', email ? email.value : null);\r\n            setValue('altPhonenumber', altphone ? altphone.value : null);\r\n        }\r\n    }, []);\r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    const handleSaveRelationship = (e) => {\r\n        const relationshipType = getValues(\"relationshipType\");\r\n        const cfirstName = getValues(\"cfirstName\");\r\n        const cmiddleName = getValues(\"cmiddleName\");\r\n        const clastName = getValues(\"clastName\");\r\n        const contactPhoneNumber = getValues(\"contactPhoneNumber\");\r\n        const contactEmail = getValues(\"contactEmail\");\r\n        const contactAddress = getValues(\"contactAddress\");\r\n        if (!relationshipType) {\r\n            setError(\"relationshipType\", {  type: 'custom', message: 'Relationship is required' }, { shouldFocus: true });\r\n            return;\r\n        }\r\n        if (!cfirstName) {\r\n            setError(\"cfirstName\", {  type: 'custom', message: 'FirstName is required' }, { shouldFocus: true });\r\n            return;\r\n        }\r\n        if (!clastName) {\r\n            setError(\"clastName\", {  type: 'custom', message: 'LastName is required' }, { shouldFocus: true });\r\n            return;\r\n        }\r\n\r\n        const contact = {\r\n            \"address\": {\r\n                \"line\": [\r\n                    contactAddress\r\n                ],\r\n            },\r\n            \"contactPoint\": {\r\n                \"type\": \"phone\",\r\n                \"value\": contactPhoneNumber\r\n            },\r\n            \"firstName\": cfirstName,\r\n            \"fullName\": cfirstName + ' ' + cmiddleName + ' ' + clastName,\r\n            \"relationshipId\": relationshipType,\r\n            \"surname\": clastName,\r\n            \"otherName\": cmiddleName\r\n        };\r\n        if (editRelative != null) {\r\n            contacts.splice(editRelative, 1);\r\n            setContacts(contacts.concat(contact));\r\n        } else {\r\n            setContacts(contacts.concat(contact));\r\n        }\r\n        setShowRelative(false);\r\n    };\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            const patientForm = {\r\n                active: true,\r\n                address: [\r\n                    {\r\n                        \"city\": data.address,\r\n                        \"countryId\": data.countryId,\r\n                        \"district\": data.district,\r\n                        \"line\": [\r\n                            data.landmark\r\n                        ],\r\n                        \"organisationUnitId\": 0,\r\n                        \"postalCode\": \"\",\r\n                        \"stateId\": data.stateId\r\n                    }\r\n                ],\r\n                contact: contacts,\r\n                contactPoint: [],\r\n                dateOfBirth: new Date(data.dob),\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: data.firstName,\r\n                genderId: data.sex,\r\n                identifier: [\r\n                    {\r\n                        \"assignerId\": 1,\r\n                        \"type\": \"HospitalNumber\",\r\n                        \"value\": data.hospitalNumber\r\n                    }\r\n                ],\r\n                otherName: data.middleName,\r\n                maritalStatusId: data.maritalStatus,\r\n                surname: data.lastName,\r\n                educationId: data.highestQualification,\r\n                employmentStatusId: data.employmentStatus,\r\n                dateOfRegistration: data.dateOfRegistration,\r\n                isDateOfBirthEstimated: data.dateOfBirth == \"Actual\" ? false : true\r\n            };\r\n            const phone = {\r\n                \"type\": \"phone\",\r\n                \"value\": data.pnumber\r\n            };\r\n            if (data.email) {\r\n                const email = {\r\n                    \"type\": \"email\",\r\n                    \"value\": data.email\r\n                }\r\n                patientForm.contactPoint.push(email);\r\n            }\r\n            if (data.altPhonenumber) {\r\n                const altPhonenumber = {\r\n                    \"type\": \"altphone\",\r\n                    \"value\": data.altPhonenumber\r\n                }\r\n                patientForm.contactPoint.push(altPhonenumber);\r\n            }\r\n            patientForm.contactPoint.push(phone);\r\n            if (patientId) {\r\n                patientForm.id = null;\r\n                const response = await axios.put(`${baseUrl}patient/${patientId}`, patientForm, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            } else {\r\n                const response = await axios.post(`${baseUrl}patient/`, patientForm, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            }\r\n            history.push('/');\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n    const onError = (errors) => {\r\n        console.error(errors)\r\n    }\r\n    const handleEditRelative = (relative, index) => {\r\n        setValue(\"relationshipType\", relative.relationshipId);\r\n        setValue(\"cfirstName\", relative.firstname);\r\n        setValue(\"cmiddleName\", relative.otherName);\r\n        setValue(\"clastName\", relative.surname);\r\n        setValue(\"contactPhoneNumber\", relative.contactPoint ? relative.contactPoint.value : '');\r\n        setValue(\"contactAddress\", relative.address && relative.address.line && relative.address.line.length > 0 ? relative.address.line[0] : '');\r\n        setShowRelative(true);\r\n        setEditRelative(index);\r\n    };\r\n    const handleDeleteRelative = (index) => {\r\n        setTimeout(() => {\r\n            contacts.splice(index, 1);\r\n            setContacts(contacts);\r\n            setShowRelative(true);\r\n            setShowRelative(false);\r\n        }, 500);\r\n    };\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/GENDER`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n          \r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n    const onCountryChange = async (e) => {\r\n        if (e.target.value) {\r\n            const stateOptions = await loadOrganisationUnitsByParentId(e.target.value);\r\n            setStateUnitOptions(stateOptions);\r\n        } else {\r\n            setStateUnitOptions([]);\r\n        }\r\n    };\r\n    const onStateChange = async (e) => {\r\n        if (e.target.value) {\r\n            const districtOptions = await loadOrganisationUnitsByParentId(e.target.value);\r\n            setDistrictUnitOptions(districtOptions);\r\n        } else {\r\n            setDistrictUnitOptions([]);\r\n        }\r\n    };\r\n    \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            setValue('age', age_now);\r\n        } else {\r\n            setValue('age', null);\r\n        }\r\n    }\r\n\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dob = estDob.add((e.target.value * -1), 'years');\r\n            setValue('dob', format(new Date(dob.toDate()), 'yyyy-MM-dd'));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();\r\n        getPatient();\r\n    }, [loadGenders, loadMaritalStatus, loadEducation, loadOccupation, loadRelationships, loadTopLevelCountry, getPatient]);\r\n\r\n    let genderRows = null;\r\n    let maritalStatusRows = null;\r\n    let educationRows = null;\r\n    let occupationRows = null;\r\n    let relationshipRows = null;\r\n    let topLevelUnitCountryRows = null;\r\n    let stateRows = null;\r\n    let districtRows = null;\r\n    if (genders && genders.length > 0) {\r\n        genderRows = genders.map((gender, index) => (\r\n            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n        ));\r\n    }\r\n    if (maritalStatusOptions && maritalStatusOptions.length > 0) {\r\n        maritalStatusRows = maritalStatusOptions.map((maritalStatusOption, index) => (\r\n            <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n        ));\r\n    }\r\n    if (educationOptions && educationOptions.length > 0) {\r\n        educationRows = educationOptions.map((educationOption, index) => (\r\n            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n        ));\r\n    }\r\n    if (occupationOptions && occupationOptions.length > 0) {\r\n        occupationRows = occupationOptions.map((occupationOption, index) => (\r\n            <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n        ));\r\n    }\r\n    if (relationshipOptions && relationshipOptions.length > 0) {\r\n        relationshipRows = relationshipOptions.map((relationshipOption, index) => (\r\n            <option key={relationshipOption.id} value={relationshipOption.id}>{relationshipOption.display}</option>\r\n        ));\r\n    }\r\n    if (topLevelUnitCountryOptions && topLevelUnitCountryOptions.length > 0) {\r\n        topLevelUnitCountryRows = topLevelUnitCountryOptions.map((topLevelUnitCountryOption, index) => (\r\n            <option key={topLevelUnitCountryOption.id} value={topLevelUnitCountryOption.id}>{topLevelUnitCountryOption.name}</option>\r\n        ));\r\n    }\r\n    if (stateUnitOptions && stateUnitOptions.length > 0) {\r\n        stateRows = stateUnitOptions.map((stateUnitOption, index) => (\r\n            <option key={stateUnitOption.id} value={stateUnitOption.id}>{stateUnitOption.name}</option>\r\n        ));\r\n    }\r\n    if (districtUnitOptions && districtUnitOptions.length > 0) {\r\n        districtRows = districtUnitOptions.map((districtUnitOption, index) => (\r\n            <option key={districtUnitOption.id} value={districtUnitOption.id}>{districtUnitOption.name}</option>\r\n        ));\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-right ms-1\"\r\n                            style={{backgroundColor:'#04C4D9',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form onSubmit={handleSubmit(onSubmit, onError)}>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#04C4D9\",color:'#fff',fontWeight:'bolder'}}>\r\n                                    <h5 className=\"card-title\">{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration*</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        max={today}\r\n                                                        {...register(\"dateOfRegistration\")}\r\n                                                        style={{border: \"1px solid #04C4D9\"}}\r\n                                                    />\r\n                                                    {errors.dateOfRegistration && <p>{errors.dateOfRegistration.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Patient ID * </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        {...register(\"hospitalNumber\")}\r\n                                                        style={{border: \"1px solid #04C4D9\"}}\r\n                                                    />\r\n                                                    {errors.hospitalNumber && <p>{errors.hospitalNumber.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        {...register(\"firstName\")}\r\n                                                        style={{border: \"1px solid #04C4D9\"}}\r\n                                                    />\r\n                                                    {errors.firstName && <p>{errors.firstName.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        {...register(\"middleName\")}\r\n                                                        style={{border: \"1px solid #04C4D9\"}}\r\n                                                    />\r\n                                                    {errors.middleName && <p>{errors.middleName.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        {...register(\"lastName\")}\r\n                                                        style={{border: \"1px solid #04C4D9\"}}\r\n                                                    />\r\n                                                    {errors.lastName && <p>{errors.lastName.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"sex\"\r\n                                                        id=\"sex\"\r\n                                                        {...register(\"sex\")}\r\n                                                        style={{border: \"1px solid #04C4D9\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        {genderRows}\r\n                                                    </select>\r\n                                                    {errors.sex && <p>{errors.sex.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Employment Status *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"employmentStatus\"\r\n                                                        id=\"employmentStatus\"\r\n                                                        {...register(\"employmentStatus\")}\r\n                                                        style={{border: \"1px solid #04C4D9\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        {occupationRows}\r\n                                                    </select>\r\n                                                    {errors.lastName && <p>{errors.lastName.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Highest Qualification *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"highestQualification\"\r\n                                                        id=\"highestQualification\"\r\n                                                        {...register(\"highestQualification\")}\r\n                                                        style={{border: \"1px solid #04C4D9\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        {educationRows}\r\n                                                    </select>\r\n                                                    {errors.highestQualification && <p>{errors.highestQualification.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Marital Status</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"maritalStatus\"\r\n                                                        id=\"maritalStatus\"\r\n                                                        {...register(\"maritalStatus\")}\r\n                                                        style={{border: \"1px solid #04C4D9\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}></option>\r\n                                                        {maritalStatusRows}\r\n                                                    </select>\r\n                                                    {errors.maritalStatus && <p>{errors.maritalStatus.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                {...register(\"dateOfBirth\")}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #04C4D9\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                {...register(\"dateOfBirth\")}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #04C4D9\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        {...register(\"dob\")}\r\n                                                        onChange={(e) => handleDobChange(e)}\r\n                                                        style={{border: \"1px solid #04C4D9\"}}\r\n                                                    />\r\n                                                    {errors.dob && <p>{errors.dob.message}</p>}\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        {...register(\"age\")}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={(e) => handleAgeChange(e)}\r\n                                                        style={{border: \"1px solid #04C4D9\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#04C4D9\",color:'#fff',fontWeight:'bolder'}}>\r\n                                    <h5 className=\"card-title\">Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"tel\"\r\n                                                    name=\"pnumber\"\r\n                                                    id=\"pnumber\"\r\n                                                    {...register(\"pnumber\")}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    style={{border: \"1px solid #04C4D9\"}}\r\n                                                />\r\n                                                {errors.pnumber && <p>{errors.pnumber.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"tel\"\r\n                                                    name=\"altPhoneNumber\"\r\n                                                    id=\"altPhoneNumber\"\r\n                                                    {...register(\"altPhonenumber\")}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    style={{border: \"1px solid #04C4D9\"}}\r\n                                                />\r\n                                                {errors.altPhonenumber && <p>{errors.altPhonenumber.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    {...register(\"email\")}\r\n                                                    style={{border: \"1px solid #04C4D9\"}}\r\n                                                />\r\n                                                {errors.email && <p>{errors.email.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"country\"\r\n                                                    id=\"country\"\r\n                                                    style={{border: \"1px solid #04C4D9\"}}\r\n                                                    {...register(\"countryId\")}\r\n                                                    onChange={(e) => onCountryChange(e)}>\r\n                                                    <option value={\"\"}></option>\r\n                                                    {topLevelUnitCountryRows}\r\n                                                </select>\r\n                                                {errors.country && <p>{errors.country.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    style={{border: \"1px solid #04C4D9\"}}\r\n                                                    {...register(\"stateId\")}\r\n                                                    onChange={(e) => onStateChange(e)}>\r\n                                                    <option value={\"\"}></option>\r\n                                                    {stateRows}\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    style={{border: \"1px solid #04C4D9\"}}\r\n                                                    {...register(\"district\")}>\r\n                                                    <option value={\"\"}></option>\r\n                                                    {districtRows}\r\n                                                </select>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    style={{border: \"1px solid #04C4D9\"}}\r\n                                                    {...register(\"address\")}\r\n                                                />\r\n                                                {errors.address && <p>{errors.address.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    style={{border: \"1px solid #04C4D9\"}}\r\n                                                    {...register(\"landmark\")}\r\n                                                />\r\n                                                {errors.landmark && <p>{errors.landmark.message}</p>}\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#04C4D9\",color:'#fff',fontWeight:'bolder'}}>\r\n                                    <h5 className=\"card-title\">Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }}>\r\n                                                        <thead>\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index}>\r\n                                                                    <td>{ getRelationship(item.relationshipId) }</td>\r\n                                                                    <td>{ getNames(item) }</td>\r\n                                                                    <td>{ getPhoneContactPoint(item.contactPoint) }</td>\r\n                                                                    <td>{ getAddress(item.address) }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={(e) => handleEditRelative(item, index)}>\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}>\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipType\"\r\n                                                                            id=\"relationshipType\"\r\n                                                                            style={{border: \"1px solid #04C4D9\"}}\r\n                                                                            {...register(\"relationshipType\")}>\r\n                                                                            <option value={\"\"}></option>\r\n                                                                            {relationshipRows}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipType && <p>{errors.relationshipType.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"cfirstName\"\r\n                                                                            id=\"cfirstName\"\r\n                                                                            style={{border: \"1px solid #04C4D9\"}}\r\n                                                                            {...register(\"cfirstName\")}\r\n                                                                        />\r\n                                                                        {errors.cfirstName && <p>{errors.cfirstName.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"cmiddleName\"\r\n                                                                            id=\"cmiddleName\"\r\n                                                                            style={{border: \"1px solid #04C4D9\"}}\r\n                                                                            {...register(\"cmiddleName\")}\r\n                                                                        />\r\n                                                                        {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"clastName\"\r\n                                                                            id=\"clastName\"\r\n                                                                            style={{border: \"1px solid #04C4D9\"}}\r\n                                                                            {...register(\"clastName\")}\r\n                                                                        />\r\n                                                                        {errors.clastName && <p>{errors.clastName.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"contactPhoneNumber\"\r\n                                                                            id=\"contactPhoneNumber\"\r\n                                                                            style={{border: \"1px solid #04C4D9\"}}\r\n                                                                            {...register(\"contactPhoneNumber\")}\r\n                                                                        />\r\n                                                                        {errors.contactPhoneNumber && <p>{errors.contactPhoneNumber.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"contactEmail\"\r\n                                                                            id=\"contactEmail\"\r\n                                                                            style={{border: \"1px solid #04C4D9\"}}\r\n                                                                            {...register(\"contactEmail\")}\r\n                                                                        />\r\n                                                                        {errors.contactEmail && <p>{errors.contactEmail.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"contactAddress\"\r\n                                                                            id=\"contactAddress\"\r\n                                                                            style={{border: \"1px solid #04C4D9\"}}\r\n                                                                            {...register(\"contactAddress\")}\r\n                                                                        />\r\n                                                                        {errors.contactAddress && <p>{errors.contactAddress.message}</p>}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#04C4D9',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {userDetail ===null ? (\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n                                )\r\n                                :\r\n                                (\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n                                )\r\n                            }\r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport {Accordion, AccordionActions, AccordionDetails, AccordionSummary} from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {Button, Label} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {Col, Row} from \"reactstrap\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    icon: {\r\n        verticalAlign: 'bottom',\r\n        height: 20,\r\n        width: 20,\r\n    },\r\n    details: {\r\n        alignItems: 'center',\r\n    },\r\n    column: {\r\n        flexBasis: '20.33%',\r\n    },\r\n    helper: {\r\n        /*borderLeft: `2px solid ${theme.palette.divider}`,\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,*/\r\n    },\r\n    link: {\r\n        color: theme.palette.primary.main,\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n        },\r\n    },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n    const { classes } = props;\r\n    const patientObj = props.patientObj ? props.patientObj : {};\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    const calculate_age = dob => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getPhone = (contactPoint) => {\r\n        const phoneContact = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n        return phoneContact ? phoneContact.value : '';\r\n    };\r\n\r\n    const getAddress = (address) => {\r\n        const city = address && address.address && address.address.length > 0 ? address.address[0].city : null;\r\n        return city;\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Accordion defaultExpanded>\r\n                <AccordionSummary>\r\n\r\n                    <Row>\r\n\r\n                        <Col md={11}>\r\n                            <Row className={\"mt-1\"}>\r\n                                <Col md={12} className={classes.root2}>\r\n                                    <b style={{fontSize: \"25px\",color:'rgb(4, 196, 217)'}}>\r\n                                        {patientObj.surname + \", \" + patientObj.firstName + \" \" + patientObj.otherName}\r\n                                    </b>\r\n\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2}>\r\n                                    <span style={{fontWeight:'bolder'}}>\r\n                                        {\" \"}\r\n                                        Hospital Number : <b style={{color:'rgb(4, 196, 217)'}}>{getHospitalNumber(patientObj.identifier) }</b>\r\n                                    </span>\r\n                                </Col>\r\n\r\n                                <Col md={4} className={classes.root2}>\r\n                                    <span style={{fontWeight:'bolder'}}>\r\n                                        Date Of Birth : <b style={{color:'rgb(4, 196, 217)'}}>{patientObj.dateOfBirth }</b>\r\n                                    </span>\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2}>\r\n                                    <span style={{fontWeight:'bolder'}}>\r\n                                        {\" \"}\r\n                                        Age : <b style={{color:'rgb(4, 196, 217)'}}>{calculate_age(patientObj.dateOfBirth) }</b>\r\n                                    </span>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <span style={{fontWeight:'bolder'}}>\r\n                                        {\" \"}\r\n                                        Gender :{\" \"}\r\n                                        <b style={{color:'rgb(4, 196, 217)'}}>{patientObj.gender.display }</b>\r\n                                    </span>\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2}>\r\n                                    <span style={{fontWeight:'bolder'}}>\r\n                                        {\" \"}\r\n                                        Phone Number : <b style={{color:'rgb(4, 196, 217)'}}>{getPhone(patientObj.contactPoint) }</b>\r\n                                    </span>\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2}>\r\n                                    <span style={{fontWeight:'bolder'}}>\r\n                                        {\" \"}\r\n                                        Address : <b style={{color:'rgb(4, 196, 217)'}}>{getAddress(patientObj.address)} </b>\r\n                                    </span>\r\n                                </Col>\r\n\r\n                               \r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </AccordionSummary>\r\n                <AccordionDetails className={classes.details}>\r\n{/*                    <div className={classes.column} >\r\n                        <Button\r\n                            color='red'\r\n                            content='BloodType'\r\n                            //icon='heart'\r\n                            label={{ basic: true, color: 'red', pointing: 'left', content: 'AB+' }}\r\n                        />\r\n\r\n                    </div>\r\n                    <div className={classes.column}>\r\n                        <Button\r\n                            basic\r\n                            color='blue'\r\n                            content='Height'\r\n                            icon='fork'\r\n                            label={{\r\n                                as: 'a',\r\n                                basic: true,\r\n                                color: 'blue',\r\n                                pointing: 'left',\r\n                                content: '74.5 in',\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.column}>\r\n                        <Button\r\n                            basic\r\n                            color='blue'\r\n                            content='Weight'\r\n                            icon='fork'\r\n                            label={{\r\n                                as: 'a',\r\n                                basic: true,\r\n                                color: 'blue',\r\n                                pointing: 'left',\r\n                                content: '74.5 in',\r\n                            }}\r\n                        />\r\n                    </div>*/}\r\n                    <div className={classNames( classes.helper)}>\r\n                        <Typography variant=\"caption\">\r\n                            <Label color={\"red\"} size={\"mini\"} style={{fontSize:'12px'}}>\r\n                                Biometric Status\r\n                                <Label.Detail>Not Captured</Label.Detail>\r\n                            </Label>\r\n\r\n                            <Label color={\"green\"} size={\"mini\"} style={{fontSize:'12px'}}>\r\n                                Patient Status\r\n                                <Label.Detail>Active</Label.Detail>\r\n                            </Label>\r\n                        </Typography>\r\n                    </div>\r\n\r\n                </AccordionDetails>\r\n                <Divider />\r\n                <AccordionActions>\r\n\r\n                </AccordionActions>\r\n            </Accordion>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col} from \"reactstrap\";\r\nimport { Step, Label, Segment, Icon } from \"semantic-ui-react\";\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Box from '@mui/material/Box';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\nimport Swal from \"sweetalert2\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {Button, Card, CardContent, FormControl, Grid, MenuItem, Paper, TextField, Typography} from \"@mui/material\";\r\nimport {format} from 'date-fns';\r\nimport { toast} from \"react-toastify\";\r\nimport MaterialTable from 'material-table';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    icon: {\r\n        verticalAlign: 'bottom',\r\n        height: 20,\r\n        width: 20,\r\n    },\r\n    details: {\r\n        alignItems: 'center',\r\n    },\r\n    column: {\r\n        flexBasis: '20.33%',\r\n    },\r\n    helper: {\r\n        borderLeft: `2px solid ${theme.palette.divider}`,\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\r\n    },\r\n    link: {\r\n        color: theme.palette.primary.main,\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n        },\r\n    },\r\n});\r\n\r\nconst appointmentColumns = [\r\n    { field: 'id', headerName: 'ID', width: 90 },\r\n    {\r\n        field: 'firstName',\r\n        headerName: 'First name',\r\n        width: 150,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'lastName',\r\n        headerName: 'Last name',\r\n        width: 150,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'age',\r\n        headerName: 'Age',\r\n        type: 'number',\r\n        width: 110,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        description: 'This column has a value getter and is not sortable.',\r\n        sortable: false,\r\n        width: 160,\r\n        valueGetter: (params) =>\r\n            `${params.row.firstName || ''} ${params.row.lastName || ''}`,\r\n    },\r\n];\r\n\r\nconst appointments = [\r\n    { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n\r\n];\r\n\r\n\r\nlet newDate = new Date()\r\nfunction PatientDashboard(props) {\r\n    const [loading, setLoading] = useState('');\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {};\r\n    const { handleSubmit, control } = useForm();\r\n    const [modal, setModal] = useState(false);\r\n    const [checkinStatus, setCheckinStatus]= useState(false)\r\n    const [modalCheckOut, setModalCheckOut] = useState(false);\r\n    const [services, setServices]= useState([]);\r\n    const [selectedServices, setSelectedServices]= useState({checkInServices:\"\"});\r\n    const [patientVisits, setPatientVisits]= useState([]);\r\n    const [checkOutObj, setCheckOutObj] = useState({\r\n                                                    facilityId: 1,\r\n                                                    personId: \"\",\r\n                                                    visitEndDate:format(new Date(newDate), 'yyyy-MM-dd'),\r\n                                                    visitStartDate:\"\" \r\n                                                })\r\n    const [checkInObj, setCheckInObj] = useState({\r\n        serviceIds:\"\",\r\n          visitDto: {\r\n            facilityId: 1,\r\n            personId: patientObj.id,\r\n            visitEndDate: \"\",\r\n            visitStartDate: format(new Date(newDate), 'yyyy-MM-dd')\r\n          }\r\n    })\r\n\r\n    const loadServices = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/post-service`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setServices(response.data);\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred fetching services!',\r\n            });\r\n        }\r\n    }, []);\r\n    const loadPatientVisits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/visit/visit-detail/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setPatientVisits(response.data);\r\n            response.data.map((visits)=> {\r\n                if(visits.checkOutDate===null){\r\n                    setCheckinStatus(true)\r\n                }\r\n            })\r\n\r\n\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred fetching services!',\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        loadServices();\r\n        loadPatientVisits();\r\n    }, [loadServices, loadPatientVisits]);\r\n\r\n    let visitTypesRows = null;\r\n    if (services && services.length > 0) {\r\n        visitTypesRows = services.map((service, index) => (\r\n            <MenuItem key={service.moduleServiceCode} value={service.moduleServiceCode}>{service.moduleServiceName}</MenuItem>\r\n        ));\r\n    }\r\n\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            field: 'checkInDate',\r\n            headerName: 'Checked In Date',\r\n            width: 200,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'checkOutDate',\r\n            headerName: 'Check Out Date',\r\n            width: 200,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'service',\r\n            headerName: 'Service',\r\n            width: 200,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'status',\r\n            headerName: 'Status',\r\n            width: 200,\r\n            editable: false,\r\n        }\r\n    ];\r\n\r\n    const panes = [\r\n        { menuItem: 'Patient Visit', render: () =>\r\n                <Tab.Pane>\r\n                   \r\n                    <MaterialTable\r\n                    title=\"\"\r\n                    columns={[\r\n                        {\r\n                            title: \"Checked In Date\",\r\n                            field: \"checkInDate\", filtering: false \r\n                        },\r\n                        { title: \"Check Out Date\", field: \"checkOutDate\", filtering: false  },\r\n                        { title: \"Service\", field: \"service\", filtering: false  },\r\n                        { title: \"Status\", field: \"status\", filtering: false },\r\n                    ]}\r\n                    isLoading={loading}\r\n                    data={patientVisits.map((row) => ({\r\n                        checkInDate: row.checkInDate,\r\n                        checkOutDate: row.checkOutDate,\r\n                        service:row.service,\r\n                        status:(<Label color={row.status ==='COMPLETED' ? 'green' : 'red'} size=\"mini\">{row.status}</Label>),\r\n\r\n                    }))}\r\n\r\n                    options={{\r\n                        headerStyle: {\r\n                            backgroundColor: \"#000\",\r\n                            color: \"#ffffff\",\r\n                        },\r\n                        search: true,\r\n                        // searchFieldStyle: {\r\n                        //     width : '200%',\r\n                        //     margingLeft: '250px',\r\n                        // },\r\n                        filtering: false,\r\n                        exportButton: false,\r\n                        searchFieldAlignment: 'left',\r\n                        pageSizeOptions:[10,20,100],\r\n                        pageSize:10,\r\n                        debounceInterval: 400\r\n                    }}\r\n                />\r\n                </Tab.Pane>\r\n        },\r\n        { menuItem: 'Appointments', render: () =>\r\n                <Tab.Pane>\r\n                    <div style={{ height: 400, width: '100%' }}>\r\n                        <DataGrid\r\n                            rows={appointments}\r\n                            columns={appointmentColumns}\r\n                            pageSize={5}\r\n                            rowsPerPageOptions={[5]}\r\n                            checkboxSelection\r\n                            disableSelectionOnClick\r\n                        />\r\n                    </div>\r\n                </Tab.Pane>\r\n        }\r\n    ];\r\n\r\n    const handleCheckIn = () => {\r\n        setModal(true);\r\n    };\r\n    const handleCheckOut = () => {\r\n        setModalCheckOut(true);\r\n    };\r\n\r\n    const onCancelCheckIn = () => {\r\n        setModal(false);\r\n    };\r\n    const onCancelCheckOut = () => {\r\n        setModalCheckOut(false);\r\n    };\r\n    const onDelete = () => {\r\n\r\n    };\r\n    const handleInputChangeService = (e) => {\r\n        setSelectedServices({ ...selectedServices, [e.target.name]: e.target.value });\r\n    };\r\n    //console.lo(selectedServices)\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            const today = new Date();\r\n            const visitDetails = await axios.get(`${baseUrl}patient/visit/visit-detail/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            const visitDetail = visitDetails.data;\r\n            const pendingVisit = visitDetail.find(obj => obj.status == \"PENDING\");\r\n            let visit = null;\r\n            if (!pendingVisit) {\r\n                const visitResponse = await axios.post(`${baseUrl}patient/visit`, {\r\n                    \"personId\": patientObj.id,\r\n                    \"visitStartDate\": today\r\n                }, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                visit = visitResponse.data;\r\n            } else {\r\n                visit = pendingVisit;\r\n            }\r\n            await axios.post(`${baseUrl}patient/encounter`, {\r\n                \"encounterDate\": today,\r\n                \"personId\": patientObj.id,\r\n                \"serviceCode\": data.VisitType,\r\n                \"status\": \"PENDING\",\r\n                \"visitId\": visit.id\r\n            }, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setModal(false);\r\n            await Swal.fire({\r\n                icon: 'success',\r\n                text: 'CheckedIn successfully',\r\n                timer: 1500\r\n            });\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred while checking in Patient!',\r\n            });\r\n        }\r\n    };\r\n    const onError = async () => {\r\n        await Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'An error occurred while checking in Patient!',\r\n        });\r\n    };\r\n\r\n    let checkInServicesID = [];\r\n    /**** Submit Button For CheckIN  */\r\n    const handleSubmitCheckIn = (e) => {        \r\n        e.preventDefault();              \r\n        selectedServices.checkInServices.length > 0 && selectedServices.checkInServices.map((service)=> { \r\n\r\n            if(service.id!==null){\r\n                checkInServicesID.push(service.id)\r\n                console.log(service) \r\n            }\r\n        })\r\n        checkInObj.serviceIds= checkInServicesID  \r\n        axios.post(`${baseUrl}patient/visit/checkin`, checkInObj,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n        \r\n        )\r\n        .then(response => {\r\n            toast.success(\"Patient Check-In successful\");\r\n            setCheckinStatus(true)\r\n            onCancelCheckIn()\r\n            loadPatientVisits()\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            toast.error(\"Something went wrong\");\r\n            onCancelCheckIn()        \r\n        });  \r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmitCheckOut = (e) => {        \r\n        e.preventDefault();\r\n        const getVisitID= patientVisits.find((visits)=> visits.status==='PENDING')   \r\n\r\n        axios.put(`${baseUrl}patient/visit/checkout/${getVisitID.id}`,getVisitID.id,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n        \r\n        )\r\n        .then(response => {\r\n            toast.success(\"Record save successful\");\r\n            setCheckinStatus(false)\r\n            onCancelCheckOut()\r\n            loadPatientVisits()\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            toast.error(\"Something went wrong\");\r\n            onCancelCheckOut()        \r\n        });  \r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Card>\r\n                <CardContent>\r\n                    \r\n                    <PatientCardDetail patientObj={patientObj}/>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <div className=\"row\">\r\n                                <div className=\"mb-3 col-md-3\">\r\n                                    &nbsp;\r\n                                </div>\r\n                                <div className=\"mb-3 col-md-3\">\r\n                                    &nbsp;\r\n                                </div>\r\n                                <div className=\"mb-3 col-md-3\">\r\n                                    &nbsp;\r\n                                </div>\r\n                                <div className=\"mb-3 col-md-3\">\r\n                                <Link to={\"/\"} >\r\n                                        <ButtonMui\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className=\" float-right mr-1\">\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                                        </ButtonMui>\r\n                                    </Link>\r\n                                    {checkinStatus===false ? (\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            style={{ backgroundColor: \"black\" }}\r\n                                            onClick={handleCheckIn}\r\n                                            className=\" float-right mr-1\"\r\n                                        >\r\n                                            <span style={{ textTransform: \"capitalize\" }}>CheckIn</span>\r\n                                        </Button>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                    }\r\n                                    {checkinStatus===true ? (\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            style={{ backgroundColor: \"black\" }}\r\n                                            onClick={handleCheckOut}\r\n                                            className=\" float-right mr-1\"\r\n                                        >\r\n                                            <span style={{ textTransform: \"capitalize\" }}>CheckOut</span>\r\n                                        </Button>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                    }\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <Tab panes={panes} />\r\n                        </CardContent>\r\n                    </Card>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal isOpen={modal} toggle={onCancelCheckIn}>\r\n                <ModalHeader toggle={onCancelCheckIn}>Select a Service Area</ModalHeader>\r\n                <ModalBody>\r\n                    <form onSubmit={handleSubmitCheckIn}>\r\n                        <Paper\r\n                            style={{\r\n                                display: \"grid\",\r\n                                gridRowGap: \"20px\",\r\n                                padding: \"20px\",\r\n                                margin: \"10px 10px\",\r\n                            }}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={8}>\r\n                                    <FormControl >\r\n                                       \r\n                                         <Autocomplete\r\n                                            multiple\r\n                                            id=\"checkboxes-tags-demo\"\r\n                                            options={services}\r\n                                            //disableCloseOnSelect\r\n                                            getOptionLabel={(option) => option.moduleServiceName}\r\n                                            onChange={(e, i) => {\r\n                                                console.log(i)\r\n                                                setSelectedServices({ ...selectedServices, checkInServices: i });\r\n                                            }}\r\n                                            renderOption={(props, option, { selected }) => (\r\n                                                <li {...props}>\r\n                                                <Checkbox\r\n                                                    icon={icon}\r\n                                                    checkedIcon={checkedIcon}\r\n                                                    style={{ marginRight: 8 }}\r\n                                                    checked={selected}\r\n                                                />\r\n                                                {option.moduleServiceName}\r\n                                                </li>\r\n                                            )}\r\n                                            style={{ width: 400 }}\r\n                                            renderInput={(params) => (\r\n                                                <TextField {...params} label=\"Services\" />\r\n                                            )}\r\n                                            />\r\n                                       \r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Button type={\"submit\"} variant=\"contained\" color={\"primary\"}>Submit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </form>\r\n                </ModalBody>\r\n            </Modal>\r\n            {/* Modal for CheckOut Patient */}\r\n            <Modal isOpen={modalCheckOut} toggle={onCancelCheckOut}>\r\n                <ModalHeader toggle={onCancelCheckOut}>CheckOut </ModalHeader>\r\n                <ModalBody>\r\n                    <form >\r\n                        <Paper\r\n                            style={{\r\n                                display: \"grid\",\r\n                                gridRowGap: \"20px\",\r\n                                padding: \"20px\",\r\n                                margin: \"10px 10px\",\r\n                            }}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                   <h5>Are you sure you want to check-out patient?</h5>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Button type={\"submit\"} onClick={handleSubmitCheckOut} variant=\"contained\" color={\"primary\"}>Yes</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </form>\r\n                </ModalBody>\r\n            </Modal>\r\n            {/* End of Checkout Modal */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(PatientDashboard);\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ContentCut from '@mui/icons-material/ContentCut';\r\nimport Typography from '@mui/material/Typography';\r\nimport {FaEye, FaCaretDown } from \"react-icons/fa\";\r\nimport Divider from '@mui/material/Divider';\r\nimport {useRef} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst options = ['Delete', 'Edit'];\r\n\r\n\r\n\r\nexport default function SplitActionButton(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n    const handleClick = () => {\r\n        console.info(`You clicked ${options[selectedIndex]}`);\r\n    };\r\n\r\n    const handleMenuItemClick = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup variant=\"contained\" ref={anchorRef} style={{backgroundColor:'rgb(4, 196, 217)', height:'30px',width:'130px'}} >\r\n                <Link to={props.actions[0].to}>\r\n                    <Button size=\"small\" onClick={handleClick} variant=\"contained\" startIcon={props.actions[0].icon} style={{backgroundColor:'rgb(4, 196, 217)'}}>\r\n                        <Typography variant=\"h7\" style={{fontWeight:'bolder'}}>{props.actions[0].name}</Typography>\r\n                    </Button>\r\n                </Link>\r\n\r\n                <Divider orientation=\"vertical\" flexItem>\r\n                </Divider>\r\n                <Button\r\n                    size=\"medium\"\r\n                    aria-controls={open ? 'split-button-menu' : undefined}\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    aria-label=\"select merge strategy\"\r\n                    aria-haspopup=\"menu\"\r\n                    onClick={handleToggle}\r\n                    style={{backgroundColor:'rgb(4, 196, 217)'}}\r\n                >\r\n                    <FaCaretDown size='24' />\r\n                </Button>\r\n            </ButtonGroup>\r\n            <Popper\r\n                open={open}\r\n                anchorEl={anchorRef.current}\r\n                role={undefined}\r\n                transition\r\n                disablePortal\r\n                style={{ zIndex:'10000' }}\r\n            >\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                        {...TransitionProps}\r\n                        style={{\r\n                            transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                            zIndex:'1000'\r\n                        }}\r\n                    >\r\n                        {/*width: 130,*/}\r\n                        <Paper sx={{  maxWidth: '100%', marginTop:'2px', zIndex:'1000' }}>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MenuList id=\"split-button-menu\" autoFocusItem>\r\n                                    {props.actions.slice(1).map((option, index) => (\r\n                                        <MenuItem\r\n                                            key={Math.random()}\r\n                                        >\r\n                                            <Link\r\n                                                to={option.to}\r\n                                            >\r\n                                                {option.icon}<span style={{color: '#645f5f', fontWeight:'bolder', fontSize:'12px'}}>{option.name}</span>\r\n                                            </Link>\r\n\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, {useState, useEffect, useCallback} from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Card,CardBody,} from 'reactstrap';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport {FaEye, FaUserPlus} from \"react-icons/fa\";\r\nimport { MdDashboard, MdDeleteForever, MdModeEdit,MdPerson} from \"react-icons/md\";\r\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Label } from 'semantic-ui-react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"./patient.css\";\r\nimport SplitActionButton from './SplitActionButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\nconst actionItems = [\r\n    {\r\n        name:'Patient Dashboard',\r\n        icon:<MdPerson size=\"20\" />,\r\n    },\r\n    {\r\n        name:'Edit Patient',\r\n        icon:<MdModeEdit size=\"20\" />,\r\n    },\r\n    {\r\n        name:'Delete Patient',\r\n        icon:<MdDeleteForever size=\"20\"  />,\r\n    }\r\n]\r\nconst SyncList = (props) => {\r\n    const [patients, setPatients] = useState([]);\r\n    const [loading, setLoading] = useState('');\r\n    const [modal, setModal] = useState(false);\r\n    const [patient, setPatient] = useState(false);\r\n\r\n    const toggle = (id) => {\r\n        const patient = patients.find(obj => obj.id == id);\r\n        setPatient(patient);\r\n        setModal(!modal);\r\n    }\r\n\r\n    const loadPatients = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setPatients(response.data);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }, []);\r\n\r\n    const onDelete = async (id) => {\r\n        try {\r\n            if (id) {\r\n                const response = await axios.delete(`${baseUrl}patient/${id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                window.location.reload();\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const onCancelDelete = () => {\r\n        setModal(false);\r\n    }\r\n\r\n    const calculate_age = dob => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n    \r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    const getAddress = (address) => {\r\n        const city = address && address.address && address.address.length > 0 ? address.address[0].city : null;\r\n        return city;\r\n    };\r\n\r\n    const getGender = (gender) => {\r\n        return gender.display;\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadPatients();\r\n    }, [loadPatients]);\r\n\r\n    function actionItems(row){\r\n       return  [\r\n           {\r\n               name:'View',\r\n               icon:<FaEye  size=\"22\"/>,\r\n               to:{\r\n                   pathname: \"/register-patient\",\r\n                   state: { patientId : row.id }\r\n               }\r\n           },\r\n            {\r\n                name:'Patient Dashboard',\r\n                icon:<MdPerson size=\"20\" color='rgb(4, 196, 217)' />,\r\n                to:{\r\n                    pathname: \"/patient-dashboard\",\r\n                    state: { patientObj: row }\r\n                }\r\n            },\r\n            {\r\n                name:'Edit Patient',\r\n                icon:<MdModeEdit size=\"20\" color='rgb(4, 196, 217)' />,\r\n                to:{\r\n                    pathname: \"/register-patient\",\r\n                    state: { patientId : row.id }\r\n                }\r\n            },\r\n            {\r\n                name:'Delete Patient',\r\n                icon:<MdDeleteForever size=\"20\" color='rgb(4, 196, 217)'  />,\r\n                to:{\r\n                    pathname: \"/#\",\r\n                    state: { patientObj: row }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n  return (\r\n    <div>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <Card>\r\n            <CardBody>\r\n\r\n                <Link to={\"register-patient\"}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\" float-right mr-1\"\r\n                        startIcon={<FaUserPlus size=\"25\"/>}\r\n                        style={{backgroundColor:'rgb(4, 196, 217)'}}\r\n                    >\r\n                        <span style={{ textTransform: \"capitalize\", fontWeight:'bolder' }}>New Patient</span>\r\n                    </Button>\r\n                </Link>\r\n                <br/><br/>\r\n                <br/>\r\n                <MaterialTable\r\n                    title=\"Find patients\"\r\n                    columns={[\r\n                        {\r\n                            title: \"Patient Name\",\r\n                            field: \"name\", filtering: false\r\n                        },\r\n                        { title: \"Patient ID\", field: \"id\" , filtering: false},\r\n                        { title: \"Gender\", field: \"gender\", filtering: false },\r\n                        { title: \"Date Of Birth\", field: \"dateOfBirth\", filtering: false },\r\n                        { title: \"Age\", field: \"age\", filtering: false },\r\n                        /*{ title: \"Address\", field: \"address\", filtering: false },*/\r\n                        { title: \"Status\", field: \"status\", filtering: false },\r\n                        {title: \"Actions\", field: \"actions\", filtering: false },\r\n                    ]}\r\n                    isLoading={loading}\r\n                    data={patients.map((row) => ({\r\n                        name: row.firstName +  ' ' + row.otherName +  ' ' + row.surname,\r\n                        id: getHospitalNumber(row.identifier),\r\n                        gender: getGender(row.gender),\r\n                        dateOfBirth: row.dateOfBirth,\r\n                        age: (row.dateOfBirth === 0 ||\r\n                            row.dateOfBirth === undefined ||\r\n                            row.dateOfBirth === null ||\r\n                            row.dateOfBirth === \"\" )\r\n                            ? 0\r\n                            : calculate_age(row.dateOfBirth),\r\n                        /*address: getAddress(row.address),*/\r\n/*                        status: row.active ?\r\n                            (<Label color=\"green\" size=\"mini\">active</Label>)\r\n                            : (<Label color=\"teal\" size=\"mini\">not-active</Label>),*/\r\n                        status: row.active ?\r\n                            \"Active\"\r\n                            : \"Not-Active\",\r\n                        actions:\r\n                            <div>\r\n                                <SplitActionButton actions={actionItems(row)} />\r\n{/*                                <Menu>\r\n                                    <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", }}>\r\n                                        Actions <span aria-hidden>▾</span>\r\n                                    </MenuButton>\r\n                                    <MenuList className={'menuClass'} >\r\n                                        <MenuItem  style={{ color:\"#000 !important\"}}>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-dashboard\",\r\n                                                    state: { patientObj: row }\r\n                                                }}\r\n                                            >\r\n                                                <MdDashboard size=\"15\" />{\" \"}<span style={{color: '#000'}}>Patient Dashboard</span>\r\n                                            </Link>\r\n                                        </MenuItem>\r\n                                        <MenuItem style={{ color:\"#000 !important\"}}>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/register-patient\",\r\n                                                    state: { patientId : row.id }\r\n                                                }}\r\n                                            >\r\n                                                <MdModeEdit size=\"15\" />{\" \"}<span style={{color: '#000'}}>Edit Patient </span>\r\n                                            </Link>\r\n                                        </MenuItem>\r\n                                        <MenuItem style={{ color:\"#000 !important\"}}>\r\n                                            <Link\r\n                                                onClick={(e) => toggle(row.id)}\r\n                                                to={{\r\n                                                    pathname: \"/#\",\r\n                                                    currentId: row\r\n                                                }}\r\n                                            >\r\n                                                <MdDeleteForever size=\"15\"  />{\" \"}\r\n                                                <span style={{color: '#000'}}>Delete Patient</span>\r\n                                            </Link>\r\n                                        </MenuItem>\r\n                                    </MenuList>\r\n                                </Menu>*/}\r\n                            </div>\r\n                    }))}\r\n\r\n                    options={{\r\n                        headerStyle: {\r\n                            //backgroundColor: \"#9F9FA5\",\r\n                            color: \"#000\",\r\n                        },\r\n                        searchFieldStyle: {\r\n                            width : '200%',\r\n                            margingLeft: '250px',\r\n                        },\r\n                        filtering: true,\r\n                        exportButton: false,\r\n                        searchFieldAlignment: 'left',\r\n                        pageSizeOptions:[10,20,100],\r\n                        pageSize:10,\r\n                        debounceInterval: 400\r\n                    }}\r\n                />\r\n\r\n            </CardBody>\r\n        </Card>\r\n        <Modal isOpen={modal} toggle={onCancelDelete}>\r\n            <ModalHeader toggle={onCancelDelete}>Delete Patient</ModalHeader>\r\n            <ModalBody>\r\n                Are you sure to delete this record? { patient ? patient.surname +  ', ' + patient.firstname +  ' ' + patient.otherName : '' }\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" type=\"button\" onClick={(e) => onDelete(patient.id)}>Yes</Button>{' '}\r\n                <Button color=\"secondary\" type=\"button\" onClick={(e) => onCancelDelete()}>No</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SyncList;\r\n\r\n\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Card, CardContent, FormControl, Grid, MenuItem, Paper, TextField, Typography, Box} from \"@mui/material\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst columns = [\r\n    {\r\n        field: 'weight',\r\n        headerName: 'Weight',\r\n        width: 200,\r\n        editable: false,\r\n    },\r\n    {\r\n        field: 'height',\r\n        headerName: 'Height',\r\n        width: 200,\r\n        editable: false,\r\n    },\r\n    {\r\n        field: 'temperature',\r\n        headerName: 'Temperature',\r\n        width: 200,\r\n        editable: false,\r\n    },\r\n    {\r\n        field: 'status',\r\n        headerName: 'Status',\r\n        width: 200,\r\n        editable: false,\r\n    }\r\n];\r\n\r\nconst PatientVitals = () => {\r\n    const rows = [];\r\n\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={3}>&nbsp;</Grid>\r\n                    <Grid item xs={3}>&nbsp;</Grid>\r\n                    <Grid item xs={3}>&nbsp;</Grid>\r\n                    <Grid item xs={3}>\r\n                        <Box\r\n                            m={1}\r\n                            display=\"flex\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Link to={{\r\n                                pathname: \"/add-patient-vital\"\r\n                            }}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    style={{ backgroundColor: \"black\" }}\r\n                                >\r\n                                    <AddIcon /> Add Vital Signs\r\n                                </Button>\r\n                            </Link>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Box height={\"200px\"}>\r\n                            <DataGrid\r\n                                rows={rows}\r\n                                columns={columns}\r\n                                pageSize={5}\r\n                                rowsPerPageOptions={[5]}\r\n                                disableSelectionOnClick\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PatientVitals;\r\n","import React, {useState} from \"react\";\r\nimport {Button, Card, CardContent, FormControl, Grid, Paper, TextField, Typography} from \"@mui/material\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {LocalizationProvider} from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport {AdapterDateFns} from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport {DatePicker} from \"@mui/x-date-pickers\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\n\r\nconst AddPatientVitals = () => {\r\n    const { handleSubmit, control } = useForm();\r\n    const onSubmit = async (data) => {\r\n        console.log(data);\r\n        try {\r\n            const InData = {\r\n                \"bodyWeight\": data.Weight,\r\n                \"diastolic\": data.Diastolic,\r\n                \"encounterDate\": data.DateOfVitalSigns,\r\n                \"height\": data.Height,\r\n                \"personId\": 1,\r\n                \"systolic\": data.Systolic\r\n            }\r\n            await axios.post(`${baseUrl}patient/vital-sign`, InData, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            await Swal.fire({\r\n                icon: 'success',\r\n                text: 'Add Patient Vital successfully',\r\n                timer: 1500\r\n            });\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred while saving patient vitals!',\r\n            });\r\n        }\r\n    };\r\n    const onError = () => {\r\n\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <form onSubmit={handleSubmit(onSubmit, onError)}>\r\n                    <Paper\r\n                        style={{\r\n                            display: \"grid\",\r\n                            gridRowGap: \"20px\",\r\n                            padding: \"20px\",\r\n                            margin: \"10px 10px\",\r\n                        }}>\r\n                        <Typography variant=\"h6\">Take Patient Vitals</Typography>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControl fullWidth>\r\n                                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                        <Controller\r\n                                            name=\"DateOfVitalSigns\"\r\n                                            control={control}\r\n                                            defaultValue={null}\r\n                                            render={({ field: { onChange, value }, fieldState: { error}}) => (\r\n                                                <DatePicker\r\n                                                    renderInput={(props) => <TextField {...props} />}\r\n                                                    label=\"Date Of Vital Signs\"\r\n                                                    selected={value}\r\n                                                    value={value}\r\n                                                    onChange={onChange}\r\n                                                    error={!!error}\r\n                                                    helperText={error ? error.message : null}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </LocalizationProvider>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl fullWidth>\r\n                                    <Controller\r\n                                        name=\"Pulse\"\r\n                                        control={control}\r\n                                        defaultValue=\"\"\r\n                                        render={({ field: { onChange, value }, fieldState: { error }}) => (\r\n                                            <TextField\r\n                                                label=\"Pulse(bpm)\"\r\n                                                id=\"Pulse\"\r\n                                                variant=\"outlined\"\r\n                                                value={value}\r\n                                                onChange={onChange}\r\n                                                error={!!error}\r\n                                                helperText={error ? error.message : null}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl fullWidth>\r\n                                    <Controller\r\n                                        name=\"RespiratoryRate\"\r\n                                        control={control}\r\n                                        defaultValue=\"\"\r\n                                        render={({ field: { onChange, value }, fieldState: { error }}) => (\r\n                                            <TextField\r\n                                                label=\"Respiratory Rate (bpm)\"\r\n                                                id=\"RespiratoryRate\"\r\n                                                variant=\"outlined\"\r\n                                                value={value}\r\n                                                onChange={onChange}\r\n                                                error={!!error}\r\n                                                helperText={error ? error.message : null}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl fullWidth>\r\n                                    <Controller\r\n                                        name=\"Temperature\"\r\n                                        control={control}\r\n                                        defaultValue=\"\"\r\n                                        render={({ field: { onChange, value }, fieldState: { error }}) => (\r\n                                            <TextField\r\n                                                label=\"Temperature (C)\"\r\n                                                id=\"Temperature\"\r\n                                                variant=\"outlined\"\r\n                                                value={value}\r\n                                                onChange={onChange}\r\n                                                error={!!error}\r\n                                                helperText={error ? error.message : null}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={6}>\r\n                                        <FormControl fullWidth>\r\n                                            <Controller\r\n                                                name=\"Systolic\"\r\n                                                control={control}\r\n                                                defaultValue=\"\"\r\n                                                render={({ field: { onChange, value }, fieldState: { error }}) => (\r\n                                                    <TextField\r\n                                                        label=\"Systolic (mmHg)\"\r\n                                                        id=\"Systolic\"\r\n                                                        variant=\"outlined\"\r\n                                                        value={value}\r\n                                                        onChange={onChange}\r\n                                                        error={!!error}\r\n                                                        helperText={error ? error.message : null}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6}>\r\n                                        <FormControl fullWidth>\r\n                                            <Controller\r\n                                                name=\"Diastolic\"\r\n                                                control={control}\r\n                                                defaultValue=\"\"\r\n                                                render={({ field: { onChange, value }, fieldState: { error }}) => (\r\n                                                    <TextField\r\n                                                        label=\"Diastolic (mmHg)\"\r\n                                                        id=\"Diastolic\"\r\n                                                        variant=\"outlined\"\r\n                                                        value={value}\r\n                                                        onChange={onChange}\r\n                                                        error={!!error}\r\n                                                        helperText={error ? error.message : null}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl fullWidth>\r\n                                    <Controller\r\n                                        name=\"Weight\"\r\n                                        control={control}\r\n                                        defaultValue=\"\"\r\n                                        render={({ field: { onChange, value }, fieldState: { error }}) => (\r\n                                            <TextField\r\n                                                label=\"Weight (Kg)\"\r\n                                                id=\"Weight\"\r\n                                                variant=\"outlined\"\r\n                                                value={value}\r\n                                                onChange={onChange}\r\n                                                error={!!error}\r\n                                                helperText={error ? error.message : null}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControl fullWidth>\r\n                                    <Controller\r\n                                        name=\"Height\"\r\n                                        control={control}\r\n                                        defaultValue=\"\"\r\n                                        render={({ field: { onChange, value }, fieldState: { error }}) => (\r\n                                            <TextField\r\n                                                label=\"Height (cm)\"\r\n                                                id=\"Height\"\r\n                                                variant=\"outlined\"\r\n                                                value={value}\r\n                                                onChange={onChange}\r\n                                                error={!!error}\r\n                                                helperText={error ? error.message : null}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <Button type={\"button\"} variant=\"contained\" color={\"error\"}>Cancel</Button>\r\n                                &nbsp;&nbsp;\r\n                                <Button type={\"submit\"} variant=\"contained\" color={\"primary\"}>Submit</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </form>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default AddPatientVitals;\r\n","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport RegisterPatient from './main/webapp/components/RegisterPatient';\r\nimport PatientDashboard from './main/webapp/components/PatientDashboard';\r\nimport Dashboard from './main/webapp/components/Dashboard';\r\nimport PatientVitals from './main/webapp/components/PatientVitals';\r\nimport AddPatientVitals from './main/webapp/components/Add-Patient-Vitals';\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n         \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/patient-dashboard\">\r\n            <PatientDashboardPage />\r\n          </Route>\r\n          <Route path=\"/patient-vitals\">\r\n            <PatientVitalsPage />\r\n          </Route>\r\n          <Route path=\"/add-patient-vital\">\r\n            <AddPatientVitalsPage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Dashboard />\r\n          </Route>\r\n          \r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction PatientDashboardPage() {\r\n  return <PatientDashboard />;\r\n}\r\nfunction RegisterPatientPage() {\r\n  return <RegisterPatient />;\r\n}\r\nfunction PatientVitalsPage() {\r\n  return <PatientVitals />\r\n}\r\nfunction AddPatientVitalsPage() {\r\n  return <AddPatientVitals />\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}